{"version":3,"mappings":"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","names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","createRoot","hydrateRoot","AudioUploader","onAudioLoad","isLoading","handleFileUpload","useCallback","event","file","_a","target","files","startsWith","alert","url","URL","createObjectURL","audio","Audio","addEventListener","audioFile","duration","name","load","handleDrop","preventDefault","dataTransfer","handleDragOver","className","children","Sparkles","Upload","Music","jsxRuntimeExports","onDrop","onDragOver","accept","onChange","disabled","AudioPlayer","currentTime","isPlaying","onTimeUpdate","onPlayPause","startTime","endTime","isLooping","audioRef","useRef","setDuration","useState","useEffect","handleTimeUpdate","time","handleLoadedMetadata","removeEventListener","pause","Math","abs","play","catch","console","error","formatTime","floor","toString","padStart","src","preload","onClick","Pause","Play","WaveformVisualizer","beatMarkers","cutMarkers","onBeatDetected","onAddCut","onRemoveCut","onMoveCut","onSeek","onTrimChange","zoom","onZoomChange","onStop","onToggleLoop","onRandomMode","canvasRef","cutAreaRef","containerRef","waveformData","setWaveformData","isAnalyzing","setIsAnalyzing","isDragging","setIsDragging","viewOffset","setViewOffset","selectedTool","setSelectedTool","hasDragged","setHasDragged","async","audioContext","AudioContext","arrayBuffer","channelData","decodeAudioData","getChannelData","samples","min","length","blockSize","filteredData","Float32Array","i","sum","j","index","beats","threshold","minInterval","smoothed","amplitude","lastBeat","push","intensity","close","getVisibleRange","visibleDuration","maxOffset","max","clampedOffset","visibleStart","visibleEnd","playheadBuffer","newOffset","drawWaveform","canvas","ctx","getContext","rect","getBoundingClientRect","width","height","dpr","window","devicePixelRatio","style","scale","clearRect","imageSmoothingEnabled","imageSmoothingQuality","startOffset","endOffset","startSample","visibleSamples","pixelsPerSample","trimStartX","trimEndX","fillStyle","fillRect","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","shadowColor","shadowBlur","font","textAlign","fillText","centerY","x","y","closePath","fill","forEach","cut","color","shadowOffsetX","shadowOffsetY","currentX","handleCanvasClick","clientX","left","clientY","clickedCut","find","cutX","id","handleCutAreaClick","detail","snapDistance","nearestBeat","beat","snapTime","handleMouseMove","handleMouseUp","handleWheel","stopPropagation","ctrlKey","metaKey","zoomDelta","deltaY","newZoom","scrollDelta","deltaX","scrollSpeed","handleLiveCut","handleSetIn","handleSetOut","navigateTimeline","direction","step","ChevronLeft","ChevronRight","CornerDownLeft","CornerDownRight","Shuffle","Scissors","Square","RotateCcw","ZoomOut","toFixed","ZoomIn","onWheel","onMouseMove","onMouseUp","onMouseLeave","toUpperCase","imageRendering","VideoTrimmer","video","planIndex","audioDuration","planDuration","onClose","videoRef","timelineRef","setCurrentTime","setIsPlaying","fixedZoneDuration","zoneStartTime","setZoneStartTime","isVideoLoaded","setIsVideoLoaded","videoElement","maxZoneStart","handleEnded","handlePlayPause","handleSeek","clampedTime","handleZoneMove","newStartTime","clampedStart","newCurrentTime","handleTimelineClick","clickTime","handleMouseDown","moveX","newTime","handleApplyTrim","handleReset","handleCloseTrimmer","minutes","seconds","milliseconds","trimmedDuration","videoProgress","startPercent","endPercent","zoneWidthPercent","title","videoUrl","crossOrigin","playsInline","onMouseDown","value","parseFloat","TrimmedVideo","trimSettings","isLoaded","setIsLoaded","autoPlay","loop","muted","onError","display","img","document","createElement","thumbnail","alt","parentNode","appendChild","PreviewPanel","currentTheme","videoAssignments","externalVideoAssignments","onVideoAssignmentsChange","onVideoTrimChange","videoTrimSettings","Map","setVideoAssignments","trimmerState","setTrimmerState","isOpen","trimmedPlans","setTrimmedPlans","Set","currentCut","currentColor","currentPlan","currentVideo","useMemo","get","sortedCuts","sort","nextCut","planVideo","handleOpenTrimmer","getPlanDuration","previousCutTime","_b","_c","getCurrentPlanNumber","isVideoTooShort","filter","slice","aspectRatio","Fragment","backgroundColor","plan1Duration","plan1Video","isActive","isPast","round","has","map","size","firstCutTime","cutIndex","planEndTime","calculatePlanDuration","prev","add","notification","cssText","innerHTML","body","setTimeout","opacity","transform","removeChild","trimAudioFile","options","audioBuffer","sampleRate","endSample","trimmedLength","Error","trimmedBuffer","createBuffer","numberOfChannels","channel","originalData","trimmedData","wavBlob","buffer","format","bitDepth","blockAlign","byteRate","dataSize","bufferSize","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","charCodeAt","setUint32","setUint16","sample","intSample","setInt16","Blob","audioBufferToWav","FileNamingService","generateBasePrefix","context","category","templateNumber","musicId","projectSettings","planCount","ceil","generateProjectFilename","this","generateMusicFilename","originalName","basePrefix","generateFinalVideoFilename","compression","generateThumbnailFilename","generateRawVideoFilename","originalTitle","generateVideoExportFilename","extractSettingsFromDOM","querySelector","categoryValue","templateValue","musicValue","querySelectorAll","input","inputElement","parentText","parentElement","textContent","toLowerCase","placeholder","includes","createContext","ExportPanel","isExporting","setIsExporting","exportSettings","setExportSettings","generateFileName","namingContext","replace","Settings","FileText","Users","snapcutData","now","Date","audioFileName","mainTimeline","segments","segment","createVideoPlaceholderSegments","segmentDuration","planColors","backgroundBlurEnabled","animationStartScale","blend","none","colorAdjustment","sharpness","exposure","temperature","contrast","saturation","hue","contentRotation","aspect","aspectFill","animationStartRotation","isAnimated","animationEndScale","position","animationEndPosition","kind","empty","animationEndRotation","animationStartPosition","rotation","crypto","randomUUID","lastModificationDate","editionProject","r_9_16","superpositionTimeline","audioTimeline","fileName","gain","playbackSpeed","fileTrimStart","isMuted","generateSnapcutJSON","jsonBlob","JSON","stringify","filename","href","download","click","revokeObjectURL","trimmedAudioBlob","originalFileName","blob","downloadAudioBlob","errorMessage","message","RandomModeDialog","onGenerate","hasInOutPoints","existingCutsCount","setPlanCount","replaceExisting","setReplaceExisting","activeDuration","maxRecommendedPlans","X","AlertTriangle","Zap","parseInt","checked","dangerouslySetInnerHTML","__html","VideoServiceError","constructor","code","originalError","super","PEXELS_API_URL","PEXELS_API_KEY","API_LIMITS","pexelsService","requestCount","lastResetTime","getHeaders","Authorization","canMakeRequest","transformPexelsVideo","pexelsVideo","theme","bestVideo","video_files","file_type","quality","video_pictures","picture","image","tags","join","link","avgColor","avg_color","author","user","searchVideosByTheme","params","customKeywords","allKeywords","getThemeKeywords","searchQuery","searchParams","set","perPage","page","orientation","response","fetch","headers","ok","status","videos","json","minDuration","maxDuration","getPopularVideos","limit","data","keywords","videoTags","tag","some","keyword","getMockVideos","Travel","Lifestyle","Fashion","Retro","Party","Sport","Games","Food","Vlog","social","Array","from","_","random","getUsageStats","hoursSinceReset","requestsThisHour","maxRequestsPerHour","timeUntilReset","hasApiKey","DEFAULT_CACHE_CONFIG","maxAge","maxVideosPerTheme","enableLocalStorage","videoCache","config","memoryCache","STORAGE_KEY","STORAGE_META_KEY","loadFromStorage","startCleanupInterval","memoryResult","storageResult","getFromStorage","limitedVideos","saveToStorage","hasInStorage","delete","deleteFromStorage","clear","localStorage","removeItem","getStats","memoryStats","themes","keys","totalVideos","values","reduce","storageStats","sizeKB","cached","getItem","parse","entry","memory","storage","expiresAt","existingCache","loadStorageData","timestamp","setItem","updateStorageMeta","clearExpiredFromStorage","retryError","themeKey","entries","hasExpired","meta","lastUpdate","version","setInterval","videoService","getVideosByTheme","forceRefresh","hasCustomKeywords","cachedVideos","getPopularVideosByTheme","searchVideos","preloadPopularThemes","promises","Promise","resolve","allSettled","clearCache","cacheStats","cache","api","totalCachedVideos","availableThemes","isThemeAvailable","getVideoById","filterVideosByDuration","getRecommendedVideos","popular","regular","all","combined","popularIds","v","VideoDebug","stats","setStats","setIsOpen","updateStats","interval","clearInterval","Monitor","Wifi","Database","__vitePreload","planVideoAssigner","then","planVideoAssigner$1","__VITE_PRELOAD__","shuffleAssignments","DEFAULT_THUMBNAIL_CONFIGS","large","small","generateVideoThumbnail","timeSeconds","reject","readyState","HAVE_CURRENT_DATA","handleLoadedData","generateThumbnailFromVideo","originalTime","handleSeeked","videoAspect","videoWidth","videoHeight","canvasAspect","drawWidth","drawHeight","offsetX","offsetY","drawImage","toBlob","generateVideoThumbnails","customConfigs","largeConfig","smallConfig","downloadThumbnail","remove","FFMessageType","getMessageID","messageID","ERROR_NOT_LOADED","ERROR_TERMINATED","FFmpeg","__privateAdd","_worker","_resolves","_rejects","_logEventCallbacks","_progressEventCallbacks","__publicField","_registerHandlers","__privateGet","onmessage","LOAD","loaded","MOUNT","UNMOUNT","EXEC","FFPROBE","WRITE_FILE","READ_FILE","DELETE_FILE","RENAME","CREATE_DIR","LIST_DIR","DELETE_DIR","LOG","PROGRESS","ERROR","_send","trans","signal","postMessage","DOMException","once","classWorkerURL","__privateSet","Worker","args","timeout","ids","terminate","path","Uint8Array","fsType","mountPoint","encoding","oldPath","newPath","on","callback","off","FFFSType","WeakMap","ERROR_RESPONSE_BODY_READER","ERROR_INCOMPLETED_DOWNLOAD","fetchFile","test","atob","split","File","fileReader","FileReader","onload","result","onerror","readAsArrayBuffer","toBlobURL","mimeType","progress","cb","buf","resp","total","reader","getReader","chunks","received","done","read","delta","chunk","downloadWithProgress","videoEditor","ffmpeg","initialize","onProgress","stage","coreURL","wasmURL","localError","cdnUrls","baseURL","createVideoSegments","videoTrims","downloadAndPrepareVideos","videoData","writeFile","generateFFmpegCommand","compConfig","compressions","command","filterComplex","trimStart","trimEnd","trimDuration","concatInputs","bitrate","exportFinalVideo","audioStartTime","audioEndTime","high","medium","thumbnails","audioData","ffmpegCommand","exec","readFile","videoBlob","firstVideo","thumbnailLarge","thumbnailSmall","metadata","resolution","fileSize","cleanup","listDir","deleteFile","detectSharedArrayBuffer","SharedArrayBuffer","available","reason","suggestions","MasterExportPanel","exportProgress","setExportProgress","exportStatus","setExportStatus","video720p","video360p","setError","canExport","hasValidDuration","hasVideos","updateProgress","isComplete","updateStatus","firstDuration","mediaType","exportAll","jsonFilename","jsonUrl","jsonLink","audioFilename","audioUrl","audioLink","hasVideoExportError","videoExportErrorMessage","video720pFilename","video720pUrl","video720pLink","video360pFilename","video360pUrl","video360pLink","largeThumbnailFilename","smallThumbnailFilename","generateThumbnailFromUrl","largeThumbnail","smallThumbnail","thumbError","successCount","getStatusIcon","CheckCircle","AlertCircle","Package","Loader","Download","sabStatus","suggestion","s","THEMES","label","icon","PexelsVideoManager","showManager","setShowManager","selectedTheme","setSelectedTheme","setKeywords","setIsLoading","searchResults","setSearchResults","currentPage","setCurrentPage","hasMoreVideos","setHasMoreVideos","selectedAuthor","setSelectedAuthor","setMinDuration","setMaxDuration","totalPlans","projectFilename","filteredResults","filtered","availableAuthors","resetFilters","handleAuthorClick","authorName","loadMore","pageToLoad","keywordArray","trim","results","loadMoreVideos","shuffleVideos","newAssignments","availableVideos","randomIndex","selectedVideo","splice","downloadAllVideos","baseProjectName","videoIndex","Search","Filter","RefreshCw","assignVideoToPlan","removeVideoFromPlan","currentAssignments","assignVideosToPlans","forceReassign","selectVideoForPlan","strategies","getVideoForPlan","getAllAssignments","getAssignmentStats","assignments","plan","videoTitle","videoId","videoDuration","reassignVideoToPlan","planIndexes","shuffledVideos","clearAssignments","getAvailableVideos","previewAssignment","availableCount","preview","previewAssignments","COLORS","App","setAudioFile","setBeatMarkers","setCutMarkers","timelineState","setTimelineState","setIsLooping","isRandomModeOpen","setIsRandomModeOpen","setCurrentTheme","isLoadingVideos","setIsLoadingVideos","setVideoTrimSettings","handleAudioLoad","handleBeatDetected","handleAddCut","defaultDuration","newCut","handleRemoveCut","handleMoveCut","handleStop","handleToggleLoop","handleTrimChange","start","end","handleZoomChange","handleRandomMode","handleRandomModeClose","handleGenerateRandomCuts","newCuts","generateRandomCuts","minCutInterval","prioritizeStrongBeats","handleVideoAssignmentsChange","handleVideoTrimChange","newSettings","handleKeyPress","activeElement","tagName","getAttribute","getElementById","render","StrictMode"],"ignoreList":[0,1,2,18,19,20,21,22,23,24,25],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/AudioUploader.tsx","../../src/components/AudioPlayer.tsx","../../src/components/WaveformVisualizer.tsx","../../src/components/VideoTrimmer.tsx","../../src/components/PreviewPanel.tsx","../../src/utils/audioTrimmer.ts","../../src/services/fileNamingService.ts","../../src/components/ExportPanel.tsx","../../src/components/RandomModeDialog.tsx","../../src/types/video.ts","../../src/services/pexelsService.ts","../../src/services/videoCache.ts","../../src/services/videoService.ts","../../src/components/VideoDebug.tsx","../../src/utils/thumbnailGenerator.ts","../../node_modules/@ffmpeg/ffmpeg/dist/esm/const.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/utils.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/errors.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/classes.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/types.js","../../node_modules/@ffmpeg/util/dist/esm/errors.js","../../node_modules/@ffmpeg/util/dist/esm/index.js","../../node_modules/@ffmpeg/util/dist/esm/const.js","../../src/services/videoEditor.ts","../../src/utils/sharedarraybuffer-detection.ts","../../src/components/MasterExportPanel.tsx","../../src/components/PexelsVideoManager.tsx","../../src/services/planVideoAssigner.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useCallback } from 'react';\nimport { Upload, Music, Sparkles } from 'lucide-react';\nimport { AudioFile } from '../types';\n\ninterface AudioUploaderProps {\n  onAudioLoad: (audioFile: AudioFile) => void;\n  isLoading: boolean;\n}\n\nexport const AudioUploader: React.FC<AudioUploaderProps> = ({ onAudioLoad, isLoading }) => {\n  const handleFileUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    if (!file.type.startsWith('audio/')) {\n      alert('Please select an audio file');\n      return;\n    }\n\n    const url = URL.createObjectURL(file);\n    const audio = new Audio(url);\n    \n    audio.addEventListener('loadedmetadata', () => {\n      const audioFile: AudioFile = {\n        file,\n        url,\n        duration: audio.duration,\n        name: file.name\n      };\n      onAudioLoad(audioFile);\n    });\n\n    audio.load();\n  }, [onAudioLoad]);\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type.startsWith('audio/')) {\n      const fakeEvent = { target: { files: [file] } } as any;\n      handleFileUpload(fakeEvent);\n    }\n  }, [handleFileUpload]);\n\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n  }, []);\n\n  return (\n    <div className=\"text-center\">\n      {/* Hero Section */}\n      <div className=\"mb-12\">\n        <div className=\"flex items-center justify-center space-x-4 mb-6\">\n          <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-2xl\">\n            <Sparkles className=\"w-8 h-8 text-white\" />\n          </div>\n          <div className=\"text-left\">\n            <h1 className=\"text-4xl font-bold text-white mb-2\">\n              Beat-Synced Video Templates\n            </h1>\n            <p className=\"text-xl text-slate-400\">\n              Create perfectly timed cuts for your Snapcut projects\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto mb-12\">\n          <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700/50\">\n            <div className=\"w-12 h-12 bg-blue-500/20 rounded-xl flex items-center justify-center mb-4 mx-auto\">\n              <Upload className=\"w-6 h-6 text-blue-400\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-white mb-2\">Upload Audio</h3>\n            <p className=\"text-sm text-slate-400\">Import your music track and let our AI detect the beats automatically</p>\n          </div>\n          \n          <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700/50\">\n            <div className=\"w-12 h-12 bg-orange-500/20 rounded-xl flex items-center justify-center mb-4 mx-auto\">\n              <Music className=\"w-6 h-6 text-orange-400\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-white mb-2\">Add Cuts</h3>\n            <p className=\"text-sm text-slate-400\">Place cuts on the timeline, synced to the beat for perfect timing</p>\n          </div>\n          \n          <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700/50\">\n            <div className=\"w-12 h-12 bg-green-500/20 rounded-xl flex items-center justify-center mb-4 mx-auto\">\n              <Sparkles className=\"w-6 h-6 text-green-400\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-white mb-2\">Export</h3>\n            <p className=\"text-sm text-slate-400\">Download your Snapcut project file and trimmed audio</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Upload Area */}\n      <div\n        className=\"relative border-2 border-dashed border-slate-600 hover:border-blue-500 rounded-2xl p-12 transition-all duration-300 bg-slate-800/30 backdrop-blur-sm hover:bg-slate-800/50 group\"\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n      >\n        <div className=\"flex flex-col items-center space-y-6\">\n          <div className=\"relative\">\n            <div className=\"w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:scale-110 transition-transform duration-300\">\n              {isLoading ? (\n                <div className=\"w-8 h-8 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              ) : (\n                <Music className=\"w-10 h-10 text-white\" />\n              )}\n            </div>\n            {!isLoading && (\n              <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-orange-500 rounded-full flex items-center justify-center shadow-lg\">\n                <Upload className=\"w-4 h-4 text-white\" />\n              </div>\n            )}\n          </div>\n          \n          <div className=\"text-center\">\n            <h3 className=\"text-2xl font-bold text-white mb-3\">\n              {isLoading ? 'Processing Your Audio...' : 'Upload Your Music'}\n            </h3>\n            <p className=\"text-slate-400 text-lg mb-6 max-w-md\">\n              {isLoading \n                ? 'Analyzing beats and preparing your timeline...' \n                : 'Drag and drop an audio file or click to browse'\n              }\n            </p>\n          </div>\n\n          {!isLoading && (\n            <label className=\"cursor-pointer group\">\n              <input\n                type=\"file\"\n                accept=\"audio/*\"\n                onChange={handleFileUpload}\n                className=\"hidden\"\n                disabled={isLoading}\n              />\n              <div className=\"flex items-center space-x-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 px-8 py-4 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105\">\n                <Upload className=\"w-5 h-5 text-white\" />\n                <span className=\"font-semibold text-white text-lg\">Choose Audio File</span>\n              </div>\n            </label>\n          )}\n\n          <div className=\"flex flex-wrap justify-center gap-2 text-sm text-slate-500\">\n            <span className=\"bg-slate-700/50 px-3 py-1 rounded-full\">MP3</span>\n            <span className=\"bg-slate-700/50 px-3 py-1 rounded-full\">WAV</span>\n            <span className=\"bg-slate-700/50 px-3 py-1 rounded-full\">FLAC</span>\n            <span className=\"bg-slate-700/50 px-3 py-1 rounded-full\">M4A</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useRef, useEffect, useState } from 'react';\nimport { Play, Pause } from 'lucide-react';\nimport { AudioFile } from '../types';\n\ninterface AudioPlayerProps {\n  audioFile: AudioFile;\n  currentTime: number;\n  isPlaying: boolean;\n  onTimeUpdate: (time: number) => void;\n  onPlayPause: () => void;\n  startTime: number;\n  endTime: number;\n  isLooping: boolean;\n}\n\nexport const AudioPlayer: React.FC<AudioPlayerProps> = ({\n  audioFile,\n  currentTime,\n  isPlaying,\n  onTimeUpdate,\n  onPlayPause,\n  startTime,\n  endTime,\n  isLooping\n}) => {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [duration, setDuration] = useState(0);\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    const handleTimeUpdate = () => {\n      const time = audio.currentTime;\n      onTimeUpdate(time);\n    };\n\n    const handleLoadedMetadata = () => {\n      setDuration(audio.duration);\n    };\n\n\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n\n    return () => {\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n    };\n  }, [onTimeUpdate]);\n\n  // Handle looping logic\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    const handleTimeUpdate = () => {\n      const currentTime = audio.currentTime;\n      \n      // Check if we've reached the end point\n      if (currentTime >= endTime) {\n        // Always go back to start\n        audio.currentTime = startTime;\n        onTimeUpdate(startTime);\n        \n        if (!isLooping) {\n          // Only pause if not looping\n          audio.pause();\n          onPlayPause();\n        }\n        // If looping, audio continues playing automatically\n      }\n    };\n\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [isLooping, startTime, endTime, onTimeUpdate, onPlayPause, isPlaying]);\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    if (Math.abs(audio.currentTime - currentTime) > 0.1) {\n      audio.currentTime = currentTime;\n    }\n  }, [currentTime]);\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    if (isPlaying) {\n      audio.play().catch(console.error);\n    } else {\n      audio.pause();\n    }\n  }, [isPlaying]);\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"flex items-center space-x-3\">\n      <audio ref={audioRef} src={audioFile.url} preload=\"metadata\" />\n      \n      <button\n        onClick={onPlayPause}\n        className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 rounded-xl flex items-center justify-center transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105\"\n      >\n        {isPlaying ? (\n          <Pause className=\"w-6 h-6 text-white\" />\n        ) : (\n          <Play className=\"w-6 h-6 text-white ml-1\" />\n        )}\n      </button>\n\n      <div className=\"text-sm text-slate-300 bg-slate-700/50 rounded-lg px-3 py-2\">\n        <span className=\"font-mono text-white font-medium\">{formatTime(currentTime)}</span>\n        <span className=\"text-slate-500 mx-2\">/</span>\n        <span className=\"font-mono text-slate-400\">{formatTime(duration)}</span>\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { ZoomIn, ZoomOut, Scissors, Square, RotateCcw, ChevronLeft, ChevronRight, CornerDownLeft, CornerDownRight, Shuffle } from 'lucide-react';\nimport { AudioFile, BeatMarker, CutMarker } from '../types';\n\ninterface WaveformVisualizerProps {\n  audioFile: AudioFile;\n  currentTime: number;\n  isPlaying: boolean;\n  beatMarkers: BeatMarker[];\n  cutMarkers: CutMarker[];\n  startTime: number;\n  endTime: number;\n  onBeatDetected: (beats: BeatMarker[]) => void;\n  onAddCut: (time: number) => void;\n  onRemoveCut: (id: string) => void;\n  onMoveCut: (id: string, newTime: number) => void;\n  onSeek: (time: number) => void;\n  onTrimChange: (startTime: number, endTime: number) => void;\n  zoom: number;\n  onZoomChange: (zoom: number) => void;\n  onStop: () => void;\n  isLooping: boolean;\n  onToggleLoop: () => void;\n  onRandomMode: () => void;\n}\n\nconst COLORS = ['#F97316', '#3B82F6', '#10B981', '#8B5CF6', '#EF4444', '#F59E0B'];\n\nexport const WaveformVisualizer: React.FC<WaveformVisualizerProps> = ({\n  audioFile,\n  currentTime,\n  isPlaying,\n  beatMarkers,\n  cutMarkers,\n  startTime,\n  endTime,\n  onBeatDetected,\n  onAddCut,\n  onRemoveCut,\n  onMoveCut,\n  onSeek,\n  onTrimChange,\n  zoom,\n  onZoomChange,\n  onStop,\n  isLooping,\n  onToggleLoop,\n  onRandomMode\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const cutAreaRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [waveformData, setWaveformData] = useState<Float32Array | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isDragging, setIsDragging] = useState<{ type: 'trim-start' | 'trim-end' | 'cut', id?: string } | null>(null);\n  const [viewOffset, setViewOffset] = useState(0);\n  const [selectedTool, setSelectedTool] = useState<'in' | 'out' | null>(null);\n  const [hasDragged, setHasDragged] = useState(false);\n\n  useEffect(() => {\n    const analyzeAudio = async () => {\n      if (!audioFile.file) return;\n      \n      setIsAnalyzing(true);\n      try {\n        const audioContext = new AudioContext();\n        const arrayBuffer = await audioFile.file.arrayBuffer();\n        const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n        \n        const channelData = audioBuffer.getChannelData(0);\n        const samples = Math.min(12000, channelData.length);\n        const blockSize = Math.floor(channelData.length / samples);\n        const filteredData = new Float32Array(samples);\n\n        for (let i = 0; i < samples; i++) {\n          let sum = 0;\n          for (let j = 0; j < blockSize; j++) {\n            const index = i * blockSize + j;\n            if (index < channelData.length) {\n              sum += Math.abs(channelData[index]);\n            }\n          }\n          filteredData[i] = sum / blockSize;\n        }\n\n        setWaveformData(filteredData);\n\n        // Beat detection\n        const beats: BeatMarker[] = [];\n        const threshold = 0.08;\n        const minInterval = 0.15;\n        \n        const smoothed = new Float32Array(samples);\n        for (let i = 2; i < samples - 2; i++) {\n          smoothed[i] = (filteredData[i-2] + filteredData[i-1] + filteredData[i] + filteredData[i+1] + filteredData[i+2]) / 5;\n        }\n        \n        for (let i = 3; i < smoothed.length - 3; i++) {\n          const time = (i / samples) * audioFile.duration;\n          const amplitude = smoothed[i];\n          \n          if (amplitude > threshold && \n              amplitude > smoothed[i - 1] && \n              amplitude > smoothed[i + 1] &&\n              amplitude > smoothed[i - 2] && \n              amplitude > smoothed[i + 2]) {\n            \n            const lastBeat = beats[beats.length - 1];\n            if (!lastBeat || time - lastBeat.time > minInterval) {\n              beats.push({\n                time,\n                intensity: amplitude,\n                type: amplitude > 0.25 ? 'strong' : amplitude > 0.15 ? 'medium' : 'weak'\n              });\n            }\n          }\n        }\n\n        onBeatDetected(beats);\n        audioContext.close();\n      } catch (error) {\n        console.error('Error analyzing audio:', error);\n      } finally {\n        setIsAnalyzing(false);\n      }\n    };\n\n    analyzeAudio();\n  }, [audioFile, onBeatDetected]);\n\n  // Calculate visible time range\n  const getVisibleRange = useCallback(() => {\n    const visibleDuration = audioFile.duration / zoom;\n    const maxOffset = Math.max(0, audioFile.duration - visibleDuration);\n    const clampedOffset = Math.max(0, Math.min(maxOffset, viewOffset));\n    return {\n      startTime: clampedOffset,\n      endTime: clampedOffset + visibleDuration,\n      duration: visibleDuration\n    };\n  }, [audioFile.duration, zoom, viewOffset]);\n\n  // Auto-follow playhead when playing and zoomed\n  useEffect(() => {\n    if (isPlaying && zoom > 1) {\n      const { startTime: visibleStart, endTime: visibleEnd } = getVisibleRange();\n      const playheadBuffer = (visibleEnd - visibleStart) * 0.1; // 10% buffer\n      \n      if (currentTime < visibleStart + playheadBuffer || currentTime > visibleEnd - playheadBuffer) {\n        const newOffset = Math.max(0, currentTime - (visibleEnd - visibleStart) / 2);\n        const maxOffset = Math.max(0, audioFile.duration - (visibleEnd - visibleStart));\n        setViewOffset(Math.min(maxOffset, newOffset));\n      }\n    }\n  }, [currentTime, isPlaying, zoom, audioFile.duration, getVisibleRange]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !waveformData) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const width = rect.width;\n    const height = rect.height;\n    const dpr = window.devicePixelRatio || 1;\n    \n    // Set actual canvas size in memory (scaled up for retina)\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    \n    // Scale the canvas back down using CSS\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    \n    // Scale the drawing context so everything draws at the correct size\n    ctx.scale(dpr, dpr);\n    \n    ctx.clearRect(0, 0, width, height);\n    \n    // Enable anti-aliasing\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n\n    const { startTime: startOffset, endTime: endOffset } = getVisibleRange();\n    \n    const samples = waveformData.length;\n    const startSample = Math.floor((startOffset / audioFile.duration) * samples);\n    const endSample = Math.floor((endOffset / audioFile.duration) * samples);\n    const visibleSamples = endSample - startSample;\n    \n    if (visibleSamples <= 0) return;\n\n    const pixelsPerSample = width / visibleSamples;\n\n    // Draw trim area background\n    const trimStartX = Math.max(0, ((startTime - startOffset) / (endOffset - startOffset)) * width);\n    const trimEndX = Math.min(width, ((endTime - startOffset) / (endOffset - startOffset)) * width);\n    \n    ctx.fillStyle = 'rgba(0, 0, 0, 0.6)';\n    ctx.fillRect(0, 0, trimStartX, height);\n    ctx.fillRect(trimEndX, 0, width - trimEndX, height);\n\n    ctx.fillStyle = 'rgba(59, 130, 246, 0.05)';\n    ctx.fillRect(trimStartX, 0, trimEndX - trimStartX, height);\n\n    // Draw trim markers (thin lines)\n    if (startTime >= startOffset && startTime <= endOffset) {\n      ctx.strokeStyle = '#10B981';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      ctx.moveTo(trimStartX, 0);\n      ctx.lineTo(trimStartX, height);\n      ctx.stroke();\n      \n      // IN label\n      ctx.fillStyle = '#10B981';\n      ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n      ctx.shadowBlur = 2;\n      ctx.font = 'bold 10px Inter, sans-serif';\n      ctx.textAlign = 'left';\n      ctx.fillText('IN', trimStartX + 4, 15);\n      ctx.shadowColor = 'transparent';\n      ctx.shadowBlur = 0;\n    }\n\n    if (endTime >= startOffset && endTime <= endOffset) {\n      ctx.strokeStyle = '#EF4444';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      ctx.moveTo(trimEndX, 0);\n      ctx.lineTo(trimEndX, height);\n      ctx.stroke();\n      \n      // OUT label\n      ctx.fillStyle = '#EF4444';\n      ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n      ctx.shadowBlur = 2;\n      ctx.font = 'bold 10px Inter, sans-serif';\n      ctx.textAlign = 'right';\n      ctx.fillText('OUT', trimEndX - 4, 15);\n      ctx.shadowColor = 'transparent';\n      ctx.shadowBlur = 0;\n    }\n\n    // Draw waveform\n    ctx.fillStyle = '#3B82F6';\n    ctx.beginPath();\n\n    const centerY = height / 2;\n    ctx.moveTo(0, centerY);\n    \n    for (let i = 0; i < visibleSamples && (startSample + i) < samples; i++) {\n      const x = i * pixelsPerSample;\n      const amplitude = waveformData[startSample + i] || 0;\n      const y = centerY - (amplitude * height * 0.4);\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    \n    // Complete the waveform shape\n    for (let i = visibleSamples - 1; i >= 0 && (startSample + i) < samples; i--) {\n      const x = i * pixelsPerSample;\n      const amplitude = waveformData[startSample + i] || 0;\n      const y = centerY + (amplitude * height * 0.4);\n      ctx.lineTo(x, y);\n    }\n    \n    ctx.closePath();\n    ctx.fill();\n    \n    // Draw subtle center line\n    ctx.strokeStyle = 'rgba(59, 130, 246, 0.3)';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(0, centerY);\n    ctx.lineTo(width, centerY);\n    ctx.stroke();\n\n    // Draw cut markers\n    cutMarkers.forEach((cut, index) => {\n      if (cut.time >= startOffset && cut.time <= endOffset) {\n        const x = ((cut.time - startOffset) / (endOffset - startOffset)) * width;\n        \n        ctx.strokeStyle = cut.color;\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.stroke();\n\n        // Draw cut number with better visibility\n        ctx.fillStyle = cut.color;\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n        ctx.shadowBlur = 4;\n        ctx.shadowOffsetX = 1;\n        ctx.shadowOffsetY = 1;\n        ctx.font = 'bold 14px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText((index + 1).toString(), x, 20);\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n      }\n    });\n\n    // Draw cut numbers and drag handles\n    cutMarkers.forEach((cut, index) => {\n      if (cut.time >= startOffset && cut.time <= endOffset) {\n        const x = ((cut.time - startOffset) / (endOffset - startOffset)) * width;\n        \n        // Draw cut line\n        ctx.strokeStyle = cut.color;\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.stroke();\n\n        // Draw cut number with better visibility\n        ctx.fillStyle = cut.color;\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n        ctx.shadowBlur = 4;\n        ctx.shadowOffsetX = 1;\n        ctx.shadowOffsetY = 1;\n        ctx.font = 'bold 14px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText((index + 1).toString(), x, 20);\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n\n        // Draw drag handle\n        ctx.fillStyle = cut.color;\n        ctx.fillRect(x - 6, height - 15, 12, 15);\n      }\n    });\n\n    // Draw current time indicator\n    if (currentTime >= startOffset && currentTime <= endOffset) {\n      const currentX = ((currentTime - startOffset) / (endOffset - startOffset)) * width;\n      ctx.strokeStyle = '#10B981';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(currentX, 0);\n      ctx.lineTo(currentX, height);\n      ctx.stroke();\n    }\n\n    // Draw trim handles (small rectangles at bottom)\n    if (startTime >= startOffset && startTime <= endOffset) {\n      ctx.fillStyle = isDragging?.type === 'trim-start' ? '#059669' : '#10B981';\n      ctx.fillRect(trimStartX - 6, height - 12, 12, 12);\n    }\n\n    if (endTime >= startOffset && endTime <= endOffset) {\n      ctx.fillStyle = isDragging?.type === 'trim-end' ? '#DC2626' : '#EF4444';\n      ctx.fillRect(trimEndX - 6, height - 12, 12, 12);\n    }\n\n  }, [waveformData, cutMarkers, currentTime, audioFile.duration, startTime, endTime, getVisibleRange, isDragging]);\n\n  useEffect(() => {\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleCanvasClick = useCallback((event: React.MouseEvent) => {\n    // If we just finished dragging, don't process the click\n    if (hasDragged) {\n      setHasDragged(false);\n      return;\n    }\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    \n    const { startTime: startOffset, endTime: endOffset } = getVisibleRange();\n    \n    const time = startOffset + (x / rect.width) * (endOffset - startOffset);\n    \n    // Check if clicking near trim handles (start drag)\n    const trimStartX = Math.max(0, ((startTime - startOffset) / (endOffset - startOffset)) * rect.width);\n    const trimEndX = Math.min(rect.width, ((endTime - startOffset) / (endOffset - startOffset)) * rect.width);\n    \n    if (Math.abs(x - trimStartX) < 12 && event.clientY > rect.height - 20) {\n      setIsDragging({ type: 'trim-start' });\n      setHasDragged(false);\n      return;\n    }\n    if (Math.abs(x - trimEndX) < 12 && event.clientY > rect.height - 20) {\n      setIsDragging({ type: 'trim-end' });\n      setHasDragged(false);\n      return;\n    }\n    \n    // Check if clicking on cut handles (start drag)\n    const clickedCut = cutMarkers.find(cut => {\n      if (cut.time >= startOffset && cut.time <= endOffset) {\n        const cutX = ((cut.time - startOffset) / (endOffset - startOffset)) * rect.width;\n        return Math.abs(x - cutX) < 12 && event.clientY > rect.height - 20;\n      }\n      return false;\n    });\n\n    if (clickedCut) {\n      setIsDragging({ type: 'cut', id: clickedCut.id });\n      setHasDragged(false);\n      return;\n    }\n\n    // Handle tool selection\n    if (selectedTool === 'in') {\n      onTrimChange(time, endTime);\n      setSelectedTool(null);\n      return;\n    }\n    if (selectedTool === 'out') {\n      onTrimChange(startTime, time);\n      setSelectedTool(null);\n      return;\n    }\n\n    // Default: seek\n    onSeek(Math.max(0, Math.min(audioFile.duration, time)));\n  }, [audioFile.duration, startTime, endTime, onSeek, onTrimChange, getVisibleRange, cutMarkers, hasDragged, selectedTool]);\n\n  const handleCutAreaClick = useCallback((event: React.MouseEvent) => {\n    // If we just finished dragging, don't process the click\n    if (hasDragged) {\n      setHasDragged(false);\n      return;\n    }\n\n    const rect = cutAreaRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    const x = event.clientX - rect.left;\n    \n    const { startTime: startOffset, endTime: endOffset } = getVisibleRange();\n    \n    const time = startOffset + (x / rect.width) * (endOffset - startOffset);\n    \n    // Check if double-clicking on existing cut\n    const clickedCut = cutMarkers.find(cut => {\n      const cutX = ((cut.time - startOffset) / (endOffset - startOffset)) * rect.width;\n      return Math.abs(x - cutX) < 10;\n    });\n\n    if (event.detail === 2 && clickedCut) {\n      // Double click - remove cut\n      onRemoveCut(clickedCut.id);\n    } else if (event.detail === 1 && !clickedCut) {\n      // Single click - add cut\n      const snapDistance = 0.1;\n      const nearestBeat = beatMarkers.find(beat => Math.abs(beat.time - time) < snapDistance);\n      const snapTime = nearestBeat ? nearestBeat.time : time;\n      onAddCut(Math.max(0, Math.min(audioFile.duration, snapTime)));\n    }\n  }, [audioFile.duration, beatMarkers, cutMarkers, onAddCut, onRemoveCut, getVisibleRange, hasDragged]);\n\n  const handleMouseMove = useCallback((event: React.MouseEvent) => {\n    if (!isDragging) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    \n    // Mark that we're actively dragging\n    if (!hasDragged) {\n      setHasDragged(true);\n    }\n    \n    const { startTime: startOffset, endTime: endOffset } = getVisibleRange();\n    \n    const time = Math.max(0, Math.min(audioFile.duration, startOffset + (x / rect.width) * (endOffset - startOffset)));\n\n    if (isDragging.type === 'trim-start' && time < endTime) {\n      onTrimChange(time, endTime);\n    } else if (isDragging.type === 'trim-end' && time > startTime) {\n      onTrimChange(startTime, time);\n    } else if (isDragging.type === 'cut' && isDragging.id) {\n      onMoveCut(isDragging.id, time);\n    }\n  }, [isDragging, hasDragged, audioFile.duration, startTime, endTime, onTrimChange, onMoveCut, getVisibleRange]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(null);\n  }, []);\n\n  // Add mouse leave handler to ensure drag state is reset\n  const handleMouseLeave = useCallback(() => {\n    setIsDragging(null);\n  }, []);\n\n  // Handle mouse wheel for horizontal scrolling\n  const handleWheel = useCallback((event: React.WheelEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    if (event.ctrlKey || event.metaKey) {\n      // Zoom with Ctrl/Cmd + scroll\n      const zoomDelta = event.deltaY > 0 ? -0.5 : 0.5;\n      const newZoom = Math.max(0.5, Math.min(10, zoom + zoomDelta));\n      onZoomChange(newZoom);\n    } else {\n      // Horizontal scroll\n      const scrollDelta = event.deltaX !== 0 ? event.deltaX : event.deltaY;\n      const { duration } = getVisibleRange();\n      const scrollSpeed = duration * 0.05;\n      const newOffset = viewOffset + (scrollDelta > 0 ? scrollSpeed : -scrollSpeed);\n      const maxOffset = Math.max(0, audioFile.duration - duration);\n      setViewOffset(Math.max(0, Math.min(maxOffset, newOffset)));\n    }\n  }, [viewOffset, audioFile.duration, getVisibleRange, zoom, onZoomChange]);\n\n  const handleLiveCut = useCallback(() => {\n    onAddCut(currentTime);\n  }, [currentTime, onAddCut]);\n\n  const handleSetIn = useCallback(() => {\n    onTrimChange(currentTime, endTime);\n  }, [currentTime, endTime, onTrimChange]);\n\n  const handleSetOut = useCallback(() => {\n    onTrimChange(startTime, currentTime);\n  }, [startTime, currentTime, onTrimChange]);\n\n  const navigateTimeline = useCallback((direction: 'left' | 'right') => {\n    const { duration } = getVisibleRange();\n    const step = duration * 0.1;\n    const newOffset = viewOffset + (direction === 'right' ? step : -step);\n    const maxOffset = Math.max(0, audioFile.duration - duration);\n    setViewOffset(Math.max(0, Math.min(maxOffset, newOffset)));\n  }, [viewOffset, audioFile.duration, getVisibleRange]);\n\n  return (\n    <div className=\"space-y-4 p-6\">\n      {/* Controls */}\n      <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <button\n            onClick={() => navigateTimeline('left')}\n            className=\"p-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors\"\n          >\n            <ChevronLeft className=\"w-4 h-4\" />\n          </button>\n          \n          <button\n            onClick={() => navigateTimeline('right')}\n            className=\"p-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors\"\n          >\n            <ChevronRight className=\"w-4 h-4\" />\n          </button>\n          \n          <div className=\"w-px h-6 bg-slate-600\"></div>\n          \n          <button\n            onClick={handleSetIn}\n            className=\"flex items-center space-x-2 bg-green-600 hover:bg-green-700 px-3 py-2 rounded-lg transition-colors text-sm font-medium\"\n          >\n            <CornerDownLeft className=\"w-4 h-4\" />\n            <span>Set IN</span>\n          </button>\n          \n          <button\n            onClick={handleSetOut}\n            className=\"flex items-center space-x-2 bg-red-500 hover:bg-red-600 px-3 py-2 rounded-lg transition-colors text-sm font-medium\"\n          >\n            <CornerDownRight className=\"w-4 h-4\" />\n            <span>Set OUT</span>\n          </button>\n          \n          <button\n            onClick={onRandomMode}\n            className=\"flex items-center space-x-2 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 px-3 py-2 rounded-lg transition-all duration-200 text-sm font-medium shadow-lg hover:shadow-xl transform hover:scale-105\"\n          >\n            <Shuffle className=\"w-4 h-4\" />\n            <span>Random</span>\n          </button>\n          \n          <div className=\"w-px h-6 bg-slate-600\"></div>\n          \n          <button\n            onClick={handleLiveCut}\n            className=\"flex items-center space-x-2 bg-orange-600 hover:bg-orange-700 px-3 py-2 rounded-lg transition-colors text-sm font-medium\"\n          >\n            <Scissors className=\"w-4 h-4\" />\n            <span>Cut Here</span>\n          </button>\n          \n          <div className=\"w-px h-6 bg-slate-600\"></div>\n          \n          <button\n            onClick={onStop}\n            className=\"flex items-center space-x-2 bg-slate-600 hover:bg-slate-500 px-3 py-2 rounded-lg transition-colors text-sm font-medium\"\n          >\n            <Square className=\"w-4 h-4\" />\n            <span>Stop</span>\n          </button>\n          \n          <button\n            onClick={onToggleLoop}\n            className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors text-sm font-medium ${\n              isLooping \n                ? 'bg-blue-500 hover:bg-blue-600' \n                : 'bg-slate-600 hover:bg-slate-500'\n            }`}\n          >\n            <RotateCcw className=\"w-4 h-4\" />\n            <span>Loop</span>\n          </button>\n        </div>\n          \n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-px h-6 bg-slate-600\"></div>\n          \n          <button\n            onClick={() => onZoomChange(Math.max(0.5, zoom - 0.5))}\n            className=\"p-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors\"\n          >\n            <ZoomOut className=\"w-4 h-4\" />\n          </button>\n          <span className=\"text-sm text-slate-400 min-w-[60px] text-center font-mono\">{zoom.toFixed(1)}x</span>\n          <button\n            onClick={() => onZoomChange(Math.min(10, zoom + 0.5))}\n            className=\"p-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors\"\n          >\n            <ZoomIn className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Keyboard Shortcuts */}\n      <div className=\"bg-slate-700/30 rounded-xl p-4 border border-slate-600/30\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs text-slate-400\">\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">Space</kbd>\n            <span>Play/Pause</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">C</kbd>\n            <span>Add Cut</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">I</kbd>\n            <span>Set IN</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">O</kbd>\n            <span>Set OUT</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">←/→</kbd>\n            <span>Navigate</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">Scroll</kbd>\n            <span>Move Timeline</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">Ctrl+Scroll</kbd>\n            <span>Zoom</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <kbd className=\"bg-slate-600 px-2 py-1 rounded text-xs font-mono\">L</kbd>\n            <span>Toggle Loop</span>\n          </div>\n        </div>\n      </div>\n\n      <div \n        ref={containerRef}\n        className=\"bg-slate-800/50 rounded-xl border border-slate-700/50 overflow-hidden shadow-lg\"\n        onWheel={handleWheel}\n      >\n        {isAnalyzing && (\n          <div className=\"p-4 flex items-center justify-center space-x-2 text-blue-400\">\n            <div className=\"w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\" />\n            <span className=\"text-sm\">Analyzing beats...</span>\n          </div>\n        )}\n\n        {/* Cut area */}\n        <div \n          ref={cutAreaRef}\n          className={`h-10 bg-slate-700/50 border-b border-slate-600/50 relative ${\n            selectedTool ? 'cursor-crosshair' : 'cursor-pointer'\n          }`}\n          onClick={handleCutAreaClick}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          <div className=\"absolute inset-0 flex items-center justify-center text-xs text-slate-400 font-medium\">\n            {selectedTool ? `Click to set ${selectedTool.toUpperCase()} point` : 'Click to add cuts • Drag handles at bottom to move'}\n          </div>\n        </div>\n\n        {/* Waveform */}\n        <div className=\"relative\">\n          <canvas\n            ref={canvasRef}\n            className={`w-full h-56 block ${\n              selectedTool ? 'cursor-crosshair' : isDragging ? 'cursor-grabbing' : 'cursor-pointer'\n            }`}\n            onClick={handleCanvasClick}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseLeave={handleMouseUp}\n            style={{ imageRendering: 'auto' }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Play, Pause, RotateCcw, Scissors, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { VideoAsset } from '../types/video';\n\ninterface VideoTrimmerProps {\n  video: VideoAsset;\n  planIndex: number;\n  audioDuration: number;\n  planDuration: number; // Durée exacte requise pour ce plan\n  onTrimChange: (planIndex: number, startTime: number, endTime: number) => void;\n  onClose: () => void;\n}\n\nexport const VideoTrimmer: React.FC<VideoTrimmerProps> = ({\n  video,\n  planIndex,\n  audioDuration,\n  planDuration,\n  onTrimChange,\n  onClose\n}) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const timelineRef = useRef<HTMLDivElement>(null);\n  \n  const [currentTime, setCurrentTime] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  // Use fixed zone approach - zone duration = plan duration\n  const fixedZoneDuration = planDuration;\n  const [zoneStartTime, setZoneStartTime] = useState(0); // Where the fixed zone starts\n  \n  // Calculate derived values\n  const startTime = zoneStartTime;\n  const endTime = Math.min(zoneStartTime + fixedZoneDuration, video.duration);\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isDragging, setIsDragging] = useState<'start' | 'end' | null>(null);\n\n  // Load video metadata\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    const handleLoadedMetadata = () => {\n      setIsVideoLoaded(true);\n      // Initialize zone at the beginning, but ensure it doesn't exceed video duration\n      const maxZoneStart = Math.max(0, videoElement.duration - fixedZoneDuration);\n      setZoneStartTime(Math.min(0, maxZoneStart));\n    };\n\n    const handleTimeUpdate = () => {\n      setCurrentTime(videoElement.currentTime);\n    };\n\n    const handleEnded = () => {\n      setIsPlaying(false);\n      if (videoElement.currentTime >= endTime) {\n        videoElement.currentTime = startTime;\n        setCurrentTime(startTime);\n      }\n    };\n\n    videoElement.addEventListener('loadedmetadata', handleLoadedMetadata);\n    videoElement.addEventListener('timeupdate', handleTimeUpdate);\n    videoElement.addEventListener('ended', handleEnded);\n\n    return () => {\n      videoElement.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      videoElement.removeEventListener('timeupdate', handleTimeUpdate);\n      videoElement.removeEventListener('ended', handleEnded);\n    };\n  }, [audioDuration, endTime, startTime]);\n\n  // Control video playback within trim bounds\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement || !isVideoLoaded) return;\n\n    if (currentTime >= endTime && isPlaying) {\n      videoElement.currentTime = startTime;\n      setCurrentTime(startTime);\n    }\n  }, [currentTime, endTime, startTime, isPlaying, isVideoLoaded]);\n\n  const handlePlayPause = useCallback(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    if (isPlaying) {\n      videoElement.pause();\n    } else {\n      if (currentTime >= endTime) {\n        videoElement.currentTime = startTime;\n      }\n      videoElement.play();\n    }\n    setIsPlaying(!isPlaying);\n  }, [isPlaying, currentTime, endTime, startTime]);\n\n  const handleSeek = useCallback((time: number) => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    const clampedTime = Math.max(startTime, Math.min(endTime, time));\n    videoElement.currentTime = clampedTime;\n    setCurrentTime(clampedTime);\n  }, [startTime, endTime]);\n\n  const handleZoneMove = useCallback((newStartTime: number) => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    // Ensure zone doesn't go out of bounds\n    const maxZoneStart = Math.max(0, videoElement.duration - fixedZoneDuration);\n    const clampedStart = Math.max(0, Math.min(newStartTime, maxZoneStart));\n    \n    setZoneStartTime(clampedStart);\n    \n    // Update current time if it's outside the new zone\n    const newEndTime = clampedStart + fixedZoneDuration;\n    if (currentTime < clampedStart || currentTime > newEndTime) {\n      const newCurrentTime = clampedStart + (fixedZoneDuration / 2); // Center of zone\n      videoElement.currentTime = newCurrentTime;\n      setCurrentTime(newCurrentTime);\n    }\n  }, [fixedZoneDuration, currentTime]);\n\n  const handleTimelineClick = useCallback((e: React.MouseEvent) => {\n    if (!timelineRef.current || !isVideoLoaded || !videoRef.current) return;\n\n    const rect = timelineRef.current.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percentage = clickX / rect.width;\n    const clickTime = percentage * videoRef.current.duration;\n    \n    handleSeek(clickTime);\n  }, [isVideoLoaded, handleSeek]);\n\n  const handleMouseDown = useCallback(() => {\n    setIsDragging('start'); // We only move the whole zone now\n  }, []);\n\n  const handleMouseMove = useCallback((e: React.MouseEvent) => {\n    if (!isDragging || !timelineRef.current || !videoRef.current) return;\n\n    const rect = timelineRef.current.getBoundingClientRect();\n    const moveX = e.clientX - rect.left;\n    const percentage = Math.max(0, Math.min(1, moveX / rect.width));\n    const newTime = percentage * videoRef.current.duration;\n\n    handleZoneMove(newTime);\n  }, [isDragging, handleZoneMove]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(null);\n  }, []);\n\n  const handleApplyTrim = useCallback(() => {\n    onTrimChange(planIndex, startTime, endTime);\n    onClose();\n  }, [planIndex, startTime, endTime, onTrimChange, onClose]);\n\n  const handleReset = useCallback(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    // Reset zone to beginning\n    setZoneStartTime(0);\n    setCurrentTime(0);\n    videoElement.currentTime = 0;\n  }, []);\n\n  const handleCloseTrimmer = useCallback(() => {\n    // Auto-save before closing\n    onTrimChange(planIndex, startTime, endTime);\n    onClose();\n  }, [planIndex, startTime, endTime, onTrimChange, onClose]);\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    const milliseconds = Math.floor((time % 1) * 100);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n  };\n\n  const trimmedDuration = endTime - startTime;\n  const videoProgress = isVideoLoaded && videoRef.current \n    ? (currentTime / videoRef.current.duration) * 100 \n    : 0;\n  const startPercent = isVideoLoaded && videoRef.current \n    ? (startTime / videoRef.current.duration) * 100 \n    : 0;\n  const endPercent = isVideoLoaded && videoRef.current \n    ? (endTime / videoRef.current.duration) * 100 \n    : 100;\n  const zoneWidthPercent = isVideoLoaded && videoRef.current \n    ? (fixedZoneDuration / videoRef.current.duration) * 100 \n    : 10;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-slate-800 rounded-2xl border border-slate-700 max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"p-6 border-b border-slate-700\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-white mb-1\">\n                Trim Video - Plan {planIndex}\n              </h2>\n              <p className=\"text-sm text-slate-400\">{video.title}</p>\n            </div>\n            <button\n              onClick={handleCloseTrimmer}\n              className=\"text-slate-400 hover:text-white transition-colors text-xl hover:bg-slate-700 rounded-full w-8 h-8 flex items-center justify-center\"\n              title=\"Save and close\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n\n        {/* Video Preview */}\n        <div className=\"p-6\">\n          <div className=\"relative aspect-[9/16] max-h-96 mx-auto bg-black rounded-xl overflow-hidden mb-6\">\n            <video\n              ref={videoRef}\n              src={video.videoUrl}\n              className=\"w-full h-full object-cover\"\n              crossOrigin=\"anonymous\"\n              playsInline\n            />\n            \n            {/* Video Controls Overlay */}\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\">\n              <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2\">\n                <button\n                  onClick={handlePlayPause}\n                  disabled={!isVideoLoaded}\n                  className=\"w-12 h-12 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-colors disabled:opacity-50\"\n                >\n                  {isPlaying ? <Pause className=\"w-6 h-6\" /> : <Play className=\"w-6 h-6 ml-1\" />}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Timeline */}\n          <div className=\"space-y-4\">\n            <div\n              ref={timelineRef}\n              className=\"relative h-16 bg-slate-700 rounded-lg cursor-pointer\"\n              onClick={handleTimelineClick}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={handleMouseUp}\n            >\n              {/* Progress bar */}\n              <div \n                className=\"absolute top-0 left-0 h-full bg-blue-500/30 rounded-lg transition-all duration-100\"\n                style={{ width: `${videoProgress}%` }}\n              />\n              \n              {/* Trim zone */}\n              <div \n                className=\"absolute top-0 h-full bg-green-500/20 border-l-2 border-r-2 border-green-500\"\n                style={{ \n                  left: `${startPercent}%`, \n                  width: `${endPercent - startPercent}%` \n                }}\n              />\n\n              {/* Zone handle - Single draggable zone */}\n              <div\n                className=\"absolute top-0 w-full h-full cursor-grab active:cursor-grabbing hover:bg-green-500/10 transition-colors flex items-center justify-center\"\n                style={{ \n                  left: `${startPercent}%`, \n                  width: `${Math.min(zoneWidthPercent, 100 - startPercent)}%`\n                }}\n                onMouseDown={handleMouseDown}\n                title={`Drag to move zone (${fixedZoneDuration.toFixed(1)}s)`}\n              >\n                <div className=\"text-white text-xs font-bold bg-green-500/80 px-2 py-1 rounded backdrop-blur\">\n                  {fixedZoneDuration.toFixed(1)}s\n                </div>\n              </div>\n\n              {/* Current time indicator */}\n              <div\n                className=\"absolute top-0 w-1 h-full bg-white shadow-lg\"\n                style={{ left: `${videoProgress}%` }}\n              />\n            </div>\n\n            {/* Time displays */}\n            <div className=\"flex justify-between items-center text-sm\">\n              <div className=\"space-y-1\">\n                <div className=\"text-slate-400\">Current: <span className=\"text-white font-mono\">{formatTime(currentTime)}</span></div>\n                <div className=\"text-slate-400\">Duration: <span className=\"text-white font-mono\">{formatTime(trimmedDuration)}</span></div>\n              </div>\n              <div className=\"space-y-1 text-right\">\n                <div className=\"text-green-400\">Start: <span className=\"text-white font-mono\">{formatTime(startTime)}</span></div>\n                <div className=\"text-red-400\">End: <span className=\"text-white font-mono\">{formatTime(endTime)}</span></div>\n              </div>\n            </div>\n\n            {/* Zone position input */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-slate-400 mb-1\">Zone Start (s)</label>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max={isVideoLoaded && videoRef.current ? Math.max(0, videoRef.current.duration - fixedZoneDuration) : 0}\n                  step=\"0.1\"\n                  value={zoneStartTime.toFixed(1)}\n                  onChange={(e) => handleZoneMove(parseFloat(e.target.value))}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-lg text-white text-sm focus:border-green-400 focus:outline-none\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-400 mb-1\">Zone Duration (fixed)</label>\n                <input\n                  type=\"number\"\n                  value={fixedZoneDuration.toFixed(1)}\n                  disabled\n                  className=\"w-full px-3 py-2 bg-slate-600 border border-slate-500 rounded-lg text-slate-300 text-sm cursor-not-allowed\"\n                />\n                <div className=\"text-xs text-slate-500 mt-1\">Duration matches plan length</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"p-6 border-t border-slate-700 bg-slate-800/50\">\n          <div className=\"flex items-center justify-between\">\n            <button\n              onClick={handleReset}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors text-white\"\n            >\n              <RotateCcw className=\"w-4 h-4\" />\n              <span>Reset</span>\n            </button>\n\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 border border-slate-600 rounded-lg text-slate-300 hover:text-white hover:border-slate-500 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleApplyTrim}\n                className=\"flex items-center space-x-2 px-6 py-2 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 rounded-lg text-white font-medium transition-all\"\n              >\n                <Scissors className=\"w-4 h-4\" />\n                <span>Apply Trim</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React, { useMemo, useState, useEffect, useRef, useCallback } from 'react';\nimport { Scissors } from 'lucide-react';\nimport { CutMarker } from '../types';\nimport { VideoAsset, VideoTheme } from '../types/video';\nimport { VideoTrimmer } from './VideoTrimmer';\n\n// Component for trimmed video preview\nconst TrimmedVideo: React.FC<{\n  video: VideoAsset;\n  planIndex: number;\n  trimSettings?: { startTime: number; endTime: number };\n}> = ({ video, planIndex, trimSettings }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement || !trimSettings) return;\n\n    const handleLoadedMetadata = () => {\n      setIsLoaded(true);\n      // Set video to start at trim start time\n      videoElement.currentTime = trimSettings.startTime;\n    };\n\n    const handleTimeUpdate = () => {\n      // Loop back to start when reaching trim end\n      if (videoElement.currentTime >= trimSettings.endTime) {\n        videoElement.currentTime = trimSettings.startTime;\n      }\n    };\n\n    videoElement.addEventListener('loadedmetadata', handleLoadedMetadata);\n    videoElement.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      videoElement.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      videoElement.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [trimSettings]);\n\n  return (\n    <video\n      ref={videoRef}\n      src={video.videoUrl}\n      autoPlay\n      loop={!trimSettings} // Only loop normally if no trim settings\n      muted\n      playsInline\n      className=\"absolute inset-0 w-full h-full object-cover\"\n      onError={(e) => {\n        // Fallback to thumbnail image if video fails\n        const videoElement = e.target as HTMLVideoElement;\n        videoElement.style.display = 'none';\n        \n        // Create and show fallback image\n        const img = document.createElement('img');\n        img.src = video.thumbnail;\n        img.className = 'absolute inset-0 w-full h-full object-cover';\n        img.alt = video.title;\n        videoElement.parentNode?.appendChild(img);\n      }}\n    />\n  );\n};\n\ninterface PreviewPanelProps {\n  cutMarkers: CutMarker[];\n  currentTime: number;\n  currentTheme: VideoTheme;\n  startTime: number;\n  endTime: number;\n  videoAssignments?: Map<number, VideoAsset>;\n  onVideoAssignmentsChange?: (assignments: Map<number, VideoAsset>) => void;\n  audioDuration: number;\n  onVideoTrimChange?: (planIndex: number, startTime: number, endTime: number) => void;\n  videoTrimSettings?: Map<number, { startTime: number; endTime: number }>;\n}\n\nexport const PreviewPanel: React.FC<PreviewPanelProps> = ({ \n  cutMarkers, \n  currentTime,\n  currentTheme,\n  startTime,\n  endTime,\n  videoAssignments: externalVideoAssignments,\n  onVideoAssignmentsChange,\n  audioDuration,\n  onVideoTrimChange,\n  videoTrimSettings = new Map()\n}) => {\n  const [videoAssignments, setVideoAssignments] = useState<Map<number, VideoAsset>>(new Map());\n  const [trimmerState, setTrimmerState] = useState<{\n    isOpen: boolean;\n    video: VideoAsset | null;\n    planIndex: number;\n  }>({\n    isOpen: false,\n    video: null,\n    planIndex: 0\n  });\n  const [trimmedPlans, setTrimmedPlans] = useState<Set<number>>(new Set());\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  // Synchroniser avec les assignations externes (depuis PexelsVideoManager)\n  useEffect(() => {\n    if (externalVideoAssignments) {\n      setVideoAssignments(new Map(externalVideoAssignments));\n    }\n  }, [externalVideoAssignments]);\n\n  const { currentCut, currentColor, currentPlan, currentVideo } = useMemo(() => {\n    if (cutMarkers.length === 0) {\n      const plan1Video = videoAssignments.get(1);\n      return { \n        currentCut: null, \n        currentColor: '#3B82F6', \n        currentPlan: 1,\n        currentVideo: plan1Video || null\n      };\n    }\n\n    // Sort cuts by time\n    const sortedCuts = [...cutMarkers].sort((a, b) => a.time - b.time);\n    \n    // Find which segment we're in\n    for (let i = 0; i < sortedCuts.length; i++) {\n      const cut = sortedCuts[i];\n      const nextCut = sortedCuts[i + 1];\n      \n      if (currentTime >= cut.time) {\n        if (!nextCut || currentTime < nextCut.time) {\n          const planIndex = i + 2;\n          const planVideo = videoAssignments.get(planIndex);\n          return { \n            currentCut: cut, \n            currentColor: cut.color,\n            currentPlan: planIndex,\n            currentVideo: planVideo || null\n          };\n        }\n      }\n    }\n    \n    // Before first cut - Plan 1\n    const plan1Video = videoAssignments.get(1);\n    return { \n      currentCut: null, \n      currentColor: '#3B82F6',\n      currentPlan: 1,\n      currentVideo: plan1Video || null\n    };\n  }, [cutMarkers, currentTime, videoAssignments]);\n\n  const formatTime = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const handleOpenTrimmer = (video: VideoAsset, planIndex: number) => {\n    setTrimmerState({\n      isOpen: true,\n      video,\n      planIndex\n    });\n  };\n\n  // Calculate plan duration\n  const calculatePlanDuration = (planIndex: number): number => {\n    const sortedCuts = [...cutMarkers].sort((a, b) => a.time - b.time);\n    \n    if (planIndex === 1) {\n      // Plan 1: from startTime to first cut (or endTime if no cuts)\n      const firstCutTime = sortedCuts[0]?.time || endTime;\n      return Math.max(0.1, firstCutTime - startTime);\n    } else {\n      // Other plans: from previous cut to next cut (or endTime)\n      const cutIndex = planIndex - 2; // Plan 2 = index 0, Plan 3 = index 1, etc.\n      const currentCut = sortedCuts[cutIndex];\n      const nextCut = sortedCuts[cutIndex + 1];\n      \n      if (currentCut) {\n        const planEndTime = nextCut ? nextCut.time : endTime;\n        return Math.max(0.1, planEndTime - currentCut.time);\n      }\n    }\n    return 1; // Default 1 second\n  };\n\n  const handleCloseTrimmer = () => {\n    setTrimmerState({\n      isOpen: false,\n      video: null,\n      planIndex: 0\n    });\n  };\n\n  const handleTrimChange = (planIndex: number, startTime: number, endTime: number) => {\n    onVideoTrimChange?.(planIndex, startTime, endTime);\n    \n    // Mark this plan as trimmed\n    setTrimmedPlans(prev => new Set(prev).add(planIndex));\n    \n    // Show success notification\n    const duration = endTime - startTime;\n    console.log(`✅ Trim applied to Plan ${planIndex}: ${startTime.toFixed(1)}s - ${endTime.toFixed(1)}s (${duration.toFixed(1)}s)`);\n    \n    // Simple non-blocking notification\n    const notification = document.createElement('div');\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: linear-gradient(135deg, #10B981, #059669);\n      color: white;\n      padding: 12px 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      z-index: 9999;\n      font-family: system-ui, -apple-system, sans-serif;\n      font-size: 14px;\n      font-weight: 500;\n      opacity: 0;\n      transform: translateX(100%);\n      transition: all 0.3s ease;\n    `;\n    notification.innerHTML = `✅ Plan ${planIndex} trimmed: ${duration.toFixed(1)}s`;\n    document.body.appendChild(notification);\n    \n    // Animate in\n    setTimeout(() => {\n      notification.style.opacity = '1';\n      notification.style.transform = 'translateX(0)';\n    }, 10);\n    \n    // Animate out and remove\n    setTimeout(() => {\n      notification.style.opacity = '0';\n      notification.style.transform = 'translateX(100%)';\n      setTimeout(() => document.body.removeChild(notification), 300);\n    }, 3000);\n  };\n\n  // Calcul des durées correctes pour chaque plan\n  const getPlanDuration = (planIndex: number): number => {\n    const sortedCuts = [...cutMarkers].sort((a, b) => a.time - b.time);\n    \n    if (planIndex === 1) {\n      // Plan 1: du startTime à la première cut (ou endTime si pas de cuts)\n      const firstCutTime = sortedCuts[0]?.time || endTime;\n      return firstCutTime - startTime;\n    } else {\n      // Plan N: de la cut N-1 à la cut N (ou endTime pour le dernier plan)\n      const previousCutTime = sortedCuts[planIndex - 2]?.time || startTime;\n      const currentCutTime = sortedCuts[planIndex - 1]?.time || endTime;\n      return currentCutTime - previousCutTime;\n    }\n  };\n\n  const getCurrentPlanNumber = () => {\n    const sortedCuts = cutMarkers.sort((a, b) => a.time - b.time);\n    \n    for (let i = 0; i < sortedCuts.length; i++) {\n      const cut = sortedCuts[i];\n      const nextCut = sortedCuts[i + 1];\n      \n      if (currentTime >= cut.time) {\n        if (!nextCut || currentTime < nextCut.time) {\n          return i + 2;\n        }\n      }\n    }\n    \n    return 1; // Before first cut\n  };\n\n  // Check if video is too short for the plan\n  const isVideoTooShort = (video: VideoAsset | undefined, planDuration: number): boolean => {\n    if (!video) return false;\n    return video.duration < planDuration;\n  };\n\n  const nextCuts = useMemo(() => {\n    return cutMarkers\n      .filter(cut => cut.time > currentTime)\n      .sort((a, b) => a.time - b.time)\n      .slice(0, 3);\n  }, [cutMarkers, currentTime]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Mobile Phone Preview */}\n      <div className=\"flex flex-col items-center\">\n        <div className=\"text-sm text-slate-400 mb-3 font-medium\">📱 Preview Mobile</div>\n        \n        <div className=\"relative\">\n          {/* Phone Frame */}\n          <div\n            className=\"w-44 h-78 bg-black rounded-3xl p-2 shadow-2xl border-4 border-slate-700\"\n            style={{ aspectRatio: '9/19.5' }}\n          >\n            {/* Screen */}\n            <div \n              className=\"w-full h-full rounded-2xl overflow-hidden relative\"\n              style={{ aspectRatio: '9/16' }}\n            >\n              {/* Video Background */}\n              {currentVideo ? (\n                <>\n                  <TrimmedVideo\n                    video={currentVideo}\n                    planIndex={currentPlan}\n                    trimSettings={videoTrimSettings.get(currentPlan)}\n                  />\n                  {/* Dark overlay for text readability */}\n                  <div className=\"absolute inset-0 bg-black/30\"></div>\n                </>\n              ) : (\n                /* Fallback color background */\n                <div \n                  className=\"absolute inset-0\"\n                  style={{ backgroundColor: currentColor }}\n                />\n              )}\n              \n              {/* Content Overlay */}\n              <div className=\"absolute inset-0 flex items-center justify-center z-10\">\n                <div className=\"text-white text-2xl font-bold bg-black/50 px-4 py-2 rounded-lg\">\n                  Plan {getCurrentPlanNumber()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline Section */}\n      <div>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h4 className=\"text-sm font-medium text-slate-300 flex items-center space-x-2\">\n            <div className=\"w-4 h-4 bg-gradient-to-r from-blue-500 to-purple-500 rounded\"></div>\n            <span>Timeline</span>\n          </h4>\n        </div>\n        \n        <div className=\"space-y-2 max-h-72 overflow-y-auto custom-scrollbar\">\n          {/* Plan 1 (before first cut) */}\n          {(() => {\n            const sortedCuts = cutMarkers.sort((a, b) => a.time - b.time);\n            const plan1Duration = getPlanDuration(1);\n            const plan1Video = videoAssignments.get(1);\n            const currentPlan = getCurrentPlanNumber();\n            const isActive = currentPlan === 1;\n            const isPast = currentTime > (sortedCuts[0]?.time || endTime);\n            \n            return (\n              <div\n                className={`p-4 rounded-xl border transition-all duration-200 ${\n                  isActive \n                    ? 'border-green-400 bg-green-400/20 shadow-lg shadow-green-400/25' \n                    : isPast \n                    ? 'border-slate-600 bg-slate-700/30 opacity-60' \n                    : 'border-slate-600 bg-slate-700/50 hover:bg-slate-700/70'\n                }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div \n                      className=\"w-6 h-6 bg-blue-500 rounded-full border-2 border-white flex items-center justify-center text-xs font-bold shadow-lg\"\n                    >\n                      1\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"text-white font-semibold\">Plan 1</div>\n                      <div className=\"text-xs text-slate-400 font-mono\">\n                        {formatTime(startTime)} → {formatTime(sortedCuts[0]?.time || endTime)}\n                        {plan1Duration > 0 && ` • ${Math.round(plan1Duration)}s duration`}\n                      </div>\n                      {plan1Video && (\n                        <div className=\"text-xs text-blue-300 mt-1 truncate max-w-[200px]\">\n                          📹 {plan1Video.title}\n                          {trimmedPlans.has(1) && (\n                            <span className=\"ml-2 text-xs text-green-400 font-semibold\">✂️ Trimmed</span>\n                          )}\n                          {isVideoTooShort(plan1Video, plan1Duration) && (\n                            <span className=\"ml-2 text-xs text-yellow-400 font-semibold\" title={`Video duration: ${plan1Video.duration.toFixed(1)}s < Plan duration: ${plan1Duration.toFixed(1)}s`}>\n                              ⚠️ Too short\n                            </span>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    {plan1Video && (\n                      <button\n                        onClick={() => handleOpenTrimmer(plan1Video, 1)}\n                        className=\"p-2 bg-blue-600/20 hover:bg-blue-600/30 border border-blue-500/30 rounded-lg transition-colors group\"\n                        title=\"Trim video for Plan 1\"\n                      >\n                        <Scissors className=\"w-4 h-4 text-blue-400 group-hover:text-blue-300\" />\n                      </button>\n                    )}\n                    {isActive && (\n                      <div className=\"text-green-400 text-xs font-bold animate-pulse bg-green-400/20 px-2 py-1 rounded-full\">\n                        ACTIVE\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })()}\n\n          {/* Cuts et plans suivants */}\n          {cutMarkers\n            .sort((a, b) => a.time - b.time)\n            .map((cut, index) => {\n              const currentPlan = getCurrentPlanNumber();\n              const planIndex = index + 2;\n              const isActive = currentPlan === planIndex;\n              const isPast = currentTime > cut.time && !isActive;\n              const planDuration = getPlanDuration(planIndex);\n              \n              const planVideo = videoAssignments.get(planIndex);\n              \n              return (\n                <div\n                  key={cut.id}\n                  className={`p-4 rounded-xl border transition-all duration-200 ${\n                    isActive \n                      ? 'border-green-400 bg-green-400/20 shadow-lg shadow-green-400/25' \n                      : isPast \n                      ? 'border-slate-600 bg-slate-700/30 opacity-60' \n                      : 'border-slate-600 bg-slate-700/50 hover:bg-slate-700/70'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div \n                        className=\"w-6 h-6 rounded-full border-2 border-white flex items-center justify-center text-xs font-bold shadow-lg\"\n                        style={{ backgroundColor: cut.color }}\n                      >\n                        {index + 1}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"text-white font-semibold\">Plan {planIndex}</div>\n                        <div className=\"text-xs text-slate-400 font-mono\">\n                          {formatTime(cut.time)}\n                          {planDuration > 0 && ` • ${Math.round(planDuration)}s duration`}\n                        </div>\n                        {planVideo && (\n                          <div className=\"text-xs text-blue-300 mt-1 truncate max-w-[200px]\">\n                            📹 {planVideo.title}\n                            {trimmedPlans.has(planIndex) && (\n                              <span className=\"ml-2 text-xs text-green-400 font-semibold\">✂️ Trimmed</span>\n                            )}\n                            {isVideoTooShort(planVideo, planDuration) && (\n                              <span className=\"ml-2 text-xs text-yellow-400 font-semibold\" title={`Video duration: ${planVideo.duration.toFixed(1)}s < Plan duration: ${planDuration.toFixed(1)}s`}>\n                                ⚠️ Too short\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      {planVideo && (\n                        <button\n                          onClick={() => handleOpenTrimmer(planVideo, planIndex)}\n                          className=\"p-2 bg-blue-600/20 hover:bg-blue-600/30 border border-blue-500/30 rounded-lg transition-colors group\"\n                          title={`Trim video for Plan ${planIndex}`}\n                        >\n                          <Scissors className=\"w-4 h-4 text-blue-400 group-hover:text-blue-300\" />\n                        </button>\n                      )}\n                      {isActive && (\n                        <div className=\"text-green-400 text-xs font-bold animate-pulse bg-green-400/20 px-2 py-1 rounded-full\">\n                          ACTIVE\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n\n      {/* Stats */}\n      <div className=\"bg-slate-700/30 rounded-xl p-4 border border-slate-600/30\">\n        <div className=\"text-sm text-slate-400 mb-3 font-medium\">📊 Template Stats</div>\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <div className=\"text-white font-bold text-lg\">{cutMarkers.length + 1}</div>\n            <div className=\"text-slate-400\">Total Plans</div>\n          </div>\n          <div>\n            <div className=\"text-white font-bold text-lg\">{videoAssignments.size}</div>\n            <div className=\"text-slate-400\">Videos Assigned</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Video Trimmer Modal */}\n      {trimmerState.isOpen && trimmerState.video && (\n        <VideoTrimmer\n          video={trimmerState.video}\n          planIndex={trimmerState.planIndex}\n          audioDuration={audioDuration}\n          planDuration={calculatePlanDuration(trimmerState.planIndex)}\n          onTrimChange={handleTrimChange}\n          onClose={handleCloseTrimmer}\n        />\n      )}\n    </div>\n  );\n};","/**\n * Utilitaire pour trimmer les fichiers audio selon les points IN et OUT\n */\n\nexport interface TrimOptions {\n  startTime: number;\n  endTime: number;\n  originalFileName: string;\n}\n\n/**\n * Trim un fichier audio selon les points de temps spécifiés\n */\nexport async function trimAudioFile(\n  audioFile: File, \n  options: TrimOptions\n): Promise<Blob> {\n  const { startTime, endTime } = options;\n  \n  // Créer un contexte audio pour le traitement\n  const audioContext = new AudioContext();\n  \n  try {\n    console.log(`🎵 Trimming audio: ${startTime.toFixed(2)}s → ${endTime.toFixed(2)}s`);\n    \n    // Charger et décoder le fichier audio\n    const arrayBuffer = await audioFile.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    \n    // Calculer les échantillons de début et fin\n    const sampleRate = audioBuffer.sampleRate;\n    const startSample = Math.floor(startTime * sampleRate);\n    const endSample = Math.floor(endTime * sampleRate);\n    const trimmedLength = endSample - startSample;\n    \n    // Vérifier que les paramètres sont valides\n    if (startSample >= endSample || startSample < 0 || endSample > audioBuffer.length) {\n      throw new Error('Invalid trim parameters');\n    }\n    \n    // Créer un nouveau buffer audio avec la durée tronquée\n    const trimmedBuffer = audioContext.createBuffer(\n      audioBuffer.numberOfChannels,\n      trimmedLength,\n      sampleRate\n    );\n    \n    // Copier les données audio pour chaque canal\n    for (let channel = 0; channel < audioBuffer.numberOfChannels; channel++) {\n      const originalData = audioBuffer.getChannelData(channel);\n      const trimmedData = trimmedBuffer.getChannelData(channel);\n      \n      // Copier la partie tronquée\n      for (let i = 0; i < trimmedLength; i++) {\n        trimmedData[i] = originalData[startSample + i];\n      }\n    }\n    \n    // Convertir le buffer audio en WAV\n    const wavBlob = await audioBufferToWav(trimmedBuffer);\n    \n    console.log(`✅ Audio trimé en WAV: ${startTime.toFixed(2)}s → ${endTime.toFixed(2)}s (${(endTime - startTime).toFixed(2)}s)`);\n    \n    return wavBlob;\n    \n  } finally {\n    // Nettoyer le contexte audio\n    await audioContext.close();\n  }\n}\n\n/**\n * Convertit un AudioBuffer en blob WAV\n */\nasync function audioBufferToWav(buffer: AudioBuffer): Promise<Blob> {\n  const numberOfChannels = buffer.numberOfChannels;\n  const sampleRate = buffer.sampleRate;\n  const format = 1; // PCM\n  const bitDepth = 16;\n  \n  const bytesPerSample = bitDepth / 8;\n  const blockAlign = numberOfChannels * bytesPerSample;\n  const byteRate = sampleRate * blockAlign;\n  const dataSize = buffer.length * blockAlign;\n  const bufferSize = 44 + dataSize;\n  \n  const arrayBuffer = new ArrayBuffer(bufferSize);\n  const view = new DataView(arrayBuffer);\n  \n  // Écrire l'en-tête WAV\n  const writeString = (offset: number, string: string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n  \n  writeString(0, 'RIFF');\n  view.setUint32(4, bufferSize - 8, true);\n  writeString(8, 'WAVE');\n  writeString(12, 'fmt ');\n  view.setUint32(16, 16, true); // Sub-chunk size\n  view.setUint16(20, format, true);\n  view.setUint16(22, numberOfChannels, true);\n  view.setUint32(24, sampleRate, true);\n  view.setUint32(28, byteRate, true);\n  view.setUint16(32, blockAlign, true);\n  view.setUint16(34, bitDepth, true);\n  writeString(36, 'data');\n  view.setUint32(40, dataSize, true);\n  \n  // Écrire les données audio\n  let offset = 44;\n  for (let i = 0; i < buffer.length; i++) {\n    for (let channel = 0; channel < numberOfChannels; channel++) {\n      const sample = Math.max(-1, Math.min(1, buffer.getChannelData(channel)[i]));\n      const intSample = sample < 0 ? sample * 0x8000 : sample * 0x7FFF;\n      view.setInt16(offset, intSample, true);\n      offset += 2;\n    }\n  }\n  \n  return new Blob([arrayBuffer], { type: 'audio/wav' });\n}\n\n/**\n * Génère un nom de fichier pour l'audio trimé en WAV\n */\nexport function generateTrimmedFileName(\n  originalFileName: string,\n  startTime: number,\n  endTime: number,\n  customPrefix?: string\n): string {\n  const baseName = originalFileName.replace(/\\.[^/.]+$/, '');\n  const duration = Math.ceil(endTime - startTime);\n  \n  const prefix = customPrefix || baseName;\n  const timeRange = `${Math.floor(startTime)}s-${Math.floor(endTime)}s`;\n  \n  return `${prefix}_trimmed_${timeRange}_${duration}s.wav`;\n}\n\n/**\n * Télécharge un blob audio avec le nom spécifié\n */\nexport function downloadAudioBlob(blob: Blob, filename: string): void {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.style.display = 'none';\n  \n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  \n  // Nettoyer l'URL après un délai pour permettre le téléchargement\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n  }, 1000);\n} ","export interface ProjectSettings {\n  category: string;\n  templateNumber: string;\n  musicId: string;\n}\n\nexport interface NamingContext {\n  projectSettings: ProjectSettings;\n  duration: number;\n  planCount: number;\n}\n\nexport class FileNamingService {\n  private static generateBasePrefix(context: NamingContext): string {\n    const { category, templateNumber, musicId } = context.projectSettings;\n    const { planCount, duration } = context;\n    return `${category}_${templateNumber}_${musicId}_${planCount}_${Math.ceil(duration)}s`;\n  }\n\n  // Export JSON Project\n  static generateProjectFilename(context: NamingContext): string {\n    return `${this.generateBasePrefix(context)}_project.json`;\n  }\n\n  // Export Audio\n  static generateMusicFilename(context: NamingContext, startTime?: number, endTime?: number, originalName?: string): string {\n    const basePrefix = this.generateBasePrefix(context);\n    if (startTime !== undefined && endTime !== undefined) {\n      const trimStart = Math.floor(startTime);\n      const trimEnd = Math.floor(endTime);\n      const trimDuration = Math.ceil(endTime - startTime);\n      return `${basePrefix}_music_trimmed_${trimStart}s-${trimEnd}s_${trimDuration}s.wav`;\n    }\n    return `${basePrefix}_music.wav`;\n  }\n\n  // Export Final Video\n  static generateFinalVideoFilename(context: NamingContext, compression: 'high' | 'medium'): string {\n    const basePrefix = this.generateBasePrefix(context);\n    const compSuffix = compression === 'high' ? 'HD' : 'SD';\n    return `${basePrefix}_render_${compSuffix}.mp4`;\n  }\n\n  // Export Thumbnails\n  static generateThumbnailFilename(\n    context: NamingContext, \n    size: 'large' | 'small', \n    width: number, \n    height: number, \n    format: string = 'jpeg'\n  ): string {\n    const basePrefix = this.generateBasePrefix(context);\n    return `${basePrefix}_thumbnail_${size}_${width}x${height}.${format}`;\n  }\n\n  // Export Individual Raw Videos\n  static generateRawVideoFilename(context: NamingContext, planIndex: number, originalTitle?: string): string {\n    const basePrefix = this.generateBasePrefix(context);\n    return `${basePrefix}_video${planIndex}.mp4`;\n  }\n\n  // Export Video Batch\n  static generateVideoExportFilename(context: NamingContext, index: number): string {\n    const basePrefix = this.generateBasePrefix(context);\n    return `${basePrefix}_video${index + 1}.mp4`;\n  }\n\n  // Helper: Extract project settings from UI elements\n  static extractSettingsFromDOM(): ProjectSettings | null {\n    try {\n      // Try multiple selectors to find the inputs\n      const categoryInput = document.querySelector('input[placeholder=\"Category\"], input[value*=\"Travel\"], input[type=\"text\"]') as HTMLInputElement;\n      const templateInput = document.querySelector('input[placeholder=\"Template #\"], input[value*=\"006\"]') as HTMLInputElement;\n      const musicInput = document.querySelector('input[placeholder=\"Music ID\"], input[value*=\"012\"]') as HTMLInputElement;\n\n      // Alternative: try by parent labels or container classes\n      let categoryValue = 'Travel';\n      let templateValue = '006';\n      let musicValue = '012';\n\n      // Look for inputs in divs that might contain \"Category\", \"Template\", \"Music\"\n      const allInputs = document.querySelectorAll('input[type=\"text\"]');\n      allInputs.forEach((input) => {\n        const inputElement = input as HTMLInputElement;\n        const parentText = inputElement.parentElement?.textContent?.toLowerCase() || '';\n        const placeholder = inputElement.placeholder?.toLowerCase() || '';\n        \n        if (parentText.includes('category') || placeholder.includes('category')) {\n          categoryValue = inputElement.value || 'Travel';\n        } else if (parentText.includes('template') || placeholder.includes('template')) {\n          templateValue = inputElement.value || '006';\n        } else if (parentText.includes('music') || placeholder.includes('music')) {\n          musicValue = inputElement.value || '012';\n        }\n      });\n\n      return {\n        category: categoryValue,\n        templateNumber: templateValue,\n        musicId: musicValue\n      };\n    } catch (error) {\n      console.warn('Could not extract settings from DOM, using defaults:', error);\n      return {\n        category: 'Travel',\n        templateNumber: '006',\n        musicId: '012'\n      };\n    }\n  }\n\n  // Helper: Create naming context\n  static createContext(\n    projectSettings: ProjectSettings,\n    cutMarkers: any[],\n    duration: number\n  ): NamingContext {\n    return {\n      projectSettings,\n      duration,\n      planCount: cutMarkers.length + 1\n    };\n  }\n} ","import React, { useState } from 'react';\nimport { Download, FileText, Music, Settings, Scissors, Play, Users } from 'lucide-react';\nimport { AudioFile, CutMarker, SnapcutExport } from '../types';\nimport { VideoAsset } from '../types/video';\nimport { trimAudioFile, downloadAudioBlob } from '../utils/audioTrimmer';\nimport { FileNamingService, ProjectSettings, NamingContext } from '../services/fileNamingService';\n\ninterface ExportPanelProps {\n  audioFile: AudioFile;\n  cutMarkers: CutMarker[];\n  startTime: number;\n  endTime: number;\n  videoAssignments?: Map<number, VideoAsset>;\n}\n\nexport const ExportPanel: React.FC<ExportPanelProps> = ({\n  audioFile,\n  cutMarkers,\n  startTime,\n  endTime,\n  videoAssignments = new Map()\n}) => {\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportSettings, setExportSettings] = useState({\n    category: 'Travel',\n    templateNumber: '006',\n    musicId: '012'\n  });\n\n  const generateFileName = (type: 'music' | 'project') => {\n    const namingContext = FileNamingService.createContext(\n      exportSettings,\n      cutMarkers,\n      endTime - startTime\n    );\n\n    if (type === 'music') {\n      return FileNamingService.generateMusicFilename(namingContext).replace('.wav', '');\n    } else {\n      return FileNamingService.generateProjectFilename(namingContext).replace('.json', '');\n    }\n  };\n\n  const generateSnapcutJSON = (): SnapcutExport => {\n    const now = Date.now() / 1000;\n    const trimmedDuration = endTime - startTime;\n    \n    // Générer le nom de fichier audio exporté avec le service de naming unifié\n    const namingContext = FileNamingService.createContext(\n      exportSettings,\n      cutMarkers,\n      endTime - startTime\n    );\n    const audioFileName = FileNamingService.generateMusicFilename(namingContext, startTime, endTime);\n    \n    // Create video placeholder segments based on cut markers (indépendant des vidéos Pexels)\n    const createVideoPlaceholderSegments = () => {\n      const segments: Array<{ planIndex: number; video: VideoAsset | null; startTime: number; endTime: number }> = [];\n      \n      // Calculate time segments\n      const sortedCuts = [...cutMarkers].sort((a, b) => a.time - b.time);\n      \n      // First segment (Plan 1) - TOUJOURS inclus même sans vidéo assignée\n      const firstCutTime = sortedCuts.length > 0 ? sortedCuts[0].time : endTime;\n      segments.push({\n        planIndex: 1,\n        video: videoAssignments?.get(1) || null, // Vidéo Pexels ou null pour placeholder\n        startTime: startTime,\n        endTime: Math.min(firstCutTime, endTime)\n      });\n      \n      // Subsequent segments (Plans 2, 3, 4...)\n      for (let i = 0; i < sortedCuts.length; i++) {\n        const cut = sortedCuts[i];\n        const nextCut = sortedCuts[i + 1];\n        const planIndex = i + 2;\n        \n        if (cut.time < endTime) {\n          segments.push({\n            planIndex,\n            video: videoAssignments?.get(planIndex) || null, // Vidéo Pexels ou null pour placeholder\n            startTime: Math.max(cut.time, startTime),\n            endTime: Math.min(nextCut ? nextCut.time : endTime, endTime)\n          });\n        }\n      }\n      \n      return segments.filter(segment => segment.endTime > segment.startTime);\n    };\n    \n    const videoSegments = createVideoPlaceholderSegments();\n    \n    // Generate main timeline avec le format exact du JSON qui marche\n    const mainTimeline = videoSegments.map((segment, index) => {\n      const segmentDuration = segment.endTime - segment.startTime;\n      \n      // Couleurs distinctes pour chaque plan (comme dans l'exemple qui marche)\n      const planColors = [\n        [0.75, 0.75, 0.75, 1],  // Plan 1: Gris clair\n        [0.33333334, 0, 0, 1],  // Plan 2: Rouge foncé\n        [1, 0.932, 0.32, 1],    // Plan 3: Jaune\n        [0, 0.5, 1, 1],         // Plan 4: Bleu\n        [0.5, 1, 0, 1],         // Plan 5: Vert\n        [1, 0, 1, 1],           // Plan 6: Magenta\n        [1, 0.5, 0, 1],         // Plan 7: Orange\n        [0.5, 0, 1, 1]          // Plan 8: Violet\n      ];\n      \n      const planColor = planColors[index % planColors.length];\n      \n      return {\n        scale: [1, 1.777, 1] as [number, number, number],\n        backgroundBlurEnabled: false,\n        animationStartScale: [1, 1.777, 1] as [number, number, number],\n        blend: {\n          none: {}\n        },\n        colorAdjustment: {\n          sharpness: 0,\n          exposure: 0,\n          temperature: 0,\n          contrast: 1,\n          saturation: 1,\n          hue: 0\n        },\n        contentRotation: 0,\n        aspect: {\n          aspectFill: {}\n        },\n        animationStartRotation: [0, 0, 0] as [number, number, number],\n        backgroundColor: [0, 0, 0, 1] as [number, number, number, number],\n        isAnimated: false,\n        animationEndScale: [1, 1.777, 1] as [number, number, number],\n        position: [0, 0] as [number, number],\n        animationEndPosition: [0, 0] as [number, number],\n        kind: {\n          empty: {}\n        },\n        animationEndRotation: [0, 0, 0] as [number, number, number],\n        color: planColor as [number, number, number, number],\n        animationStartPosition: [0, 0] as [number, number],\n        opacity: 1,\n        name: `Plan ${segment.planIndex}`,\n        rotation: [0, 0, 0] as [number, number, number],\n        duration: segmentDuration\n      };\n    });\n    \n    // Pas d'overlays pour les templates - superposition timeline vide\n    const superpositionTimeline: any[] = [];\n\n    return {\n      id: crypto.randomUUID().toUpperCase(),\n      title: generateFileName('project'),\n      lastModificationDate: now,\n      editionProject: {\n        mainTimeline,\n        aspectRatio: {\n          r_9_16: {}\n        },\n        superpositionTimeline,\n        audioTimeline: [{\n          duration: trimmedDuration,\n          startTime: 0,\n          fileName: audioFileName,\n          gain: 1,\n          playbackSpeed: 1,\n          fileTrimStart: startTime,\n          isMuted: false\n        }]\n      }\n    };\n  };\n\n\n\n  const handleExportJSON = async () => {\n    setIsExporting(true);\n    \n    try {\n      const snapcutData = generateSnapcutJSON();\n      const jsonBlob = new Blob([JSON.stringify(snapcutData, null, 2)], { \n        type: 'application/json' \n      });\n\n      const namingContext = FileNamingService.createContext(\n        exportSettings,\n        cutMarkers,\n        endTime - startTime\n      );\n      const filename = FileNamingService.generateProjectFilename(namingContext);\n      \n      const url = URL.createObjectURL(jsonBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleExportAudio = async () => {\n    setIsExporting(true);\n    \n    try {\n      console.log(`🎵 Trimming audio: ${startTime.toFixed(2)}s → ${endTime.toFixed(2)}s`);\n      \n      // Trimmer l'audio selon les points IN et OUT\n      const trimmedAudioBlob = await trimAudioFile(audioFile.file, {\n        startTime,\n        endTime,\n        originalFileName: audioFile.name\n      });\n      \n      // Générer le nom de fichier avec le service de naming unifié\n      const namingContext = FileNamingService.createContext(\n        exportSettings,\n        cutMarkers,\n        endTime - startTime\n      );\n      const trimmedFileName = FileNamingService.generateMusicFilename(namingContext, startTime, endTime);\n      \n      // Télécharger l'audio trimé\n      downloadAudioBlob(trimmedAudioBlob, trimmedFileName);\n      \n      console.log(`✅ Audio exporté: ${trimmedFileName}`);\n      \n    } catch (error) {\n      console.error('Audio trimming failed:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      alert(`Audio export failed: ${errorMessage}\\n\\nPlease check that your IN/OUT points are valid and try again.`);\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <div className=\"flex items-center gap-3 mb-6\">\n          <div className=\"w-10 h-10 bg-gradient-to-r from-orange-500 to-red-500 rounded-xl flex items-center justify-center shadow-lg\">\n            <Settings className=\"w-5 h-5 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold text-white\">Export Settings</h3>\n            <p className=\"text-xs text-slate-400\">Configure your project export</p>\n          </div>\n        </div>\n        \n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-3 gap-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Category\n              </label>\n              <input\n                type=\"text\"\n                value={exportSettings.category}\n                onChange={(e) => setExportSettings(prev => ({ ...prev, category: e.target.value }))}\n                className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600 rounded-lg text-white text-sm focus:border-blue-400 focus:outline-none transition-colors\"\n                placeholder=\"Travel\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Template #\n              </label>\n              <input\n                type=\"text\"\n                value={exportSettings.templateNumber}\n                onChange={(e) => setExportSettings(prev => ({ ...prev, templateNumber: e.target.value }))}\n                className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600 rounded-lg text-white text-sm focus:border-blue-400 focus:outline-none transition-colors\"\n                placeholder=\"006\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Music ID\n              </label>\n              <input\n                type=\"text\"\n                value={exportSettings.musicId}\n                onChange={(e) => setExportSettings(prev => ({ ...prev, musicId: e.target.value }))}\n                className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600 rounded-lg text-white text-sm focus:border-blue-400 focus:outline-none transition-colors\"\n                placeholder=\"012\"\n              />\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-br from-slate-800/50 to-slate-900/50 rounded-2xl p-5 border border-slate-600/40 backdrop-blur-sm\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center\">\n                <FileText className=\"w-4 h-4 text-white\" />\n              </div>\n              <span className=\"text-sm text-slate-300 font-medium\">Preview Filenames</span>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3 p-3 bg-blue-500/10 border border-blue-500/20 rounded-lg\">\n                <div className=\"w-6 h-6 bg-blue-500 rounded flex items-center justify-center\">\n                  <FileText className=\"w-3 h-3 text-white\" />\n                </div>\n                <span className=\"text-xs font-mono text-blue-200 truncate\">{generateFileName('project')}.json</span>\n              </div>\n              <div className=\"flex items-center gap-3 p-3 bg-orange-500/10 border border-orange-500/20 rounded-lg\">\n                <div className=\"w-6 h-6 bg-orange-500 rounded flex items-center justify-center\">\n                  <Music className=\"w-3 h-3 text-white\" />\n                </div>\n                <span className=\"text-xs font-mono text-orange-200 truncate\">{generateFileName('music')}.wav</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-br from-slate-800/50 to-slate-900/50 rounded-2xl p-5 border border-slate-600/40 backdrop-blur-sm\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-green-500 to-teal-500 rounded-lg flex items-center justify-center\">\n                <Scissors className=\"w-4 h-4 text-white\" />\n              </div>\n              <span className=\"text-sm text-slate-300 font-medium\">Trim Settings</span>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"p-3 bg-green-500/10 border border-green-500/20 rounded-lg\">\n                <div className=\"text-green-300 text-xs font-medium mb-1\">IN Point</div>\n                <div className=\"text-white font-mono text-lg\">{formatTime(startTime)}</div>\n              </div>\n              <div className=\"p-3 bg-red-500/10 border border-red-500/20 rounded-lg\">\n                <div className=\"text-red-300 text-xs font-medium mb-1\">OUT Point</div>\n                <div className=\"text-white font-mono text-lg\">{formatTime(endTime)}</div>\n              </div>\n            </div>\n            {startTime >= endTime && (\n              <div className=\"mt-4 text-amber-200 text-xs bg-amber-500/10 rounded-lg p-3 border border-amber-500/20 flex items-center gap-2\">\n                <div className=\"w-5 h-5 bg-amber-500 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-xs\">!</span>\n                </div>\n                <span>Invalid trim points: OUT must be after IN</span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            {/* Duration Card */}\n            <div className=\"group relative overflow-hidden rounded-2xl bg-gradient-to-br from-blue-500/20 via-blue-600/10 to-purple-600/20 border border-blue-500/30 hover:border-blue-400/50 transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-blue-500/25\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-blue-400/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n              <div className=\"relative p-5 text-center\">\n                <div className=\"flex items-center justify-center mb-3\">\n                  <div className=\"w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 flex items-center justify-center shadow-lg\">\n                    <Play className=\"w-5 h-5 text-white\" />\n                  </div>\n                </div>\n                <div className=\"text-blue-200 text-sm font-medium mb-1\">Duration</div>\n                <div className=\"text-white font-bold text-2xl tracking-wide\">\n                  {Math.ceil(endTime - startTime)}<span className=\"text-blue-300 text-lg ml-1\">s</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Plans Card */}\n            <div className=\"group relative overflow-hidden rounded-2xl bg-gradient-to-br from-emerald-500/20 via-emerald-600/10 to-teal-600/20 border border-emerald-500/30 hover:border-emerald-400/50 transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-emerald-500/25\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-emerald-400/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n              <div className=\"relative p-5 text-center\">\n                <div className=\"flex items-center justify-center mb-3\">\n                  <div className=\"w-10 h-10 rounded-full bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center shadow-lg\">\n                    <Users className=\"w-5 h-5 text-white\" />\n                  </div>\n                </div>\n                <div className=\"text-emerald-200 text-sm font-medium mb-1\">Plans</div>\n                <div className=\"text-white font-bold text-2xl tracking-wide\">\n                  {cutMarkers.length + 1}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"space-y-3\">\n        <button\n          onClick={handleExportJSON}\n          disabled={isExporting || cutMarkers.length === 0}\n          className=\"w-full flex items-center justify-center space-x-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 disabled:from-slate-600 disabled:to-slate-600 disabled:cursor-not-allowed px-6 py-4 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none font-semibold\"\n        >\n          {isExporting ? (\n            <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n          ) : (\n            <FileText className=\"w-5 h-5\" />\n          )}\n          <span>Export Snapcut Project</span>\n        </button>\n\n        <button\n          onClick={handleExportAudio}\n          disabled={isExporting || startTime >= endTime}\n          className=\"w-full flex items-center justify-center space-x-3 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 disabled:from-slate-600 disabled:to-slate-600 disabled:cursor-not-allowed px-6 py-4 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none font-semibold\"\n        >\n          {isExporting ? (\n            <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n          ) : (\n            <Scissors className=\"w-5 h-5\" />\n          )}\n          <span>Export Trimmed Audio</span>\n        </button>\n      </div>\n\n      {cutMarkers.length === 0 && (\n        <div className=\"text-center py-6 text-slate-400 text-sm bg-slate-700/20 rounded-xl border border-slate-600/30\">\n          <div className=\"text-2xl mb-2\">✂️</div>\n          <p className=\"font-medium\">Add some cuts to enable JSON export</p>\n        </div>\n      )}\n\n      {startTime >= endTime && (\n        <div className=\"text-center py-6 text-amber-400 text-sm bg-amber-500/10 rounded-xl border border-amber-500/20\">\n          <div className=\"text-2xl mb-2\">⚠️</div>\n          <p className=\"font-medium\">Set valid IN/OUT points to enable audio export</p>\n          <p className=\"text-xs mt-2 opacity-75\">Use I and O keys or Set IN/OUT buttons</p>\n        </div>\n      )}\n    </div>\n  );\n};","import React, { useState } from 'react';\nimport { X, AlertTriangle, Shuffle, Zap } from 'lucide-react';\n\ninterface RandomModeDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onGenerate: (planCount: number) => void;\n  hasInOutPoints: boolean;\n  startTime: number;\n  endTime: number;\n  duration: number;\n  existingCutsCount: number;\n}\n\nexport const RandomModeDialog: React.FC<RandomModeDialogProps> = ({\n  isOpen,\n  onClose,\n  onGenerate,\n  hasInOutPoints,\n  startTime,\n  endTime,\n  duration,\n  existingCutsCount\n}) => {\n  const [planCount, setPlanCount] = useState(4);\n  const [replaceExisting, setReplaceExisting] = useState(true);\n\n  if (!isOpen) return null;\n\n  const handleGenerate = () => {\n    onGenerate(planCount);\n    onClose();\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const activeDuration = endTime - startTime;\n  const maxRecommendedPlans = Math.floor(activeDuration / 2); // 1 plan par 2 secondes maximum\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-slate-800 rounded-2xl border border-slate-700/50 shadow-2xl max-w-md w-full\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-700/50\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center shadow-lg\">\n              <Shuffle className=\"w-5 h-5 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-white\">Random Mode</h2>\n              <p className=\"text-sm text-slate-400\">Generate beat-synced cuts automatically</p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"w-8 h-8 bg-slate-700 hover:bg-slate-600 rounded-lg flex items-center justify-center transition-colors\"\n          >\n            <X className=\"w-4 h-4 text-slate-400\" />\n          </button>\n        </div>\n\n        <div className=\"p-6 space-y-6\">\n          {/* Validation Warning */}\n          {!hasInOutPoints && (\n            <div className=\"bg-amber-500/10 border border-amber-500/30 rounded-xl p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <AlertTriangle className=\"w-5 h-5 text-amber-400 flex-shrink-0 mt-0.5\" />\n                <div>\n                  <h3 className=\"text-amber-400 font-semibold\">Setup Required</h3>\n                  <p className=\"text-sm text-amber-300/90 mt-1\">\n                    Please set IN and OUT points first to define the active region for random cuts.\n                  </p>\n                  <div className=\"flex items-center space-x-4 mt-3 text-xs text-amber-300/70\">\n                    <span>Press <kbd className=\"bg-amber-500/20 px-1 py-0.5 rounded\">I</kbd> to set IN point</span>\n                    <span>Press <kbd className=\"bg-amber-500/20 px-1 py-0.5 rounded\">O</kbd> to set OUT point</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Current State Info */}\n          <div className=\"bg-slate-700/30 rounded-xl p-4 border border-slate-600/30\">\n            <h3 className=\"text-white font-semibold mb-3 flex items-center space-x-2\">\n              <Zap className=\"w-4 h-4 text-blue-400\" />\n              <span>Current Settings</span>\n            </h3>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <div className=\"text-slate-400\">Active Region</div>\n                <div className=\"text-white font-mono\">\n                  {formatTime(startTime)} → {formatTime(endTime)}\n                </div>\n                <div className=\"text-slate-400 text-xs\">\n                  {Math.round(activeDuration)}s duration\n                </div>\n              </div>\n              <div>\n                <div className=\"text-slate-400\">Existing Cuts</div>\n                <div className=\"text-white font-bold text-lg\">{existingCutsCount}</div>\n                {existingCutsCount > 0 && (\n                  <div className=\"text-slate-400 text-xs\">\n                    {replaceExisting ? 'Will be replaced' : 'Will be kept'}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Plan Count Selection */}\n          <div className=\"space-y-4\">\n            <label className=\"block\">\n              <span className=\"text-white font-semibold mb-2 block\">Number of Plans</span>\n              <div className=\"relative\">\n                <input\n                  type=\"range\"\n                  min=\"2\"\n                  max={Math.max(8, maxRecommendedPlans)}\n                  value={planCount}\n                  onChange={(e) => setPlanCount(parseInt(e.target.value))}\n                  className=\"w-full h-2 bg-slate-700 rounded-lg appearance-none cursor-pointer slider\"\n                  disabled={!hasInOutPoints}\n                />\n                <div className=\"flex justify-between text-xs text-slate-400 mt-2\">\n                  <span>2</span>\n                  <span className=\"text-white font-bold\">{planCount} plans ({planCount - 1} cuts)</span>\n                  <span>{Math.max(8, maxRecommendedPlans)}</span>\n                </div>\n              </div>\n              {planCount > maxRecommendedPlans && (\n                <p className=\"text-amber-400 text-xs mt-2\">\n                  ⚠️ Many cuts for this duration - might feel too fast\n                </p>\n              )}\n            </label>\n          </div>\n\n          {/* Options */}\n          {existingCutsCount > 0 && (\n            <div className=\"space-y-3\">\n              <h3 className=\"text-white font-semibold\">Options</h3>\n              <label className=\"flex items-center space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={replaceExisting}\n                  onChange={(e) => setReplaceExisting(e.target.checked)}\n                  className=\"w-4 h-4 text-purple-500 bg-slate-700 border-slate-600 rounded focus:ring-purple-500\"\n                  disabled={!hasInOutPoints}\n                />\n                <span className=\"text-slate-300\">Replace existing cuts</span>\n              </label>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex space-x-3 pt-4\">\n            <button\n              onClick={onClose}\n              className=\"flex-1 px-4 py-3 bg-slate-700 hover:bg-slate-600 text-white rounded-xl transition-colors font-medium\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleGenerate}\n              disabled={!hasInOutPoints}\n              className=\"flex-1 px-4 py-3 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 disabled:from-slate-600 disabled:to-slate-600 text-white rounded-xl transition-all duration-200 font-medium shadow-lg disabled:shadow-none flex items-center justify-center space-x-2\"\n            >\n              <Shuffle className=\"w-4 h-4\" />\n              <span>Generate Cuts</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <style dangerouslySetInnerHTML={{\n        __html: `\n          .slider::-webkit-slider-thumb {\n            appearance: none;\n            height: 20px;\n            width: 20px;\n            border-radius: 50%;\n            background: linear-gradient(45deg, #9333ea, #ec4899);\n            cursor: pointer;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n          }\n          \n          .slider::-moz-range-thumb {\n            height: 20px;\n            width: 20px;\n            border-radius: 50%;\n            background: linear-gradient(45deg, #9333ea, #ec4899);\n            cursor: pointer;\n            border: none;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n          }\n        `\n      }} />\n    </div>\n  );\n}; ","/**\n * Types pour le système de vidéos thématiques\n */\n\n// Nouveaux thèmes demandés par l'utilisateur\nexport type VideoTheme = \n  | 'Travel'\n  | 'Lifestyle'\n  | 'Fashion'\n  | 'Retro'\n  | 'Party'\n  | 'Sport'\n  | 'Games'\n  | 'Food'\n  | 'Vlog'\n  | 'social';\n\n// Configuration des thèmes\nexport interface ThemeConfig {\n  id: VideoTheme;\n  name: string;\n  description: string;\n  keywords: string[];\n  color: string;\n  icon: string;\n}\n\n// Vidéo Pexels (structure de l'API)\nexport interface PexelsVideo {\n  id: number;\n  width: number;\n  height: number;\n  duration: number;\n  full_link: string;\n  tags: string[];\n  url: string;\n  image: string;\n  avg_color: string;\n  user: {\n    id: number;\n    name: string;\n    url: string;\n  };\n  video_files: PexelsVideoFile[];\n  video_pictures: PexelsVideoPicture[];\n}\n\nexport interface PexelsVideoFile {\n  id: number;\n  quality: string;\n  file_type: string;\n  width: number;\n  height: number;\n  fps: number;\n  link: string;\n}\n\nexport interface PexelsVideoPicture {\n  id: number;\n  picture: string;\n  nr: number;\n}\n\n// Réponse de l'API Pexels\nexport interface PexelsResponse {\n  page: number;\n  per_page: number;\n  total_results: number;\n  prev_page?: string;\n  next_page?: string;\n  videos: PexelsVideo[];\n}\n\n// Vidéo simplifiée pour notre usage\nexport interface VideoAsset {\n  id: string;\n  title: string;\n  thumbnail: string;\n  videoUrl: string;\n  duration: number;\n  width: number;\n  height: number;\n  theme: VideoTheme;\n  tags: string[];\n  avgColor: string;\n  author: {\n    name: string;\n    url: string;\n  };\n}\n\n// Sélection de vidéo pour un plan\nexport interface VideoSelection {\n  planIndex: number;\n  cutId: string;\n  video: VideoAsset;\n}\n\n// État des vidéos dans l'application\nexport interface VideoState {\n  currentTheme: VideoTheme;\n  availableVideos: VideoAsset[];\n  selectedVideos: Map<string, VideoAsset>; // cutId -> VideoAsset\n  isLoading: boolean;\n  cache: Map<VideoTheme, VideoAsset[]>;\n}\n\n// Paramètres de recherche vidéo\nexport interface VideoSearchParams {\n  theme: VideoTheme;\n  page?: number;\n  perPage?: number;\n  orientation?: 'landscape' | 'portrait' | 'square';\n  size?: 'large' | 'medium' | 'small';\n  minDuration?: number;\n  maxDuration?: number;\n}\n\n// Configuration du cache\nexport interface VideoCacheConfig {\n  maxAge: number; // en millisecondes\n  maxVideosPerTheme: number;\n  enableLocalStorage: boolean;\n}\n\n// Métadonnées du cache\nexport interface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  expiresAt: number;\n}\n\n// Erreurs spécifiques aux vidéos\nexport class VideoServiceError extends Error {\n  constructor(\n    message: string,\n    public code: 'API_ERROR' | 'NETWORK_ERROR' | 'QUOTA_EXCEEDED' | 'INVALID_THEME',\n    public originalError?: Error\n  ) {\n    super(message);\n    this.name = 'VideoServiceError';\n  }\n}\n\n// Nouvelles interfaces pour le trimming et export avancé\nexport interface VideoTrimSettings {\n  videoId: string;\n  planIndex: number;\n  startTime: number;\n  endTime: number;\n  originalDuration: number;\n}\n\nexport interface ThumbnailConfig {\n  width: number;\n  height: number;\n  quality: number;\n  format: 'jpeg' | 'png';\n}\n\nexport interface VideoExportConfig {\n  compressions: {\n    high: { width: number; height: number; bitrate: string };\n    medium: { width: number; height: number; bitrate: string };\n  };\n  thumbnails: {\n    large: ThumbnailConfig;\n    small: ThumbnailConfig;\n  };\n}\n\nexport interface FinalVideoExport {\n  videoBlob: Blob;\n  thumbnailLarge: Blob;\n  thumbnailSmall: Blob;\n  metadata: {\n    duration: number;\n    resolution: string;\n    fileSize: number;\n    compression: 'high' | 'medium';\n  };\n} ","import { \n  VideoTheme, \n  VideoAsset, \n  VideoSearchParams, \n  PexelsResponse, \n  PexelsVideo,\n  VideoServiceError \n} from '../types/video';\n\n// Configuration de l'API Pexels\nconst PEXELS_API_URL = 'https://api.pexels.com/videos';\nconst PEXELS_API_KEY = import.meta.env.VITE_PEXELS_API_KEY || '';\n\n// Limites de l'API (version gratuite)\nconst API_LIMITS = {\n  requestsPerHour: 200,\n  requestsPerMonth: 20000\n};\n\nclass PexelsService {\n  private requestCount = 0;\n  private lastResetTime = Date.now();\n\n  /**\n   * Configuration des headers pour l'API Pexels\n   */\n  private getHeaders(): HeadersInit {\n    return {\n      'Authorization': PEXELS_API_KEY,\n      'Content-Type': 'application/json'\n    };\n  }\n\n  /**\n   * Vérifie si on peut faire une requête (respect des quotas)\n   */\n  private canMakeRequest(): boolean {\n    const now = Date.now();\n    const hoursSinceReset = (now - this.lastResetTime) / (1000 * 60 * 60);\n    \n    if (hoursSinceReset >= 1) {\n      // Reset du compteur toutes les heures\n      this.requestCount = 0;\n      this.lastResetTime = now;\n    }\n    \n    return this.requestCount < API_LIMITS.requestsPerHour;\n  }\n\n  /**\n   * Transforme une vidéo Pexels en VideoAsset\n   */\n  private transformPexelsVideo(pexelsVideo: PexelsVideo, theme: VideoTheme): VideoAsset {\n    // Trouver la meilleure qualité vidéo (préférer HD)\n    const bestVideo = pexelsVideo.video_files\n      .filter(file => file.file_type === 'video/mp4')\n      .sort((a, b) => {\n        // Prioriser HD puis par taille\n        if (a.quality === 'hd' && b.quality !== 'hd') return -1;\n        if (b.quality === 'hd' && a.quality !== 'hd') return 1;\n        return (b.width * b.height) - (a.width * a.height);\n      })[0];\n\n    // Thumbnail (première image disponible)\n    const thumbnail = pexelsVideo.video_pictures[0]?.picture || pexelsVideo.image;\n\n    return {\n      id: pexelsVideo.id.toString(),\n      title: pexelsVideo.tags.slice(0, 3).join(' ') || 'Video',\n      thumbnail,\n      videoUrl: bestVideo?.link || '',\n      duration: pexelsVideo.duration,\n      width: pexelsVideo.width,\n      height: pexelsVideo.height,\n      theme,\n      tags: pexelsVideo.tags,\n      avgColor: pexelsVideo.avg_color,\n      author: {\n        name: pexelsVideo.user.name,\n        url: pexelsVideo.user.url\n      }\n    };\n  }\n\n  /**\n   * Recherche de vidéos par thème avec mots-clés personnalisés\n   */\n  async searchVideosByTheme(params: VideoSearchParams, customKeywords?: string[]): Promise<VideoAsset[]> {\n    if (!PEXELS_API_KEY) {\n      console.warn('🔑 Pexels API key not found. Using mock data.');\n      return this.getMockVideos(params.theme);\n    }\n\n    if (!this.canMakeRequest()) {\n      throw new VideoServiceError(\n        'API quota exceeded. Please try again later.',\n        'QUOTA_EXCEEDED'\n      );\n    }\n\n    try {\n      // Combiner mots-clés du thème avec mots-clés personnalisés\n      let allKeywords = this.getThemeKeywords(params.theme);\n      if (customKeywords && customKeywords.length > 0) {\n        allKeywords = [...customKeywords, ...allKeywords.slice(0, 2)]; // Priorité aux custom keywords\n      }\n      \n      const searchQuery = allKeywords.join(' ');\n      const url = new URL(`${PEXELS_API_URL}/search`);\n      \n      // Paramètres de recherche\n      url.searchParams.set('query', searchQuery);\n      url.searchParams.set('per_page', (params.perPage || 15).toString());\n      url.searchParams.set('page', (params.page || 1).toString());\n      \n      if (params.orientation) {\n        url.searchParams.set('orientation', params.orientation);\n      }\n      \n      if (params.size) {\n        url.searchParams.set('size', params.size);\n      }\n\n      const response = await fetch(url.toString(), {\n        headers: this.getHeaders()\n      });\n\n      this.requestCount++;\n\n      if (!response.ok) {\n        if (response.status === 429) {\n          throw new VideoServiceError(\n            'Too many requests. Please wait before trying again.',\n            'QUOTA_EXCEEDED'\n          );\n        }\n        throw new VideoServiceError(\n          `API request failed: ${response.status}`,\n          'API_ERROR'\n        );\n      }\n\n      const data: PexelsResponse = await response.json();\n      \n      const videos = data.videos\n        .filter(video => {\n          // Filtrer par durée si spécifié\n          if (params.minDuration && video.duration < params.minDuration) return false;\n          if (params.maxDuration && video.duration > params.maxDuration) return false;\n          return true;\n        })\n        .map(video => this.transformPexelsVideo(video, params.theme))\n        .filter(video => video.videoUrl); // S'assurer qu'on a une URL valide\n\n      const keywordInfo = customKeywords && customKeywords.length > 0 \n        ? ` with keywords: [${customKeywords.join(', ')}]` \n        : '';\n      console.log(`🎬 Loaded ${videos.length} videos for theme \"${params.theme}\"${keywordInfo}`);\n      return videos;\n\n    } catch (error) {\n      if (error instanceof VideoServiceError) {\n        throw error;\n      }\n      \n      console.error('Pexels API error:', error);\n      throw new VideoServiceError(\n        'Failed to fetch videos from Pexels',\n        'NETWORK_ERROR',\n        error as Error\n      );\n    }\n  }\n\n  /**\n   * Vidéos populaires par thème\n   */\n  async getPopularVideos(theme: VideoTheme, limit = 20): Promise<VideoAsset[]> {\n    if (!PEXELS_API_KEY) {\n      return this.getMockVideos(theme, limit);\n    }\n\n    if (!this.canMakeRequest()) {\n      throw new VideoServiceError(\n        'API quota exceeded. Please try again later.',\n        'QUOTA_EXCEEDED'\n      );\n    }\n\n    try {\n      const url = new URL(`${PEXELS_API_URL}/popular`);\n      url.searchParams.set('per_page', limit.toString());\n\n      const response = await fetch(url.toString(), {\n        headers: this.getHeaders()\n      });\n\n      this.requestCount++;\n\n      if (!response.ok) {\n        throw new VideoServiceError(\n          `Failed to fetch popular videos: ${response.status}`,\n          'API_ERROR'\n        );\n      }\n\n      const data: PexelsResponse = await response.json();\n      const keywords = this.getThemeKeywords(theme);\n      \n      // Filtrer les vidéos populaires par thème\n      const filteredVideos = data.videos\n        .filter(video => {\n          const videoTags = video.tags.map(tag => tag.toLowerCase());\n          return keywords.some(keyword => \n            videoTags.some(tag => tag.includes(keyword.toLowerCase()))\n          );\n        })\n        .slice(0, limit)\n        .map(video => this.transformPexelsVideo(video, theme))\n        .filter(video => video.videoUrl);\n\n      console.log(`🔥 Loaded ${filteredVideos.length} popular videos for theme \"${theme}\"`);\n      return filteredVideos;\n\n    } catch (error) {\n      if (error instanceof VideoServiceError) {\n        throw error;\n      }\n      \n      console.error('Popular videos API error:', error);\n      return this.getMockVideos(theme, limit);\n    }\n  }\n\n  /**\n   * Mots-clés par thème pour les recherches Pexels\n   */\n  private getThemeKeywords(theme: VideoTheme): string[] {\n    const themeKeywords: Record<VideoTheme, string[]> = {\n      'Travel': ['travel', 'vacation', 'adventure', 'destination', 'journey', 'explore', 'wanderlust', 'tourism'],\n      'Lifestyle': ['lifestyle', 'home', 'family', 'daily life', 'routine', 'comfort', 'living', 'modern life'],\n      'Fashion': ['fashion', 'style', 'clothing', 'model', 'trendy', 'outfit', 'runway', 'designer'],\n      'Retro': ['retro', 'vintage', 'classic', 'old school', 'nostalgic', '80s', '90s', 'throwback'],\n      'Party': ['party', 'celebration', 'dancing', 'nightlife', 'fun', 'festive', 'music', 'crowd'],\n      'Sport': ['sport', 'fitness', 'exercise', 'athletic', 'training', 'competition', 'active', 'gym'],\n      'Games': ['gaming', 'video games', 'esports', 'console', 'player', 'competition', 'online', 'fun'],\n      'Food': ['food', 'cooking', 'cuisine', 'restaurant', 'chef', 'delicious', 'dining', 'meal'],\n      'Vlog': ['vlog', 'blogger', 'camera', 'content', 'creator', 'recording', 'social media', 'lifestyle'],\n      'social': ['social media', 'community', 'people', 'connection', 'sharing', 'networking', 'friends', 'online']\n    };\n\n    return themeKeywords[theme] || ['video', 'content'];\n  }\n\n  /**\n   * Données de démonstration si pas d'API key\n   */\n  private getMockVideos(theme: VideoTheme, limit = 15): VideoAsset[] {\n    const mockData: VideoAsset[] = Array.from({ length: limit }, (_, i) => ({\n      id: `mock-${theme}-${i}`,\n      title: `${theme} video ${i + 1}`,\n      thumbnail: `https://picsum.photos/400/300?random=${theme}${i}`,\n      videoUrl: `https://player.vimeo.com/external/291648067.hd.mp4?s=94998971682c6a3267e4cbd19d16a7b6c720f345&profile_id=175`,\n      duration: 15 + Math.random() * 30,\n      width: 1920,\n      height: 1080,\n      theme,\n      tags: this.getThemeKeywords(theme).slice(0, 3),\n      avgColor: '#' + Math.floor(Math.random()*16777215).toString(16),\n      author: {\n        name: `Mock Author ${i + 1}`,\n        url: '#'\n      }\n    }));\n\n    console.log(`🎭 Using mock data: ${mockData.length} videos for theme \"${theme}\"`);\n    return mockData;\n  }\n\n  /**\n   * Obtient les statistiques d'utilisation de l'API\n   */\n  getUsageStats() {\n    const hoursSinceReset = (Date.now() - this.lastResetTime) / (1000 * 60 * 60);\n    return {\n      requestsThisHour: this.requestCount,\n      maxRequestsPerHour: API_LIMITS.requestsPerHour,\n      timeUntilReset: Math.max(0, 60 - (hoursSinceReset * 60)), // minutes\n      hasApiKey: !!PEXELS_API_KEY\n    };\n  }\n}\n\n// Instance singleton\nexport const pexelsService = new PexelsService();\nexport default pexelsService; ","import { VideoTheme, VideoAsset, CacheEntry, VideoCacheConfig } from '../types/video';\n\n// Configuration par défaut du cache\nconst DEFAULT_CACHE_CONFIG: VideoCacheConfig = {\n  maxAge: 24 * 60 * 60 * 1000, // 24 heures\n  maxVideosPerTheme: 50,\n  enableLocalStorage: true\n};\n\nclass VideoCache {\n  private memoryCache = new Map<VideoTheme, VideoAsset[]>();\n  private config: VideoCacheConfig;\n  private readonly STORAGE_KEY = 'snapcut_video_cache';\n  private readonly STORAGE_META_KEY = 'snapcut_video_cache_meta';\n\n  constructor(config: Partial<VideoCacheConfig> = {}) {\n    this.config = { ...DEFAULT_CACHE_CONFIG, ...config };\n    this.loadFromStorage();\n    this.startCleanupInterval();\n  }\n\n  /**\n   * Obtient les vidéos du cache pour un thème donné\n   */\n  get(theme: VideoTheme): VideoAsset[] | null {\n    // Vérifier d'abord la mémoire\n    const memoryResult = this.memoryCache.get(theme);\n    if (memoryResult) {\n      return memoryResult;\n    }\n\n    // Vérifier le localStorage si activé\n    if (this.config.enableLocalStorage) {\n      const storageResult = this.getFromStorage(theme);\n      if (storageResult) {\n        // Remettre en mémoire pour les prochains accès\n        this.memoryCache.set(theme, storageResult);\n        return storageResult;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Met en cache les vidéos pour un thème\n   */\n  set(theme: VideoTheme, videos: VideoAsset[]): void {\n    // Limiter le nombre de vidéos par thème\n    const limitedVideos = videos.slice(0, this.config.maxVideosPerTheme);\n    \n    // Sauvegarder en mémoire\n    this.memoryCache.set(theme, limitedVideos);\n\n    // Sauvegarder en localStorage si activé\n    if (this.config.enableLocalStorage) {\n      this.saveToStorage(theme, limitedVideos);\n    }\n\n    console.log(`💾 Cached ${limitedVideos.length} videos for theme \"${theme}\"`);\n  }\n\n  /**\n   * Vérifie si un thème est en cache et valide\n   */\n  has(theme: VideoTheme): boolean {\n    if (this.memoryCache.has(theme)) {\n      return true;\n    }\n\n    if (this.config.enableLocalStorage) {\n      return this.hasInStorage(theme);\n    }\n\n    return false;\n  }\n\n  /**\n   * Supprime un thème du cache\n   */\n  delete(theme: VideoTheme): void {\n    this.memoryCache.delete(theme);\n    \n    if (this.config.enableLocalStorage) {\n      this.deleteFromStorage(theme);\n    }\n  }\n\n  /**\n   * Vide complètement le cache\n   */\n  clear(): void {\n    this.memoryCache.clear();\n    \n    if (this.config.enableLocalStorage) {\n      try {\n        localStorage.removeItem(this.STORAGE_KEY);\n        localStorage.removeItem(this.STORAGE_META_KEY);\n      } catch (error) {\n        console.warn('Failed to clear localStorage cache:', error);\n      }\n    }\n\n    console.log('🗑️ Video cache cleared');\n  }\n\n  /**\n   * Obtient les statistiques du cache\n   */\n  getStats() {\n    const memoryStats = {\n      themes: Array.from(this.memoryCache.keys()),\n      totalVideos: Array.from(this.memoryCache.values()).reduce((sum, videos) => sum + videos.length, 0)\n    };\n\n    let storageStats: { themes: string[], totalVideos: number, sizeKB: number } = { themes: [], totalVideos: 0, sizeKB: 0 };\n    \n    if (this.config.enableLocalStorage) {\n      try {\n        const cached = localStorage.getItem(this.STORAGE_KEY);\n        if (cached) {\n          const data = JSON.parse(cached);\n          storageStats = {\n            themes: Object.keys(data),\n            totalVideos: Object.values(data).reduce((sum: number, entry: any) => sum + entry.data.length, 0),\n            sizeKB: Math.round(cached.length / 1024)\n          };\n        }\n      } catch (error) {\n        console.warn('Failed to get storage stats:', error);\n      }\n    }\n\n    return {\n      memory: memoryStats,\n      storage: storageStats,\n      config: this.config\n    };\n  }\n\n  /**\n   * Sauvegarde en localStorage\n   */\n  private saveToStorage(theme: VideoTheme, videos: VideoAsset[]): void {\n    try {\n      const now = Date.now();\n      const expiresAt = now + this.config.maxAge;\n\n      // Charger le cache existant\n      const existingCache = this.loadStorageData();\n      \n      // Ajouter/mettre à jour le thème\n      existingCache[theme] = {\n        data: videos,\n        timestamp: now,\n        expiresAt\n      };\n\n      // Sauvegarder\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(existingCache));\n      \n      // Mettre à jour les métadonnées\n      this.updateStorageMeta();\n\n    } catch (error) {\n      console.warn(`Failed to save theme \"${theme}\" to localStorage:`, error);\n      \n      // Si erreur de quota, nettoyer le cache et réessayer\n      if (error instanceof Error && error.name === 'QuotaExceededError') {\n        this.clearExpiredFromStorage();\n        try {\n          const existingCache = this.loadStorageData();\n          existingCache[theme] = {\n            data: videos,\n            timestamp: Date.now(),\n            expiresAt: Date.now() + this.config.maxAge\n          };\n          localStorage.setItem(this.STORAGE_KEY, JSON.stringify(existingCache));\n        } catch (retryError) {\n          console.warn('Failed to save after cleanup:', retryError);\n        }\n      }\n    }\n  }\n\n  /**\n   * Récupère depuis localStorage\n   */\n  private getFromStorage(theme: VideoTheme): VideoAsset[] | null {\n    try {\n      const cached = localStorage.getItem(this.STORAGE_KEY);\n      if (!cached) return null;\n\n      const data: Record<VideoTheme, CacheEntry<VideoAsset[]>> = JSON.parse(cached);\n      const entry = data[theme];\n      \n      if (!entry) return null;\n\n      // Vérifier l'expiration\n      if (Date.now() > entry.expiresAt) {\n        this.deleteFromStorage(theme);\n        return null;\n      }\n\n      return entry.data;\n    } catch (error) {\n      console.warn(`Failed to load theme \"${theme}\" from localStorage:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Vérifie la présence en storage\n   */\n  private hasInStorage(theme: VideoTheme): boolean {\n    try {\n      const cached = localStorage.getItem(this.STORAGE_KEY);\n      if (!cached) return false;\n\n      const data: Record<VideoTheme, CacheEntry<VideoAsset[]>> = JSON.parse(cached);\n      const entry = data[theme];\n      \n      return entry && Date.now() <= entry.expiresAt;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Supprime un thème du storage\n   */\n  private deleteFromStorage(theme: VideoTheme): void {\n    try {\n      const existingCache = this.loadStorageData();\n      delete existingCache[theme];\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(existingCache));\n    } catch (error) {\n      console.warn(`Failed to delete theme \"${theme}\" from localStorage:`, error);\n    }\n  }\n\n  /**\n   * Charge les données du storage\n   */\n  private loadStorageData(): Partial<Record<VideoTheme, CacheEntry<VideoAsset[]>>> {\n    try {\n      const cached = localStorage.getItem(this.STORAGE_KEY);\n      return cached ? JSON.parse(cached) : {};\n    } catch (error) {\n      console.warn('Failed to load storage data:', error);\n      return {};\n    }\n  }\n\n  /**\n   * Charge le cache depuis localStorage au démarrage\n   */\n  private loadFromStorage(): void {\n    if (!this.config.enableLocalStorage) return;\n\n    try {\n      const data = this.loadStorageData();\n      const now = Date.now();\n\n      for (const [themeKey, entry] of Object.entries(data)) {\n        const theme = themeKey as VideoTheme;\n        if (entry && now <= entry.expiresAt) {\n          this.memoryCache.set(theme, entry.data);\n        }\n      }\n\n      // Nettoyer les entrées expirées\n      this.clearExpiredFromStorage();\n\n      const loadedThemes = this.memoryCache.size;\n      if (loadedThemes > 0) {\n        console.log(`📂 Loaded ${loadedThemes} themes from cache`);\n      }\n    } catch (error) {\n      console.warn('Failed to load cache from storage:', error);\n    }\n  }\n\n  /**\n   * Nettoie les entrées expirées du localStorage\n   */\n  private clearExpiredFromStorage(): void {\n    try {\n      const data = this.loadStorageData();\n      const now = Date.now();\n      let hasExpired = false;\n\n      for (const [themeKey, entry] of Object.entries(data)) {\n        const theme = themeKey as VideoTheme;\n        if (entry && now > entry.expiresAt) {\n          delete data[theme];\n          hasExpired = true;\n        }\n      }\n\n      if (hasExpired) {\n        localStorage.setItem(this.STORAGE_KEY, JSON.stringify(data));\n        console.log('🧹 Cleaned expired cache entries');\n      }\n    } catch (error) {\n      console.warn('Failed to clean expired cache:', error);\n    }\n  }\n\n  /**\n   * Met à jour les métadonnées du cache\n   */\n  private updateStorageMeta(): void {\n    try {\n      const meta = {\n        lastUpdate: Date.now(),\n        version: '1.0'\n      };\n      localStorage.setItem(this.STORAGE_META_KEY, JSON.stringify(meta));\n    } catch (error) {\n      // Ignore meta errors\n    }\n  }\n\n  /**\n   * Démarre l'intervalle de nettoyage automatique\n   */\n  private startCleanupInterval(): void {\n    // Nettoyer toutes les heures\n    setInterval(() => {\n      this.clearExpiredFromStorage();\n    }, 60 * 60 * 1000);\n  }\n}\n\n// Instance singleton du cache\nexport const videoCache = new VideoCache();\nexport default videoCache; ","import { VideoTheme, VideoAsset, VideoSearchParams } from '../types/video';\nimport { pexelsService } from './pexelsService';\nimport { videoCache } from './videoCache';\n\n/**\n * Service principal pour la gestion des vidéos\n * Combine l'API Pexels et le cache pour une interface unifiée\n */\nclass VideoService {\n  /**\n   * Obtient les vidéos pour un thème donné avec mots-clés personnalisés\n   * Force le refresh à chaque changement pour éviter les problèmes de cache\n   */\n  async getVideosByTheme(theme: VideoTheme, forceRefresh = false, customKeywords?: string[]): Promise<VideoAsset[]> {\n    try {\n      // Si des mots-clés personnalisés, toujours faire une nouvelle recherche\n      const hasCustomKeywords = customKeywords && customKeywords.length > 0;\n      \n      // TOUJOURS nettoyer le cache si custom keywords ou forceRefresh\n      if (hasCustomKeywords || forceRefresh) {\n        console.log(`🧹 Clearing cache for theme \"${theme}\" (custom keywords or forced refresh)`);\n        videoCache.delete(theme);\n      }\n      \n      // Vérifier le cache d'abord (seulement si pas de custom keywords et pas de force refresh)\n      if (!forceRefresh && !hasCustomKeywords) {\n        const cachedVideos = videoCache.get(theme);\n        if (cachedVideos && cachedVideos.length > 0) {\n          console.log(`📂 Using cached videos for theme \"${theme}\"`);\n          return cachedVideos;\n        }\n      }\n\n      // Charger depuis l'API Pexels\n      const keywordInfo = hasCustomKeywords ? ` with keywords: [${customKeywords.join(', ')}]` : '';\n      console.log(`🌐 Fetching videos for theme \"${theme}\"${keywordInfo} from API`);\n      \n      const searchParams: VideoSearchParams = {\n        theme,\n        perPage: 20,\n        orientation: 'portrait', // Préférer format mobile\n        minDuration: 5, // Au moins 5 secondes\n        maxDuration: 60 // Maximum 1 minute\n      };\n\n      const videos = await pexelsService.searchVideosByTheme(searchParams, customKeywords);\n      \n      // Mettre en cache les résultats (seulement si pas de custom keywords)\n      if (videos.length > 0 && !hasCustomKeywords) {\n        videoCache.set(theme, videos);\n      }\n\n      return videos;\n\n    } catch (error) {\n      console.error(`Failed to load videos for theme \"${theme}\":`, error);\n      \n      // En cas d'erreur, essayer le cache comme fallback\n      const cachedVideos = videoCache.get(theme);\n      if (cachedVideos) {\n        console.log(`📂 Using cached videos as fallback for theme \"${theme}\"`);\n        return cachedVideos;\n      }\n      \n      // Si pas de cache, retourner array vide\n      return [];\n    }\n  }\n\n  /**\n   * Obtient les vidéos populaires pour un thème\n   */\n  async getPopularVideosByTheme(theme: VideoTheme): Promise<VideoAsset[]> {\n    try {\n      const cacheKey = `${theme}_popular`;\n      \n      // Vérifier le cache spécifique aux vidéos populaires\n      const cached = videoCache.get(theme);\n      if (cached && cached.length > 0) {\n        // Retourner les 10 premières comme \"populaires\"\n        return cached.slice(0, 10);\n      }\n\n      // Charger les vidéos populaires depuis l'API\n      const videos = await pexelsService.getPopularVideos(theme, 15);\n      \n      if (videos.length > 0) {\n        videoCache.set(theme, videos);\n      }\n\n      return videos;\n\n    } catch (error) {\n      console.error(`Failed to load popular videos for theme \"${theme}\":`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Recherche de vidéos avec des paramètres personnalisés\n   */\n  async searchVideos(params: VideoSearchParams): Promise<VideoAsset[]> {\n    try {\n      return await pexelsService.searchVideosByTheme(params);\n    } catch (error) {\n      console.error('Video search failed:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Précharge les vidéos pour les thèmes populaires\n   */\n  async preloadPopularThemes(): Promise<void> {\n    const popularThemes: VideoTheme[] = [\n      'travel', \n      'lifestyle', \n      'business', \n      'nature'\n    ];\n\n    console.log('🚀 Preloading popular themes...');\n\n    // Précharger en parallèle (mais limité pour ne pas surcharger l'API)\n    const promises = popularThemes.map(async (theme) => {\n      try {\n        // Ne précharger que si pas déjà en cache\n        if (!videoCache.has(theme)) {\n          await this.getVideosByTheme(theme);\n          // Petit délai entre les requêtes pour respecter les quotas\n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n      } catch (error) {\n        console.warn(`Failed to preload theme \"${theme}\":`, error);\n      }\n    });\n\n    await Promise.allSettled(promises);\n    console.log('✅ Popular themes preloading completed');\n  }\n\n  /**\n   * Vide le cache et force le rechargement\n   */\n  clearCache(): void {\n    videoCache.clear();\n    console.log('🗑️ Video cache cleared');\n  }\n\n  /**\n   * Obtient les statistiques du service\n   */\n  getStats() {\n    const cacheStats = videoCache.getStats();\n    const apiStats = pexelsService.getUsageStats();\n\n    return {\n      cache: cacheStats,\n      api: apiStats,\n      totalCachedVideos: cacheStats.memory.totalVideos,\n      availableThemes: cacheStats.memory.themes\n    };\n  }\n\n  /**\n   * Vérifie si un thème est disponible (en cache ou via API)\n   */\n  isThemeAvailable(theme: VideoTheme): boolean {\n    // Un thème est disponible si on a une clé API ou s'il est en cache\n    const apiStats = pexelsService.getUsageStats();\n    return apiStats.hasApiKey || videoCache.has(theme);\n  }\n\n  /**\n   * Obtient une vidéo spécifique par son ID\n   */\n  async getVideoById(id: string, theme: VideoTheme): Promise<VideoAsset | null> {\n    try {\n      const videos = await this.getVideosByTheme(theme);\n      return videos.find(video => video.id === id) || null;\n    } catch (error) {\n      console.error(`Failed to get video ${id}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Filtre les vidéos par durée\n   */\n  filterVideosByDuration(\n    videos: VideoAsset[], \n    minDuration?: number, \n    maxDuration?: number\n  ): VideoAsset[] {\n    return videos.filter(video => {\n      if (minDuration && video.duration < minDuration) return false;\n      if (maxDuration && video.duration > maxDuration) return false;\n      return true;\n    });\n  }\n\n  /**\n   * Obtient les vidéos recommandées pour un thème\n   * (combine populaires et nouvelles)\n   */\n  async getRecommendedVideos(theme: VideoTheme): Promise<VideoAsset[]> {\n    try {\n      const [popular, regular] = await Promise.all([\n        this.getPopularVideosByTheme(theme),\n        this.getVideosByTheme(theme)\n      ]);\n\n      // Combiner et dédupliquer\n      const combined = [...popular];\n      const popularIds = new Set(popular.map(v => v.id));\n      \n      // Ajouter les vidéos régulières qui ne sont pas déjà dans populaires\n      regular.forEach(video => {\n        if (!popularIds.has(video.id) && combined.length < 25) {\n          combined.push(video);\n        }\n      });\n\n      return combined;\n\n    } catch (error) {\n      console.error(`Failed to get recommended videos for \"${theme}\":`, error);\n      return [];\n    }\n  }\n}\n\n// Instance singleton\nexport const videoService = new VideoService();\nexport default videoService; ","import React, { useState, useEffect } from 'react';\nimport { Monitor, Database, Wifi } from 'lucide-react';\nimport { videoService } from '../services/videoService';\n\nexport const VideoDebug: React.FC = () => {\n  const [stats, setStats] = useState<any>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    const updateStats = () => {\n      setStats(videoService.getStats());\n    };\n\n    updateStats();\n    const interval = setInterval(updateStats, 5000); // Update every 5s\n\n    return () => clearInterval(interval);\n  }, []);\n\n  if (!stats) return null;\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-12 h-12 bg-blue-600 hover:bg-blue-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\"\n        title=\"Video System Debug\"\n      >\n        <Monitor className=\"w-5 h-5\" />\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute bottom-16 right-0 w-80 bg-slate-800 rounded-xl border border-slate-600 shadow-2xl p-4 text-sm\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"font-semibold text-white flex items-center space-x-2\">\n              <span>🎬</span>\n              <span>Video System</span>\n            </h3>\n            <button\n              onClick={() => setIsOpen(false)}\n              className=\"text-slate-400 hover:text-white\"\n            >\n              ✕\n            </button>\n          </div>\n\n          <div className=\"space-y-3\">\n            {/* API Status */}\n            <div className=\"bg-slate-700/50 rounded-lg p-3\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Wifi className=\"w-4 h-4 text-blue-400\" />\n                <span className=\"text-white font-medium\">Pexels API</span>\n              </div>\n              <div className=\"space-y-1 text-xs\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-400\">Status:</span>\n                  <span className={stats.api.hasApiKey ? 'text-green-400' : 'text-orange-400'}>\n                    {stats.api.hasApiKey ? '✅ Connected' : '⚠️ Mock Mode'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-400\">Requests/Hour:</span>\n                  <span className=\"text-white\">\n                    {stats.api.requestsThisHour}/{stats.api.maxRequestsPerHour}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-400\">Reset in:</span>\n                  <span className=\"text-white\">\n                    {Math.round(stats.api.timeUntilReset)}min\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Cache Status */}\n            <div className=\"bg-slate-700/50 rounded-lg p-3\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Database className=\"w-4 h-4 text-green-400\" />\n                <span className=\"text-white font-medium\">Cache</span>\n              </div>\n              <div className=\"space-y-1 text-xs\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-400\">Memory:</span>\n                  <span className=\"text-white\">{stats.cache.memory.totalVideos} videos</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-400\">Storage:</span>\n                  <span className=\"text-white\">\n                    {stats.cache.storage.totalVideos} videos ({stats.cache.storage.sizeKB}KB)\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-400\">Themes:</span>\n                  <span className=\"text-white\">{stats.availableThemes.length}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Available Themes */}\n            <div className=\"bg-slate-700/50 rounded-lg p-3\">\n              <div className=\"text-white font-medium mb-2\">Cached Themes</div>\n              <div className=\"flex flex-wrap gap-1\">\n                {stats.availableThemes.length > 0 ? (\n                  stats.availableThemes.map((theme: string) => (\n                    <span\n                      key={theme}\n                      className=\"px-2 py-1 bg-blue-600/20 text-blue-300 rounded text-xs\"\n                    >\n                      {theme}\n                    </span>\n                  ))\n                ) : (\n                  <span className=\"text-slate-400 text-xs\">None cached yet</span>\n                )}\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex space-x-2 pt-2 border-t border-slate-600\">\n              <button\n                onClick={() => {\n                  videoService.clearCache();\n                  setStats(videoService.getStats());\n                }}\n                className=\"flex-1 px-3 py-2 bg-red-600/20 text-red-300 rounded-lg text-xs hover:bg-red-600/30 transition-colors\"\n              >\n                Clear Cache\n              </button>\n              <button\n                onClick={() => {\n                  videoService.preloadPopularThemes();\n                }}\n                className=\"flex-1 px-3 py-2 bg-blue-600/20 text-blue-300 rounded-lg text-xs hover:bg-blue-600/30 transition-colors\"\n              >\n                Preload\n              </button>\n            </div>\n            \n            {/* Video Shuffle */}\n            <div className=\"pt-2 border-t border-slate-600\">\n              <button\n                onClick={() => {\n                  import('../services/planVideoAssigner').then(({ planVideoAssigner }) => {\n                    planVideoAssigner.shuffleAssignments();\n                    console.log('🎲 Videos shuffled! Check the preview panel.');\n                  });\n                }}\n                className=\"w-full px-3 py-2 bg-purple-600/20 text-purple-300 rounded-lg text-xs hover:bg-purple-600/30 transition-colors flex items-center justify-center space-x-2\"\n              >\n                <span>🎲</span>\n                <span>Shuffle Videos</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}; ","import { ThumbnailConfig } from '../types/video';\n\n/**\n * Configuration par défaut pour les thumbnails\n */\nexport const DEFAULT_THUMBNAIL_CONFIGS: {\n  large: ThumbnailConfig;\n  small: ThumbnailConfig;\n} = {\n  large: {\n    width: 1080,\n    height: 1920,\n    quality: 0.9,\n    format: 'jpeg'\n  },\n  small: {\n    width: 540,\n    height: 960,\n    quality: 0.8,\n    format: 'jpeg'\n  }\n};\n\n/**\n * Génère un thumbnail JPEG à partir d'une vidéo au temps spécifié\n */\nexport async function generateVideoThumbnail(\n  video: HTMLVideoElement,\n  config: ThumbnailConfig,\n  timeSeconds: number = 0\n): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    // S'assurer que la vidéo est chargée\n    if (video.readyState < video.HAVE_CURRENT_DATA) {\n      const handleLoadedData = () => {\n        video.removeEventListener('loadeddata', handleLoadedData);\n        generateThumbnailFromVideo(video, config, timeSeconds)\n          .then(resolve)\n          .catch(reject);\n      };\n      video.addEventListener('loadeddata', handleLoadedData);\n      return;\n    }\n\n    generateThumbnailFromVideo(video, config, timeSeconds)\n      .then(resolve)\n      .catch(reject);\n  });\n}\n\n/**\n * Génère le thumbnail à partir d'une vidéo déjà chargée\n */\nasync function generateThumbnailFromVideo(\n  video: HTMLVideoElement,\n  config: ThumbnailConfig,\n  timeSeconds: number\n): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    try {\n      // Créer un canvas avec les dimensions spécifiées\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      if (!ctx) {\n        throw new Error('Failed to get canvas context');\n      }\n\n      canvas.width = config.width;\n      canvas.height = config.height;\n\n      // Sauvegarder le temps actuel de la vidéo\n      const originalTime = video.currentTime;\n\n      // Handler pour quand la vidéo atteint le temps souhaité\n      const handleSeeked = () => {\n        video.removeEventListener('seeked', handleSeeked);\n        \n        try {\n          // Calculer les dimensions pour maintenir le ratio d'aspect\n          const videoAspect = video.videoWidth / video.videoHeight;\n          const canvasAspect = config.width / config.height;\n          \n          let drawWidth = config.width;\n          let drawHeight = config.height;\n          let offsetX = 0;\n          let offsetY = 0;\n\n          if (videoAspect > canvasAspect) {\n            // Vidéo plus large, ajuster la largeur\n            drawWidth = config.height * videoAspect;\n            offsetX = (config.width - drawWidth) / 2;\n          } else {\n            // Vidéo plus haute, ajuster la hauteur  \n            drawHeight = config.width / videoAspect;\n            offsetY = (config.height - drawHeight) / 2;\n          }\n\n          // Remplir le fond en noir\n          ctx.fillStyle = '#000000';\n          ctx.fillRect(0, 0, config.width, config.height);\n\n          // Dessiner la vidéo sur le canvas\n          ctx.drawImage(video, offsetX, offsetY, drawWidth, drawHeight);\n\n          // Convertir en blob\n          canvas.toBlob(\n            (blob) => {\n              // Restaurer le temps original de la vidéo\n              video.currentTime = originalTime;\n              \n              if (blob) {\n                resolve(blob);\n              } else {\n                reject(new Error('Failed to create thumbnail blob'));\n              }\n            },\n            `image/${config.format}`,\n            config.quality\n          );\n        } catch (error) {\n          video.currentTime = originalTime;\n          reject(error);\n        }\n      };\n\n      // Aller au temps spécifié\n      video.addEventListener('seeked', handleSeeked);\n      video.currentTime = Math.max(0, Math.min(timeSeconds, video.duration - 0.1));\n      \n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n * Génère les deux thumbnails (large et small) pour une vidéo\n */\nexport async function generateVideoThumbnails(\n  video: HTMLVideoElement,\n  timeSeconds: number = 0,\n  customConfigs?: { large?: Partial<ThumbnailConfig>; small?: Partial<ThumbnailConfig> }\n): Promise<{ large: Blob; small: Blob }> {\n  const largeConfig = { ...DEFAULT_THUMBNAIL_CONFIGS.large, ...customConfigs?.large };\n  const smallConfig = { ...DEFAULT_THUMBNAIL_CONFIGS.small, ...customConfigs?.small };\n\n  try {\n    // Générer les deux thumbnails en parallèle pour optimiser les performances\n    const [large, small] = await Promise.all([\n      generateVideoThumbnail(video, largeConfig, timeSeconds),\n      generateVideoThumbnail(video, smallConfig, timeSeconds)\n    ]);\n\n    return { large, small };\n  } catch (error) {\n    console.error('Failed to generate thumbnails:', error);\n    throw new Error(`Thumbnail generation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n}\n\n/**\n * Génère un thumbnail à partir d'une URL de vidéo\n */\nexport async function generateThumbnailFromUrl(\n  videoUrl: string,\n  config: ThumbnailConfig,\n  timeSeconds: number = 0\n): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    const video = document.createElement('video');\n    video.crossOrigin = 'anonymous';\n    video.preload = 'metadata';\n\n    const handleLoadedMetadata = async () => {\n      try {\n        const thumbnail = await generateVideoThumbnail(video, config, timeSeconds);\n        resolve(thumbnail);\n      } catch (error) {\n        reject(error);\n      } finally {\n        // Nettoyer\n        video.remove();\n      }\n    };\n\n    const handleError = () => {\n      video.remove();\n      reject(new Error(`Failed to load video from URL: ${videoUrl}`));\n    };\n\n    video.addEventListener('loadedmetadata', handleLoadedMetadata);\n    video.addEventListener('error', handleError);\n    \n    video.src = videoUrl;\n  });\n}\n\n/**\n * Télécharge un blob comme fichier\n */\nexport function downloadThumbnail(blob: Blob, filename: string): void {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.style.display = 'none';\n  \n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  \n  // Nettoyer l'URL après un délai\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n  }, 1000);\n}\n\n/**\n * Génère un nom de fichier pour un thumbnail\n */\nexport function generateThumbnailFilename(\n  projectName: string,\n  size: 'large' | 'small',\n  config: ThumbnailConfig\n): string {\n  return `${projectName}_thumbnail_${size}_${config.width}x${config.height}.${config.format}`;\n} ","export const MIME_TYPE_JAVASCRIPT = \"text/javascript\";\nexport const MIME_TYPE_WASM = \"application/wasm\";\nexport const CORE_VERSION = \"0.12.9\";\nexport const CORE_URL = `https://unpkg.com/@ffmpeg/core@${CORE_VERSION}/dist/umd/ffmpeg-core.js`;\nexport var FFMessageType;\n(function (FFMessageType) {\n    FFMessageType[\"LOAD\"] = \"LOAD\";\n    FFMessageType[\"EXEC\"] = \"EXEC\";\n    FFMessageType[\"FFPROBE\"] = \"FFPROBE\";\n    FFMessageType[\"WRITE_FILE\"] = \"WRITE_FILE\";\n    FFMessageType[\"READ_FILE\"] = \"READ_FILE\";\n    FFMessageType[\"DELETE_FILE\"] = \"DELETE_FILE\";\n    FFMessageType[\"RENAME\"] = \"RENAME\";\n    FFMessageType[\"CREATE_DIR\"] = \"CREATE_DIR\";\n    FFMessageType[\"LIST_DIR\"] = \"LIST_DIR\";\n    FFMessageType[\"DELETE_DIR\"] = \"DELETE_DIR\";\n    FFMessageType[\"ERROR\"] = \"ERROR\";\n    FFMessageType[\"DOWNLOAD\"] = \"DOWNLOAD\";\n    FFMessageType[\"PROGRESS\"] = \"PROGRESS\";\n    FFMessageType[\"LOG\"] = \"LOG\";\n    FFMessageType[\"MOUNT\"] = \"MOUNT\";\n    FFMessageType[\"UNMOUNT\"] = \"UNMOUNT\";\n})(FFMessageType || (FFMessageType = {}));\n","/**\n * Generate an unique message ID.\n */\nexport const getMessageID = (() => {\n    let messageID = 0;\n    return () => messageID++;\n})();\n","export const ERROR_UNKNOWN_MESSAGE_TYPE = new Error(\"unknown message type\");\nexport const ERROR_NOT_LOADED = new Error(\"ffmpeg is not loaded, call `await ffmpeg.load()` first\");\nexport const ERROR_TERMINATED = new Error(\"called FFmpeg.terminate()\");\nexport const ERROR_IMPORT_FAILURE = new Error(\"failed to import ffmpeg-core.js\");\n","import { FFMessageType } from \"./const.js\";\nimport { getMessageID } from \"./utils.js\";\nimport { ERROR_TERMINATED, ERROR_NOT_LOADED } from \"./errors.js\";\n/**\n * Provides APIs to interact with ffmpeg web worker.\n *\n * @example\n * ```ts\n * const ffmpeg = new FFmpeg();\n * ```\n */\nexport class FFmpeg {\n    #worker = null;\n    /**\n     * #resolves and #rejects tracks Promise resolves and rejects to\n     * be called when we receive message from web worker.\n     */\n    #resolves = {};\n    #rejects = {};\n    #logEventCallbacks = [];\n    #progressEventCallbacks = [];\n    loaded = false;\n    /**\n     * register worker message event handlers.\n     */\n    #registerHandlers = () => {\n        if (this.#worker) {\n            this.#worker.onmessage = ({ data: { id, type, data }, }) => {\n                switch (type) {\n                    case FFMessageType.LOAD:\n                        this.loaded = true;\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.MOUNT:\n                    case FFMessageType.UNMOUNT:\n                    case FFMessageType.EXEC:\n                    case FFMessageType.FFPROBE:\n                    case FFMessageType.WRITE_FILE:\n                    case FFMessageType.READ_FILE:\n                    case FFMessageType.DELETE_FILE:\n                    case FFMessageType.RENAME:\n                    case FFMessageType.CREATE_DIR:\n                    case FFMessageType.LIST_DIR:\n                    case FFMessageType.DELETE_DIR:\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.LOG:\n                        this.#logEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.PROGRESS:\n                        this.#progressEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.ERROR:\n                        this.#rejects[id](data);\n                        break;\n                }\n                delete this.#resolves[id];\n                delete this.#rejects[id];\n            };\n        }\n    };\n    /**\n     * Generic function to send messages to web worker.\n     */\n    #send = ({ type, data }, trans = [], signal) => {\n        if (!this.#worker) {\n            return Promise.reject(ERROR_NOT_LOADED);\n        }\n        return new Promise((resolve, reject) => {\n            const id = getMessageID();\n            this.#worker && this.#worker.postMessage({ id, type, data }, trans);\n            this.#resolves[id] = resolve;\n            this.#rejects[id] = reject;\n            signal?.addEventListener(\"abort\", () => {\n                reject(new DOMException(`Message # ${id} was aborted`, \"AbortError\"));\n            }, { once: true });\n        });\n    };\n    on(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks.push(callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks.push(callback);\n        }\n    }\n    off(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks = this.#logEventCallbacks.filter((f) => f !== callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks = this.#progressEventCallbacks.filter((f) => f !== callback);\n        }\n    }\n    /**\n     * Loads ffmpeg-core inside web worker. It is required to call this method first\n     * as it initializes WebAssembly and other essential variables.\n     *\n     * @category FFmpeg\n     * @returns `true` if ffmpeg core is loaded for the first time.\n     */\n    load = ({ classWorkerURL, ...config } = {}, { signal } = {}) => {\n        if (!this.#worker) {\n            this.#worker = classWorkerURL ?\n                new Worker(new URL(classWorkerURL, import.meta.url), {\n                    type: \"module\",\n                }) :\n                // We need to duplicated the code here to enable webpack\n                // to bundle worekr.js here.\n                new Worker(new URL(\"./worker.js\", import.meta.url), {\n                    type: \"module\",\n                });\n            this.#registerHandlers();\n        }\n        return this.#send({\n            type: FFMessageType.LOAD,\n            data: config,\n        }, undefined, signal);\n    };\n    /**\n     * Execute ffmpeg command.\n     *\n     * @remarks\n     * To avoid common I/O issues, [\"-nostdin\", \"-y\"] are prepended to the args\n     * by default.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // ffmpeg -i video.avi video.mp4\n     * await ffmpeg.exec([\"-i\", \"video.avi\", \"video.mp4\"]);\n     * const data = ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    exec = (\n    /** ffmpeg command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.EXEC,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Execute ffprobe command.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // Getting duration of a video in seconds: ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 video.avi -o output.txt\n     * await ffmpeg.ffprobe([\"-v\", \"error\", \"-show_entries\", \"format=duration\", \"-of\", \"default=noprint_wrappers=1:nokey=1\", \"video.avi\", \"-o\", \"output.txt\"]);\n     * const data = ffmpeg.readFile(\"output.txt\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    ffprobe = (\n    /** ffprobe command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.FFPROBE,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Terminate all ongoing API calls and terminate web worker.\n     * `FFmpeg.load()` must be called again before calling any other APIs.\n     *\n     * @category FFmpeg\n     */\n    terminate = () => {\n        const ids = Object.keys(this.#rejects);\n        // rejects all incomplete Promises.\n        for (const id of ids) {\n            this.#rejects[id](ERROR_TERMINATED);\n            delete this.#rejects[id];\n            delete this.#resolves[id];\n        }\n        if (this.#worker) {\n            this.#worker.terminate();\n            this.#worker = null;\n            this.loaded = false;\n        }\n    };\n    /**\n     * Write data to ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", await fetchFile(\"../video.avi\"));\n     * await ffmpeg.writeFile(\"text.txt\", \"hello world\");\n     * ```\n     *\n     * @category File System\n     */\n    writeFile = (path, data, { signal } = {}) => {\n        const trans = [];\n        if (data instanceof Uint8Array) {\n            trans.push(data.buffer);\n        }\n        return this.#send({\n            type: FFMessageType.WRITE_FILE,\n            data: { path, data },\n        }, trans, signal);\n    };\n    mount = (fsType, options, mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.MOUNT,\n            data: { fsType, options, mountPoint },\n        }, trans);\n    };\n    unmount = (mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.UNMOUNT,\n            data: { mountPoint },\n        }, trans);\n    };\n    /**\n     * Read data from ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * const data = await ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @category File System\n     */\n    readFile = (path, \n    /**\n     * File content encoding, supports two encodings:\n     * - utf8: read file as text file, return data in string type.\n     * - binary: read file as binary file, return data in Uint8Array type.\n     *\n     * @defaultValue binary\n     */\n    encoding = \"binary\", { signal } = {}) => this.#send({\n        type: FFMessageType.READ_FILE,\n        data: { path, encoding },\n    }, undefined, signal);\n    /**\n     * Delete a file.\n     *\n     * @category File System\n     */\n    deleteFile = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_FILE,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Rename a file or directory.\n     *\n     * @category File System\n     */\n    rename = (oldPath, newPath, { signal } = {}) => this.#send({\n        type: FFMessageType.RENAME,\n        data: { oldPath, newPath },\n    }, undefined, signal);\n    /**\n     * Create a directory.\n     *\n     * @category File System\n     */\n    createDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.CREATE_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * List directory contents.\n     *\n     * @category File System\n     */\n    listDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.LIST_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Delete an empty directory.\n     *\n     * @category File System\n     */\n    deleteDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_DIR,\n        data: { path },\n    }, undefined, signal);\n}\n","export var FFFSType;\n(function (FFFSType) {\n    FFFSType[\"MEMFS\"] = \"MEMFS\";\n    FFFSType[\"NODEFS\"] = \"NODEFS\";\n    FFFSType[\"NODERAWFS\"] = \"NODERAWFS\";\n    FFFSType[\"IDBFS\"] = \"IDBFS\";\n    FFFSType[\"WORKERFS\"] = \"WORKERFS\";\n    FFFSType[\"PROXYFS\"] = \"PROXYFS\";\n})(FFFSType || (FFFSType = {}));\n","export const ERROR_RESPONSE_BODY_READER = new Error(\"failed to get response body reader\");\nexport const ERROR_INCOMPLETED_DOWNLOAD = new Error(\"failed to complete download\");\n","import { ERROR_RESPONSE_BODY_READER, ERROR_INCOMPLETED_DOWNLOAD, } from \"./errors.js\";\nimport { HeaderContentLength } from \"./const.js\";\nconst readFromBlobOrFile = (blob) => new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n        const { result } = fileReader;\n        if (result instanceof ArrayBuffer) {\n            resolve(new Uint8Array(result));\n        }\n        else {\n            resolve(new Uint8Array());\n        }\n    };\n    fileReader.onerror = (event) => {\n        reject(Error(`File could not be read! Code=${event?.target?.error?.code || -1}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n});\n/**\n * An util function to fetch data from url string, base64, URL, File or Blob format.\n *\n * Examples:\n * ```ts\n * // URL\n * await fetchFile(\"http://localhost:3000/video.mp4\");\n * // base64\n * await fetchFile(\"data:<type>;base64,wL2dvYWwgbW9yZ...\");\n * // URL\n * await fetchFile(new URL(\"video.mp4\", import.meta.url));\n * // File\n * fileInput.addEventListener('change', (e) => {\n *   await fetchFile(e.target.files[0]);\n * });\n * // Blob\n * const blob = new Blob(...);\n * await fetchFile(blob);\n * ```\n */\nexport const fetchFile = async (file) => {\n    let data;\n    if (typeof file === \"string\") {\n        /* From base64 format */\n        if (/data:_data\\/([a-zA-Z]*);base64,([^\"]*)/.test(file)) {\n            data = atob(file.split(\",\")[1])\n                .split(\"\")\n                .map((c) => c.charCodeAt(0));\n            /* From remote server/URL */\n        }\n        else {\n            data = await (await fetch(file)).arrayBuffer();\n        }\n    }\n    else if (file instanceof URL) {\n        data = await (await fetch(file)).arrayBuffer();\n    }\n    else if (file instanceof File || file instanceof Blob) {\n        data = await readFromBlobOrFile(file);\n    }\n    else {\n        return new Uint8Array();\n    }\n    return new Uint8Array(data);\n};\n/**\n * importScript dynamically import a script, useful when you\n * want to use different versions of ffmpeg.wasm based on environment.\n *\n * Example:\n *\n * ```ts\n * await importScript(\"http://localhost:3000/ffmpeg.js\");\n * ```\n */\nexport const importScript = async (url) => new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    const eventHandler = () => {\n        script.removeEventListener(\"load\", eventHandler);\n        resolve();\n    };\n    script.src = url;\n    script.type = \"text/javascript\";\n    script.addEventListener(\"load\", eventHandler);\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n});\n/**\n * Download content of a URL with progress.\n *\n * Progress only works when Content-Length is provided by the server.\n *\n */\nexport const downloadWithProgress = async (url, cb) => {\n    const resp = await fetch(url);\n    let buf;\n    try {\n        // Set total to -1 to indicate that there is not Content-Type Header.\n        const total = parseInt(resp.headers.get(HeaderContentLength) || \"-1\");\n        const reader = resp.body?.getReader();\n        if (!reader)\n            throw ERROR_RESPONSE_BODY_READER;\n        const chunks = [];\n        let received = 0;\n        for (;;) {\n            const { done, value } = await reader.read();\n            const delta = value ? value.length : 0;\n            if (done) {\n                if (total != -1 && total !== received)\n                    throw ERROR_INCOMPLETED_DOWNLOAD;\n                cb && cb({ url, total, received, delta, done });\n                break;\n            }\n            chunks.push(value);\n            received += delta;\n            cb && cb({ url, total, received, delta, done });\n        }\n        const data = new Uint8Array(received);\n        let position = 0;\n        for (const chunk of chunks) {\n            data.set(chunk, position);\n            position += chunk.length;\n        }\n        buf = data.buffer;\n    }\n    catch (e) {\n        console.log(`failed to send download progress event: `, e);\n        // Fetch arrayBuffer directly when it is not possible to get progress.\n        buf = await resp.arrayBuffer();\n        cb &&\n            cb({\n                url,\n                total: buf.byteLength,\n                received: buf.byteLength,\n                delta: 0,\n                done: true,\n            });\n    }\n    return buf;\n};\n/**\n * toBlobURL fetches data from an URL and return a blob URL.\n *\n * Example:\n *\n * ```ts\n * await toBlobURL(\"http://localhost:3000/ffmpeg.js\", \"text/javascript\");\n * ```\n */\nexport const toBlobURL = async (url, mimeType, progress = false, cb) => {\n    const buf = progress\n        ? await downloadWithProgress(url, cb)\n        : await (await fetch(url)).arrayBuffer();\n    const blob = new Blob([buf], { type: mimeType });\n    return URL.createObjectURL(blob);\n};\n","export const HeaderContentLength = \"Content-Length\";\n","import { FFmpeg } from '@ffmpeg/ffmpeg';\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\nimport { VideoAsset, VideoExportConfig, FinalVideoExport } from '../types/video';\nimport { CutMarker } from '../types';\nimport { generateVideoThumbnails, DEFAULT_THUMBNAIL_CONFIGS } from '../utils/thumbnailGenerator';\n\ninterface VideoSegment {\n  planIndex: number;\n  video: VideoAsset;\n  startTime: number;\n  endTime: number;\n  trimSettings?: {\n    startTime: number;\n    endTime: number;\n  };\n}\n\ninterface ExportProgress {\n  stage: 'initializing' | 'downloading' | 'processing' | 'encoding' | 'thumbnails' | 'complete';\n  progress: number;\n  message: string;\n}\n\nexport class VideoEditor {\n  private ffmpeg: FFmpeg;\n  private isLoaded = false;\n\n  constructor() {\n    this.ffmpeg = new FFmpeg();\n  }\n\n  /**\n   * Initialise FFmpeg avec les callbacks de progression\n   */\n  async initialize(onProgress?: (progress: ExportProgress) => void): Promise<void> {\n    if (this.isLoaded) return;\n\n    try {\n      onProgress?.({\n        stage: 'initializing',\n        progress: 0,\n        message: 'Loading FFmpeg...'\n      });\n\n      // Try local files first (no CORS issues)\n      let loaded = false;\n      \n      try {\n        onProgress?.({\n          stage: 'initializing',\n          progress: 25,\n          message: 'Loading FFmpeg from local files...'\n        });\n\n        await this.ffmpeg.load({\n          coreURL: await toBlobURL('/ffmpeg/ffmpeg-core.js', 'text/javascript'),\n          wasmURL: await toBlobURL('/ffmpeg/ffmpeg-core.wasm', 'application/wasm'),\n        });\n        \n        loaded = true;\n        console.log('✅ FFmpeg loaded successfully from local files');\n      } catch (localError) {\n        console.warn('❌ Failed to load local FFmpeg, trying CDN fallback:', localError);\n        \n        // Fallback to CDN URLs\n        const cdnUrls = [\n          'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd',\n          'https://cdn.jsdelivr.net/npm/@ffmpeg/core@0.12.6/dist/umd',\n          'https://unpkg.com/@ffmpeg/core@0.12.4/dist/umd'\n        ];\n\n        for (const baseURL of cdnUrls) {\n          try {\n            onProgress?.({\n              stage: 'initializing',\n              progress: 50,\n              message: `Loading FFmpeg from ${baseURL.includes('jsdelivr') ? 'jsdelivr' : 'unpkg'} (fallback)...`\n            });\n\n            await this.ffmpeg.load({\n              coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n              wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n            });\n            \n            loaded = true;\n            console.log(`✅ FFmpeg loaded successfully from ${baseURL}`);\n            break;\n          } catch (error) {\n            console.warn(`❌ Failed to load FFmpeg from ${baseURL}:`, error);\n            if (baseURL === cdnUrls[cdnUrls.length - 1]) {\n              throw new Error('All FFmpeg sources failed. Please check your internet connection and SharedArrayBuffer support.');\n            }\n          }\n        }\n      }\n\n      if (!loaded) {\n        throw new Error('Failed to load FFmpeg from all sources');\n      }\n\n      // Set up progress callback\n      this.ffmpeg.on('progress', ({ progress }) => {\n        onProgress?.({\n          stage: 'encoding',\n          progress: Math.round(progress * 100),\n          message: `Encoding video... ${Math.round(progress * 100)}%`\n        });\n      });\n\n      this.isLoaded = true;\n\n      onProgress?.({\n        stage: 'initializing',\n        progress: 100,\n        message: 'FFmpeg loaded successfully'\n      });\n\n    } catch (error) {\n      console.error('Failed to load FFmpeg:', error);\n      throw new Error('Failed to initialize video editor');\n    }\n  }\n\n  /**\n   * Crée les segments vidéo à partir des cut markers\n   */\n  private createVideoSegments(\n    cutMarkers: CutMarker[],\n    videoAssignments: Map<number, VideoAsset>,\n    startTime: number,\n    endTime: number,\n    videoTrims: Map<number, { startTime: number; endTime: number }>\n  ): VideoSegment[] {\n    const segments: VideoSegment[] = [];\n    const sortedCuts = [...cutMarkers].sort((a, b) => a.time - b.time);\n\n    // Premier segment (Plan 1)\n    const firstCutTime = sortedCuts.length > 0 ? sortedCuts[0].time : endTime;\n    const plan1Video = videoAssignments.get(1);\n    if (plan1Video) {\n      segments.push({\n        planIndex: 1,\n        video: plan1Video,\n        startTime: startTime,\n        endTime: Math.min(firstCutTime, endTime),\n        trimSettings: videoTrims.get(1)\n      });\n    }\n\n    // Segments suivants\n    for (let i = 0; i < sortedCuts.length; i++) {\n      const cut = sortedCuts[i];\n      const nextCut = sortedCuts[i + 1];\n      const planIndex = i + 2;\n      const planVideo = videoAssignments.get(planIndex);\n\n      if (planVideo && cut.time < endTime) {\n        segments.push({\n          planIndex,\n          video: planVideo,\n          startTime: Math.max(cut.time, startTime),\n          endTime: Math.min(nextCut ? nextCut.time : endTime, endTime),\n          trimSettings: videoTrims.get(planIndex)\n        });\n      }\n    }\n\n    return segments.filter(segment => segment.endTime > segment.startTime);\n  }\n\n  /**\n   * Télécharge et prépare les fichiers vidéo\n   */\n  private async downloadAndPrepareVideos(\n    segments: VideoSegment[],\n    onProgress?: (progress: ExportProgress) => void\n  ): Promise<void> {\n    onProgress?.({\n      stage: 'downloading',\n      progress: 0,\n      message: `Downloading ${segments.length} videos...`\n    });\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      \n      try {\n        onProgress?.({\n          stage: 'downloading',\n          progress: (i / segments.length) * 100,\n          message: `Downloading video ${i + 1}/${segments.length}...`\n        });\n\n        // Télécharger la vidéo\n        const videoData = await fetchFile(segment.video.videoUrl);\n        await this.ffmpeg.writeFile(`video_${segment.planIndex}.mp4`, videoData);\n\n      } catch (error) {\n        console.warn(`Failed to download video ${segment.planIndex}:`, error);\n        throw new Error(`Failed to download video for plan ${segment.planIndex}`);\n      }\n    }\n  }\n\n  /**\n   * Génère la commande FFmpeg pour assembler les vidéos\n   */\n  private generateFFmpegCommand(\n    segments: VideoSegment[],\n    audioFile: File,\n    config: VideoExportConfig,\n    compression: 'high' | 'medium'\n  ): string[] {\n    const compConfig = config.compressions[compression];\n    const command: string[] = [];\n\n    // Inputs pour chaque segment vidéo\n    segments.forEach((segment, index) => {\n      command.push('-i', `video_${segment.planIndex}.mp4`);\n    });\n\n    // Input audio\n    command.push('-i', 'audio.wav');\n\n    // Créer le filtre complexe pour concaténer les vidéos\n    const filterComplex: string[] = [];\n    \n    segments.forEach((segment, index) => {\n      const duration = segment.endTime - segment.startTime;\n      const trimStart = segment.trimSettings?.startTime || 0;\n      const trimEnd = segment.trimSettings?.endTime || segment.video.duration;\n      const trimDuration = Math.min(trimEnd - trimStart, duration);\n\n      // Trimmer et redimensionner chaque vidéo\n      filterComplex.push(\n        `[${index}:v]trim=start=${trimStart}:duration=${trimDuration},setpts=PTS-STARTPTS,scale=${compConfig.width}:${compConfig.height}:force_original_aspect_ratio=decrease,pad=${compConfig.width}:${compConfig.height}:(ow-iw)/2:(oh-ih)/2[v${index}]`\n      );\n    });\n\n    // Concaténer toutes les vidéos\n    const concatInputs = segments.map((_, index) => `[v${index}]`).join('');\n    filterComplex.push(`${concatInputs}concat=n=${segments.length}:v=1:a=0[outv]`);\n\n    command.push('-filter_complex', filterComplex.join(';'));\n\n    // Map les streams\n    command.push('-map', '[outv]');\n    command.push('-map', `${segments.length}:a`); // Audio stream\n\n    // Paramètres d'encodage\n    command.push('-c:v', 'libx264');\n    command.push('-b:v', compConfig.bitrate);\n    command.push('-c:a', 'aac');\n    command.push('-b:a', '128k');\n    command.push('-movflags', '+faststart');\n\n    command.push(`output_${compression}.mp4`);\n\n    return command;\n  }\n\n  /**\n   * Exporte une vidéo finale avec audio\n   */\n  async exportFinalVideo(\n    cutMarkers: CutMarker[],\n    videoAssignments: Map<number, VideoAsset>,\n    audioFile: File,\n    audioStartTime: number,\n    audioEndTime: number,\n    videoTrims: Map<number, { startTime: number; endTime: number }> = new Map(),\n    compression: 'high' | 'medium' = 'high',\n    config: VideoExportConfig = {\n      compressions: {\n        high: { width: 720, height: 1280, bitrate: '2M' },    // 720p HD\n        medium: { width: 360, height: 640, bitrate: '800k' }  // 360p SD\n      },\n      thumbnails: DEFAULT_THUMBNAIL_CONFIGS\n    },\n    onProgress?: (progress: ExportProgress) => void\n  ): Promise<FinalVideoExport> {\n    try {\n      // Initialiser FFmpeg\n      await this.initialize(onProgress);\n\n      // Créer les segments vidéo\n      const segments = this.createVideoSegments(\n        cutMarkers,\n        videoAssignments,\n        audioStartTime,\n        audioEndTime,\n        videoTrims\n      );\n\n      if (segments.length === 0) {\n        throw new Error('No video segments to export');\n      }\n\n      onProgress?.({\n        stage: 'processing',\n        progress: 0,\n        message: 'Preparing video export...'\n      });\n\n      // Télécharger et préparer les vidéos\n      await this.downloadAndPrepareVideos(segments, onProgress);\n\n      // Préparer l'audio\n      const audioData = await fetchFile(audioFile);\n      await this.ffmpeg.writeFile('audio.wav', audioData);\n\n      onProgress?.({\n        stage: 'encoding',\n        progress: 0,\n        message: 'Encoding final video...'\n      });\n\n      // Générer et exécuter la commande FFmpeg\n      const ffmpegCommand = this.generateFFmpegCommand(segments, audioFile, config, compression);\n      await this.ffmpeg.exec(ffmpegCommand);\n\n      // Récupérer la vidéo finale\n      const videoData = await this.ffmpeg.readFile(`output_${compression}.mp4`);\n      const videoBlob = new Blob([videoData], { type: 'video/mp4' });\n\n      onProgress?.({\n        stage: 'thumbnails',\n        progress: 0,\n        message: 'Generating thumbnails...'\n      });\n\n      // Générer les thumbnails à partir de la première vidéo\n      const firstVideo = document.createElement('video');\n      firstVideo.src = segments[0].video.videoUrl;\n      firstVideo.crossOrigin = 'anonymous';\n\n      await new Promise((resolve) => {\n        firstVideo.addEventListener('loadedmetadata', resolve);\n        firstVideo.load();\n      });\n\n      const thumbnails = await generateVideoThumbnails(\n        firstVideo,\n        segments[0].trimSettings?.startTime || 0,\n        config.thumbnails\n      );\n\n      onProgress?.({\n        stage: 'complete',\n        progress: 100,\n        message: 'Export complete!'\n      });\n\n      const compConfig = config.compressions[compression];\n      \n      return {\n        videoBlob,\n        thumbnailLarge: thumbnails.large,\n        thumbnailSmall: thumbnails.small,\n        metadata: {\n          duration: audioEndTime - audioStartTime,\n          resolution: `${compConfig.width}x${compConfig.height}`,\n          fileSize: videoBlob.size,\n          compression\n        }\n      };\n\n    } catch (error) {\n      console.error('Video export failed:', error);\n      throw new Error(`Video export failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Nettoie les fichiers temporaires\n   */\n  async cleanup(): Promise<void> {\n    try {\n      // Lister tous les fichiers et les supprimer\n      const files = await this.ffmpeg.listDir('/');\n      for (const file of files) {\n        if (file.name !== '.' && file.name !== '..') {\n          await this.ffmpeg.deleteFile(file.name);\n        }\n      }\n    } catch (error) {\n      console.warn('Failed to cleanup temporary files:', error);\n    }\n  }\n}\n\n// Instance singleton pour réutiliser FFmpeg\nexport const videoEditor = new VideoEditor(); ","/**\n * Utilitaire pour détecter SharedArrayBuffer et diagnostiquer les problèmes CORS\n */\n\nexport interface SharedArrayBufferStatus {\n  available: boolean;\n  reason: string;\n  suggestions: string[];\n}\n\n/**\n * Détecte si SharedArrayBuffer est disponible et pourquoi\n */\nexport function detectSharedArrayBuffer(): SharedArrayBufferStatus {\n  // Vérifier si SharedArrayBuffer existe\n  if (typeof SharedArrayBuffer === 'undefined') {\n    return {\n      available: false,\n      reason: 'SharedArrayBuffer not supported by browser',\n      suggestions: [\n        'Use a modern browser (Chrome 68+, Firefox 79+, Safari 15.2+)',\n        'Ensure you are on HTTPS (required for SharedArrayBuffer)'\n      ]\n    };\n  }\n\n  // Tester si SharedArrayBuffer peut être instancié\n  try {\n    new SharedArrayBuffer(1);\n    return {\n      available: true,\n      reason: 'SharedArrayBuffer is fully available',\n      suggestions: ['FFmpeg.js should work correctly']\n    };\n  } catch (error) {\n    // SharedArrayBuffer existe mais ne peut pas être utilisé\n    // Cela indique généralement un problème de headers CORS\n    return {\n      available: false,\n      reason: 'SharedArrayBuffer blocked by CORS policy',\n      suggestions: [\n        'Check that Cross-Origin-Opener-Policy: same-origin header is set',\n        'Check that Cross-Origin-Embedder-Policy: require-corp or credentialless header is set',\n        'Verify headers in DevTools -> Network -> HTML response -> Headers',\n        'Clear Netlify cache and redeploy if headers were recently added'\n      ]\n    };\n  }\n}\n\n/**\n * Affiche les informations de diagnostic dans la console\n */\nexport function logSharedArrayBufferDiagnostic(): SharedArrayBufferStatus {\n  const status = detectSharedArrayBuffer();\n  \n  console.group('🔍 SharedArrayBuffer Diagnostic');\n  console.log('Available:', status.available);\n  console.log('Reason:', status.reason);\n  console.log('Suggestions:');\n  status.suggestions.forEach((suggestion, index) => {\n    console.log(`  ${index + 1}. ${suggestion}`);\n  });\n  console.groupEnd();\n  \n  return status;\n}\n\n/**\n * Headers CORS recommandés pour FFmpeg.js\n */\nexport const RECOMMENDED_CORS_HEADERS = {\n  'Cross-Origin-Opener-Policy': 'same-origin',\n  'Cross-Origin-Embedder-Policy': 'credentialless' // Moins restrictif que require-corp\n};\n\n/**\n * URL pour tester les headers CORS\n */\nexport function generateHeadersTestUrl(domain: string): string {\n  return `https://webcorstest.com/scan/${domain}`;\n} ","import React, { useState, useCallback, useMemo } from 'react';\nimport { Download, Loader, CheckCircle, AlertCircle, Package } from 'lucide-react';\nimport { CutMarker, AudioFile } from '../types';\nimport { VideoAsset } from '../types/video';\nimport { FileNamingService, ProjectSettings } from '../services/fileNamingService';\nimport { trimAudioFile } from '../utils/audioTrimmer';\nimport { generateVideoThumbnails, downloadThumbnail } from '../utils/thumbnailGenerator';\nimport { videoEditor } from '../services/videoEditor';\nimport { detectSharedArrayBuffer, logSharedArrayBufferDiagnostic } from '../utils/sharedarraybuffer-detection';\n\ninterface MasterExportPanelProps {\n  audioFile: AudioFile;\n  cutMarkers: CutMarker[];\n  startTime: number;\n  endTime: number;\n  videoAssignments: Map<number, VideoAsset>;\n  videoTrimSettings: Map<number, { startTime: number; endTime: number }>;\n}\n\ninterface ExportProgress {\n  step: string;\n  progress: number;\n  message: string;\n  isComplete: boolean;\n}\n\ninterface ExportStatus {\n  json: 'pending' | 'success' | 'error';\n  audio: 'pending' | 'success' | 'error';\n  video720p: 'pending' | 'success' | 'error';\n  video360p: 'pending' | 'success' | 'error';\n  thumbnailLarge: 'pending' | 'success' | 'error';\n  thumbnailSmall: 'pending' | 'success' | 'error';\n}\n\nexport const MasterExportPanel: React.FC<MasterExportPanelProps> = ({\n  audioFile,\n  cutMarkers,\n  startTime,\n  endTime,\n  videoAssignments,\n  videoTrimSettings\n}) => {\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportProgress, setExportProgress] = useState<ExportProgress | null>(null);\n  const [exportStatus, setExportStatus] = useState<ExportStatus>({\n    json: 'pending',\n    audio: 'pending',\n    video720p: 'pending',\n    video360p: 'pending',\n    thumbnailLarge: 'pending',\n    thumbnailSmall: 'pending',\n  });\n  const [error, setError] = useState<string | null>(null);\n\n  // Export Settings - Extract from DOM or use defaults\n  const exportSettings = useMemo(() => {\n    return FileNamingService.extractSettingsFromDOM() || {\n      category: 'Travel',\n      templateNumber: '006',\n      musicId: '012'\n    };\n  }, []);\n\n  const canExport = useMemo(() => {\n    const duration = endTime - startTime;\n    const hasValidDuration = duration > 0 && duration <= 30;\n    const hasVideos = videoAssignments.size > 0;\n    const hasAudio = !!audioFile;\n    \n    return hasValidDuration && hasVideos && hasAudio;\n  }, [audioFile, videoAssignments.size, startTime, endTime]);\n\n  const updateProgress = useCallback((step: string, progress: number, message: string, isComplete = false) => {\n    setExportProgress({ step, progress, message, isComplete });\n  }, []);\n\n  const updateStatus = useCallback((key: keyof ExportStatus, status: 'pending' | 'success' | 'error') => {\n    setExportStatus(prev => ({ ...prev, [key]: status }));\n  }, []);\n\n  const generateSnapcutJSON = useCallback(() => {\n    const now = Date.now() / 1000;\n    const trimmedDuration = endTime - startTime;\n    const namingContext = FileNamingService.createContext(exportSettings, cutMarkers, trimmedDuration);\n    const audioFileName = FileNamingService.generateMusicFilename(namingContext, startTime, endTime);\n\n    // Create video segments based on cut markers\n    const sortedCuts = [...cutMarkers].sort((a, b) => a.time - b.time);\n    const mainTimeline: any[] = [];\n    \n    // First segment (Plan 1)\n    const firstCutTime = sortedCuts.length > 0 ? sortedCuts[0].time : endTime;\n    const firstDuration = Math.min(firstCutTime, endTime) - startTime;\n    \n    if (firstDuration > 0) {\n      mainTimeline.push({\n        duration: firstDuration,\n        startTime: 0,\n        mediaType: 'video',\n        fileName: 'placeholder_video_1.mp4',\n        playbackSpeed: 1,\n        isMuted: true\n      });\n    }\n\n    // Subsequent segments\n    for (let i = 0; i < sortedCuts.length; i++) {\n      const cut = sortedCuts[i];\n      const nextCut = sortedCuts[i + 1];\n      const segmentEnd = nextCut ? Math.min(nextCut.time, endTime) : endTime;\n      const segmentDuration = segmentEnd - cut.time;\n      \n      if (segmentDuration > 0) {\n        mainTimeline.push({\n          duration: segmentDuration,\n          startTime: cut.time - startTime,\n          mediaType: 'video',\n          fileName: `placeholder_video_${i + 2}.mp4`,\n          playbackSpeed: 1,\n          isMuted: true\n        });\n      }\n    }\n\n    return {\n      id: crypto.randomUUID().toUpperCase(),\n      title: FileNamingService.generateProjectFilename(namingContext).replace('.json', ''),\n      lastModificationDate: now,\n      editionProject: {\n        mainTimeline,\n        aspectRatio: { r_9_16: {} },\n        superpositionTimeline: [],\n        audioTimeline: [{\n          duration: trimmedDuration,\n          startTime: 0,\n          fileName: audioFileName,\n          gain: 1,\n          playbackSpeed: 1,\n          fileTrimStart: startTime,\n          isMuted: false\n        }]\n      }\n    };\n  }, [audioFile, cutMarkers, startTime, endTime, exportSettings]);\n\n  const exportAll = useCallback(async () => {\n    if (!canExport) return;\n\n    setIsExporting(true);\n    setError(null);\n    setExportStatus({\n      json: 'pending',\n      audio: 'pending',\n      video720p: 'pending',\n      video360p: 'pending',\n      thumbnailLarge: 'pending',\n      thumbnailSmall: 'pending',\n    });\n\n    try {\n      const namingContext = FileNamingService.createContext(exportSettings, cutMarkers, endTime - startTime);\n\n      // 1. Export JSON\n      updateProgress('JSON Export', 10, 'Generating Snapcut project file...');\n      try {\n        const snapcutData = generateSnapcutJSON();\n        const jsonBlob = new Blob([JSON.stringify(snapcutData, null, 2)], { type: 'application/json' });\n        const jsonFilename = FileNamingService.generateProjectFilename(namingContext);\n        \n        const jsonUrl = URL.createObjectURL(jsonBlob);\n        const jsonLink = document.createElement('a');\n        jsonLink.href = jsonUrl;\n        jsonLink.download = jsonFilename;\n        document.body.appendChild(jsonLink);\n        jsonLink.click();\n        document.body.removeChild(jsonLink);\n        URL.revokeObjectURL(jsonUrl);\n        \n        updateStatus('json', 'success');\n      } catch (error) {\n        updateStatus('json', 'error');\n        throw new Error(`JSON export failed: ${error}`);\n      }\n\n      // 2. Export Audio\n      updateProgress('Audio Export', 25, 'Trimming and exporting audio...');\n      try {\n        const trimmedAudioBlob = await trimAudioFile(audioFile.file, {\n          startTime,\n          endTime,\n          originalFileName: audioFile.name\n        });\n        \n        const audioFilename = FileNamingService.generateMusicFilename(namingContext, startTime, endTime);\n        const audioUrl = URL.createObjectURL(trimmedAudioBlob);\n        const audioLink = document.createElement('a');\n        audioLink.href = audioUrl;\n        audioLink.download = audioFilename;\n        document.body.appendChild(audioLink);\n        audioLink.click();\n        document.body.removeChild(audioLink);\n        URL.revokeObjectURL(audioUrl);\n        \n        updateStatus('audio', 'success');\n      } catch (error) {\n        updateStatus('audio', 'error');\n        throw new Error(`Audio export failed: ${error}`);\n      }\n\n      // 3. Export Videos (720p and 360p) with fallback\n      updateProgress('Video Export', 40, 'Initializing video export...');\n      \n      let hasVideoExportError = false;\n      let videoExportErrorMessage = '';\n\n      try {\n        // 720p Export\n        updateProgress('Video Export', 45, 'Exporting 720p video...');\n        const video720p = await videoEditor.exportFinalVideo(\n          cutMarkers,\n          videoAssignments,\n          audioFile.file,\n          startTime,\n          endTime,\n          videoTrimSettings,\n          'high', // 720p\n          {\n            compressions: {\n              high: { width: 720, height: 1280, bitrate: '2M' },\n              medium: { width: 360, height: 640, bitrate: '800k' }\n            },\n            thumbnails: {\n              large: { width: 1080, height: 1920, quality: 0.9, format: 'jpeg' as const },\n              small: { width: 540, height: 960, quality: 0.8, format: 'jpeg' as const }\n            }\n          },\n          (progress) => {\n            if (progress.stage === 'encoding') {\n              updateProgress('Video Export', 45 + (progress.progress * 15), `720p: ${progress.message}`);\n            }\n          }\n        );\n\n        // Download 720p\n        const video720pFilename = FileNamingService.generateFinalVideoFilename(namingContext, 'high');\n        const video720pUrl = URL.createObjectURL(video720p.videoBlob);\n        const video720pLink = document.createElement('a');\n        video720pLink.href = video720pUrl;\n        video720pLink.download = video720pFilename;\n        document.body.appendChild(video720pLink);\n        video720pLink.click();\n        document.body.removeChild(video720pLink);\n        URL.revokeObjectURL(video720pUrl);\n        \n        updateStatus('video720p', 'success');\n\n        // 360p Export\n        updateProgress('Video Export', 65, 'Exporting 360p video...');\n        const video360p = await videoEditor.exportFinalVideo(\n          cutMarkers,\n          videoAssignments,\n          audioFile.file,\n          startTime,\n          endTime,\n          videoTrimSettings,\n          'medium', // 360p\n          {\n            compressions: {\n              high: { width: 720, height: 1280, bitrate: '2M' },\n              medium: { width: 360, height: 640, bitrate: '800k' }\n            },\n            thumbnails: {\n              large: { width: 1080, height: 1920, quality: 0.9, format: 'jpeg' as const },\n              small: { width: 540, height: 960, quality: 0.8, format: 'jpeg' as const }\n            }\n          },\n          (progress) => {\n            if (progress.stage === 'encoding') {\n              updateProgress('Video Export', 65 + (progress.progress * 15), `360p: ${progress.message}`);\n            }\n          }\n        );\n\n        // Download 360p\n        const video360pFilename = FileNamingService.generateFinalVideoFilename(namingContext, 'medium');\n        const video360pUrl = URL.createObjectURL(video360p.videoBlob);\n        const video360pLink = document.createElement('a');\n        video360pLink.href = video360pUrl;\n        video360pLink.download = video360pFilename;\n        document.body.appendChild(video360pLink);\n        video360pLink.click();\n        document.body.removeChild(video360pLink);\n        URL.revokeObjectURL(video360pUrl);\n        \n        updateStatus('video360p', 'success');\n\n        // 4. Export Thumbnails (from 720p video)\n        updateProgress('Thumbnails', 85, 'Generating thumbnails...');\n        \n        // Download Large Thumbnail\n        const largeThumbnailFilename = FileNamingService.generateThumbnailFilename(namingContext, 'large', 1080, 1920, 'jpeg');\n        downloadThumbnail(video720p.thumbnailLarge, largeThumbnailFilename);\n        updateStatus('thumbnailLarge', 'success');\n\n        // Small delay between downloads\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Download Small Thumbnail\n        const smallThumbnailFilename = FileNamingService.generateThumbnailFilename(namingContext, 'small', 540, 960, 'jpeg');\n        downloadThumbnail(video720p.thumbnailSmall, smallThumbnailFilename);\n        updateStatus('thumbnailSmall', 'success');\n\n      } catch (error) {\n        console.warn('Video export failed, continuing with fallback mode:', error);\n        hasVideoExportError = true;\n        videoExportErrorMessage = error instanceof Error ? error.message : 'Unknown video export error';\n        \n        updateStatus('video720p', 'error');\n        updateStatus('video360p', 'error');\n        \n                 // Fallback: Generate thumbnails from the first video\n         try {\n           updateProgress('Thumbnails', 85, 'Generating thumbnails (fallback mode)...');\n           \n           const firstVideo = videoAssignments.get(1);\n           if (firstVideo) {\n             const { generateThumbnailFromUrl, downloadThumbnail } = await import('../utils/thumbnailGenerator');\n             \n             // Generate Large Thumbnail\n             const largeThumbnail = await generateThumbnailFromUrl(firstVideo.videoUrl, {\n               width: 1080, \n               height: 1920, \n               quality: 0.9, \n               format: 'jpeg' as const\n             });\n\n             // Download Large Thumbnail\n             const largeThumbnailFilename = FileNamingService.generateThumbnailFilename(namingContext, 'large', 1080, 1920, 'jpeg');\n             downloadThumbnail(largeThumbnail, largeThumbnailFilename);\n             updateStatus('thumbnailLarge', 'success');\n\n             // Small delay between downloads\n             await new Promise(resolve => setTimeout(resolve, 500));\n             \n             // Generate Small Thumbnail\n             const smallThumbnail = await generateThumbnailFromUrl(firstVideo.videoUrl, {\n               width: 540, \n               height: 960, \n               quality: 0.8, \n               format: 'jpeg' as const\n             });\n             \n             // Download Small Thumbnail\n             const smallThumbnailFilename = FileNamingService.generateThumbnailFilename(namingContext, 'small', 540, 960, 'jpeg');\n             downloadThumbnail(smallThumbnail, smallThumbnailFilename);\n             updateStatus('thumbnailSmall', 'success');\n           } else {\n             updateStatus('thumbnailLarge', 'error');\n             updateStatus('thumbnailSmall', 'error');\n           }\n         } catch (thumbError) {\n           console.warn('Thumbnail fallback also failed:', thumbError);\n           updateStatus('thumbnailLarge', 'error');\n           updateStatus('thumbnailSmall', 'error');\n         }\n      }\n\n      // Complete\n      updateProgress('Complete', 100, hasVideoExportError ? 'Export completed with limitations' : 'All files exported successfully!', true);\n\n      // Success message\n      setTimeout(() => {\n        const basePrefix = `${exportSettings.category}_${exportSettings.templateNumber}_${exportSettings.musicId}_${cutMarkers.length + 1}_${Math.ceil(endTime - startTime)}s`;\n        \n        if (hasVideoExportError) {\n          const successCount = 2 + (exportStatus.thumbnailLarge === 'success' ? 1 : 0) + (exportStatus.thumbnailSmall === 'success' ? 1 : 0);\n          alert(`⚠️ Export Completed with Limitations!\\n\\n✅ ${successCount} files downloaded successfully:\\n• ${basePrefix}_project.json\\n• ${basePrefix}_music_trimmed_*.wav${exportStatus.thumbnailLarge === 'success' ? `\\n• ${basePrefix}_thumbnail_large_*.jpeg` : ''}${exportStatus.thumbnailSmall === 'success' ? `\\n• ${basePrefix}_thumbnail_small_*.jpeg` : ''}\\n\\n❌ Video export failed (FFmpeg not available in production)\\n💡 Use the individual raw videos from the Pexels panel instead\\n\\n🚀 JSON and Audio are ready for Snapcut!`);\n        } else {\n          alert(`🎉 Export Complete!\\n\\n✅ All 6 files downloaded:\\n• ${basePrefix}_project.json\\n• ${basePrefix}_music_trimmed_*.wav\\n• ${basePrefix}_render_HD.mp4 (720p)\\n• ${basePrefix}_render_SD.mp4 (360p)\\n• ${basePrefix}_thumbnail_large_*.jpeg\\n• ${basePrefix}_thumbnail_small_*.jpeg\\n\\n🚀 Ready for Snapcut!`);\n        }\n      }, 1000);\n\n    } catch (error) {\n      console.error('Master export failed:', error);\n      setError(error instanceof Error ? error.message : 'Export failed');\n    } finally {\n      setIsExporting(false);\n      setTimeout(() => {\n        setExportProgress(null);\n      }, 3000);\n    }\n  }, [canExport, cutMarkers, startTime, endTime, audioFile, videoAssignments, videoTrimSettings, exportSettings, generateSnapcutJSON, updateProgress, updateStatus]);\n\n  const getStatusIcon = (status: 'pending' | 'success' | 'error') => {\n    switch (status) {\n      case 'pending':\n        return <div className=\"w-4 h-4 rounded-full bg-slate-400\"></div>;\n      case 'success':\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case 'error':\n        return <AlertCircle className=\"w-4 h-4 text-red-500\" />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-xl shadow-lg p-6\">\n        <div className=\"flex items-center gap-3 mb-6\">\n          <div className=\"w-12 h-12 bg-gradient-to-r from-green-500 to-blue-500 rounded-xl flex items-center justify-center\">\n            <Package className=\"w-6 h-6 text-white\" />\n          </div>\n          <div>\n            <h2 className=\"text-xl font-bold text-slate-800\">Complete Export</h2>\n            <p className=\"text-sm text-slate-600\">\n              {exportProgress?.isComplete && exportProgress.message.includes('limitations') \n                ? 'Downloaded available files: JSON, Audio, Thumbnails (video export failed)'\n                : 'Download all 6 files: JSON, Audio, 2 Videos, 2 Thumbnails'\n              }\n            </p>\n          </div>\n        </div>\n\n        {/* Export Status Grid */}\n        {isExporting && (\n          <div className=\"mb-6 p-4 bg-slate-50 rounded-lg\">\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 text-sm\">\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(exportStatus.json)}\n                <span>Project JSON</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(exportStatus.audio)}\n                <span>Audio Track</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(exportStatus.video720p)}\n                <span>Video 720p</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(exportStatus.video360p)}\n                <span>Video 360p</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(exportStatus.thumbnailLarge)}\n                <span>Thumbnail Large</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(exportStatus.thumbnailSmall)}\n                <span>Thumbnail Small</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Progress Bar */}\n        {exportProgress && (\n          <div className=\"mb-6\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <span className=\"text-sm font-medium text-slate-700\">{exportProgress.step}</span>\n              <span className=\"text-sm text-slate-500\">{exportProgress.progress}%</span>\n            </div>\n            <div className=\"w-full bg-slate-200 rounded-full h-2\">\n              <div \n                className=\"bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${exportProgress.progress}%` }}\n              ></div>\n            </div>\n            <div className=\"mt-1 text-xs text-slate-600\">{exportProgress.message}</div>\n          </div>\n        )}\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 text-red-700 text-sm\">\n              <AlertCircle className=\"w-4 h-4\" />\n              <span><strong>Export Failed:</strong> {error}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Export Button */}\n        <div className=\"flex flex-col items-center gap-4\">\n          <button\n            onClick={exportAll}\n            disabled={!canExport || isExporting}\n            className=\"w-full max-w-md flex items-center justify-center gap-3 p-4 bg-gradient-to-r from-green-500 to-blue-500 text-white rounded-lg hover:from-green-600 hover:to-blue-600 disabled:opacity-50 disabled:cursor-not-allowed font-medium transition-all text-lg\"\n          >\n            {isExporting ? (\n              <>\n                <Loader className=\"w-5 h-5 animate-spin\" />\n                Exporting...\n              </>\n            ) : (\n              <>\n                <Download className=\"w-5 h-5\" />\n                Download All (6 Files)\n              </>\n            )}\n          </button>\n\n          <div className=\"text-center text-sm text-slate-500 space-y-1\">\n            <p>Includes: JSON Template, Audio Track, Videos (720p + 360p), Thumbnails (Large + Small)</p>\n            {(() => {\n              const sabStatus = detectSharedArrayBuffer();\n              if (!sabStatus.available) {\n                return (\n                  <div className=\"mt-2 p-3 bg-amber-500/10 border border-amber-500/20 rounded-lg text-amber-200 text-xs space-y-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span className=\"font-medium\">⚠️ FFmpeg.js Limited: {sabStatus.reason}</span>\n                    </div>\n                    <button\n                      onClick={() => {\n                        logSharedArrayBufferDiagnostic();\n                        alert(`SharedArrayBuffer Diagnostic:\\n\\n${sabStatus.reason}\\n\\nSuggestions:\\n${sabStatus.suggestions.map((s, i) => `${i + 1}. ${s}`).join('\\n')}\\n\\nCheck console for detailed diagnostic.`);\n                      }}\n                      className=\"text-amber-300 hover:text-amber-100 underline text-xs\"\n                    >\n                      🔍 Run Diagnostic (check console)\n                    </button>\n                  </div>\n                );\n              }\n              return null;\n            })()}\n            {!canExport && (\n              <p className=\"text-red-500\">\n                {!audioFile ? 'Upload audio file first' : \n                 videoAssignments.size === 0 ? 'Assign videos to plans first' :\n                 (endTime - startTime) > 30 ? 'Reduce duration to ≤ 30 seconds' :\n                 (endTime - startTime) <= 0 ? 'Set valid audio trim points' :\n                 'Ready to export!'}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useCallback, useMemo } from 'react';\nimport { Shuffle, Search, Download, X, RefreshCw, Filter, User } from 'lucide-react';\nimport { VideoTheme, VideoAsset } from '../types/video';\nimport { pexelsService } from '../services/pexelsService';\nimport { FileNamingService } from '../services/fileNamingService';\n\ninterface PexelsVideoManagerProps {\n  cutMarkers: any[];\n  startTime: number;\n  endTime: number;\n  onVideoAssignmentsChange: (assignments: Map<number, VideoAsset>) => void;\n}\n\nconst THEMES: { value: VideoTheme; label: string; icon: string }[] = [\n  { value: 'Travel', label: 'Travel', icon: '✈️' },\n  { value: 'Lifestyle', label: 'Lifestyle', icon: '🏠' },\n  { value: 'Fashion', label: 'Fashion', icon: '👗' },\n  { value: 'Retro', label: 'Retro', icon: '📼' },\n  { value: 'Party', label: 'Party', icon: '🎉' },\n  { value: 'Sport', label: 'Sport', icon: '⚽' },\n  { value: 'Games', label: 'Games', icon: '🎮' },\n  { value: 'Food', label: 'Food', icon: '🍴' },\n  { value: 'Vlog', label: 'Vlog', icon: '📱' },\n  { value: 'social', label: 'Social', icon: '📢' },\n];\n\nexport const PexelsVideoManager: React.FC<PexelsVideoManagerProps> = ({\n  cutMarkers,\n  startTime,\n  endTime,\n  onVideoAssignmentsChange\n}) => {\n  const [showManager, setShowManager] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState<VideoTheme>('Travel');\n  const [keywords, setKeywords] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState<VideoAsset[]>([]);\n  const [videoAssignments, setVideoAssignments] = useState<Map<number, VideoAsset>>(new Map());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMoreVideos, setHasMoreVideos] = useState(true);\n  \n  // Nouveaux filtres\n  const [selectedAuthor, setSelectedAuthor] = useState<string>('');\n  const [minDuration, setMinDuration] = useState<number>(0);\n  const [maxDuration, setMaxDuration] = useState<number>(60);\n\n  // Calcul du nombre de plans\n  const totalPlans = cutMarkers.length + 1;\n\n  // Génération automatique du nom du projet avec le service centralisé\n  const projectFilename = useMemo(() => {\n    const projectSettings = FileNamingService.extractSettingsFromDOM() || {\n      category: selectedTheme,\n      templateNumber: Math.floor(startTime).toString().padStart(3, '0'),\n      musicId: Math.floor(endTime).toString().padStart(3, '0')\n    };\n    \n    const namingContext = FileNamingService.createContext(\n      projectSettings,\n      cutMarkers,\n      endTime - startTime\n    );\n    \n    return FileNamingService.generateProjectFilename(namingContext);\n  }, [selectedTheme, startTime, endTime, totalPlans, cutMarkers]);\n\n  // Filtrer les résultats selon les critères\n  const filteredResults = useMemo(() => {\n    let filtered = [...searchResults];\n    \n    // Filtre par auteur\n    if (selectedAuthor) {\n      filtered = filtered.filter(video => video.author.name === selectedAuthor);\n    }\n    \n    // Filtre par durée\n    filtered = filtered.filter(video => \n      video.duration >= minDuration && video.duration <= maxDuration\n    );\n    \n    return filtered;\n  }, [searchResults, selectedAuthor, minDuration, maxDuration]);\n\n  // Obtenir la liste unique des auteurs\n  const availableAuthors = useMemo(() => {\n    const authors = Array.from(new Set(searchResults.map(video => video.author.name)));\n    return authors.sort();\n  }, [searchResults]);\n\n  // Réinitialiser les filtres\n  const resetFilters = useCallback(() => {\n    setSelectedAuthor('');\n    setMinDuration(0);\n    setMaxDuration(60);\n  }, []);\n\n  // Sélectionner un auteur\n  const handleAuthorClick = useCallback((authorName: string) => {\n    setSelectedAuthor(selectedAuthor === authorName ? '' : authorName);\n  }, [selectedAuthor]);\n\n  const searchVideos = useCallback(async (loadMore = false) => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const pageToLoad = loadMore ? currentPage + 1 : 1;\n      const keywordArray = keywords.trim() \n        ? keywords.split(',').map(k => k.trim()).filter(k => k.length > 0)\n        : [];\n\n      const results = await pexelsService.searchVideosByTheme(\n        {\n          theme: selectedTheme,\n          perPage: 30,\n          page: pageToLoad,\n          orientation: 'portrait'\n        },\n        keywordArray\n      );\n\n      if (loadMore) {\n        setSearchResults(prev => [...prev, ...results]);\n        setCurrentPage(pageToLoad);\n      } else {\n        setSearchResults(results);\n        setCurrentPage(1);\n      }\n\n      // Vérifier s'il y a plus de vidéos (si on reçoit moins de 30 vidéos, c'est qu'on est à la fin)\n      setHasMoreVideos(results.length === 30);\n      \n    } catch (error) {\n      console.error('Error searching videos:', error);\n      alert('Erreur lors de la recherche de vidéos. Veuillez réessayer.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedTheme, keywords, isLoading, currentPage]);\n\n  const loadMoreVideos = useCallback(() => {\n    searchVideos(true);\n  }, [searchVideos]);\n\n  const shuffleVideos = useCallback(() => {\n    if (filteredResults.length === 0) {\n      alert(searchResults.length === 0 ? 'Lancez d\\'abord une recherche de vidéos !' : 'Aucune vidéo ne correspond aux filtres actuels !');\n      return;\n    }\n\n    const newAssignments = new Map<number, VideoAsset>();\n    const availableVideos = [...filteredResults];\n\n    // Assigner une vidéo aléatoire à chaque plan\n    for (let planIndex = 1; planIndex <= totalPlans; planIndex++) {\n      if (availableVideos.length > 0) {\n        const randomIndex = Math.floor(Math.random() * availableVideos.length);\n        const selectedVideo = availableVideos.splice(randomIndex, 1)[0];\n        newAssignments.set(planIndex, selectedVideo);\n      }\n    }\n\n    setVideoAssignments(newAssignments);\n    onVideoAssignmentsChange(newAssignments);\n  }, [filteredResults, searchResults.length, totalPlans, onVideoAssignmentsChange]);\n\n  const assignVideoToPlan = (planIndex: number, video: VideoAsset) => {\n    const newAssignments = new Map(videoAssignments);\n    newAssignments.set(planIndex, video);\n    setVideoAssignments(newAssignments);\n    onVideoAssignmentsChange(newAssignments);\n  };\n\n  const removeVideoFromPlan = (planIndex: number) => {\n    const newAssignments = new Map(videoAssignments);\n    newAssignments.delete(planIndex);\n    setVideoAssignments(newAssignments);\n    onVideoAssignmentsChange(newAssignments);\n  };\n\n  const downloadAllVideos = useCallback(async () => {\n    if (videoAssignments.size === 0) {\n      alert('Aucune vidéo assignée à télécharger !');\n      return;\n    }\n\n    const baseProjectName = projectFilename.replace('.json', '').replace('_project', '');\n    \n    setIsLoading(true);\n    try {\n      let videoIndex = 1;\n      for (const [planIndex, video] of videoAssignments.entries()) {\n        const filename = `${baseProjectName}_video${videoIndex}.mp4`;\n        \n        // Télécharger la vidéo\n        const response = await fetch(video.videoUrl);\n        const blob = await response.blob();\n        \n        // Créer le lien de téléchargement\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        \n        // Petit délai entre les téléchargements\n        await new Promise(resolve => setTimeout(resolve, 500));\n        videoIndex++;\n      }\n      \n              console.log(`✅ ${videoAssignments.size} vidéos téléchargées avec le naming: ${projectFilename.replace('.json', '_project')}`);\n    } catch (error) {\n      console.error('Erreur lors du téléchargement:', error);\n      alert('Erreur lors du téléchargement des vidéos.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [videoAssignments, projectFilename]);\n\n  if (!showManager) {\n    return (\n      <div className=\"bg-slate-700/30 rounded-xl p-4 border border-slate-600/30\">\n        <button\n          onClick={() => setShowManager(true)}\n          className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-200 flex items-center justify-center space-x-2\"\n        >\n          <Search className=\"w-5 h-5\" />\n          <span>Add Pexel Videos</span>\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-slate-700/30 rounded-xl p-6 border border-slate-600/30 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n          <Search className=\"w-5 h-5\" />\n          <span>Pexels Video Manager</span>\n        </h3>\n        <button\n          onClick={() => setShowManager(false)}\n          className=\"text-slate-400 hover:text-white p-1\"\n        >\n          <X className=\"w-5 h-5\" />\n        </button>\n      </div>\n\n      {/* Theme Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n          Thème\n        </label>\n        <div className=\"grid grid-cols-5 gap-2\">\n          {THEMES.map((theme) => (\n            <button\n              key={theme.value}\n              onClick={() => setSelectedTheme(theme.value)}\n              className={`p-3 rounded-lg border-2 transition-all duration-200 text-center ${\n                selectedTheme === theme.value\n                  ? 'border-blue-400 bg-blue-400/20 text-white'\n                  : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\n              }`}\n            >\n              <div className=\"text-lg mb-1\">{theme.icon}</div>\n              <div className=\"text-xs font-medium\">{theme.label}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Project Name Display */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n          Nom du projet (généré automatiquement)\n        </label>\n        <div className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600 rounded-lg text-white text-sm font-mono\">\n          {projectFilename.replace('.json', '')}\n        </div>\n        <div className=\"text-xs text-slate-400 mt-1\">\n          Format: {selectedTheme}_{Math.floor(startTime).toString().padStart(3, '0')}_{Math.floor(endTime).toString().padStart(3, '0')}_{totalPlans}_{Math.floor(endTime - startTime)}s_project\n        </div>\n      </div>\n\n      {/* Keywords */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n          Mots-clés (séparés par des virgules, optionnel)\n        </label>\n        <input\n          type=\"text\"\n          value={keywords}\n          onChange={(e) => setKeywords(e.target.value)}\n          placeholder=\"nature, sunset, ocean...\"\n          className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600 rounded-lg text-white text-sm focus:border-blue-400 focus:outline-none transition-colors\"\n        />\n      </div>\n\n      {/* Filtres */}\n      {searchResults.length > 0 && (\n        <div className=\"border-t border-slate-600 pt-4\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h4 className=\"text-sm font-medium text-gray-300 flex items-center space-x-2\">\n              <Filter className=\"w-4 h-4\" />\n              <span>Filtres</span>\n            </h4>\n            <button\n              onClick={resetFilters}\n              className=\"text-xs text-slate-400 hover:text-white transition-colors\"\n            >\n              Réinitialiser\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            {/* Filtre par durée */}\n            <div>\n              <label className=\"block text-xs font-medium text-gray-400 mb-2\">\n                Durée (secondes)\n              </label>\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"number\"\n                  value={minDuration}\n                  onChange={(e) => setMinDuration(Math.max(0, parseInt(e.target.value) || 0))}\n                  placeholder=\"Min\"\n                  className=\"w-full px-2 py-1 bg-slate-700/50 border border-slate-600 rounded text-white text-xs focus:border-blue-400 focus:outline-none\"\n                />\n                <span className=\"text-slate-400 text-xs\">-</span>\n                <input\n                  type=\"number\"\n                  value={maxDuration}\n                  onChange={(e) => setMaxDuration(Math.max(minDuration, parseInt(e.target.value) || 60))}\n                  placeholder=\"Max\"\n                  className=\"w-full px-2 py-1 bg-slate-700/50 border border-slate-600 rounded text-white text-xs focus:border-blue-400 focus:outline-none\"\n                />\n              </div>\n            </div>\n\n            {/* Filtre par auteur */}\n            <div>\n              <label className=\"block text-xs font-medium text-gray-400 mb-2\">\n                Auteur ({availableAuthors.length})\n              </label>\n              <select\n                value={selectedAuthor}\n                onChange={(e) => setSelectedAuthor(e.target.value)}\n                className=\"w-full px-2 py-1 bg-slate-700/50 border border-slate-600 rounded text-white text-xs focus:border-blue-400 focus:outline-none\"\n              >\n                <option value=\"\">Tous les auteurs</option>\n                {availableAuthors.map((author) => (\n                  <option key={author} value={author}>\n                    {author}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Statistiques des filtres */}\n          <div className=\"mt-2 text-xs text-slate-400\">\n            {filteredResults.length} vidéo{filteredResults.length !== 1 ? 's' : ''} correspondant{filteredResults.length !== 1 ? 'es' : 'e'}\n            {selectedAuthor && ` • Auteur: ${selectedAuthor}`}\n            {(minDuration > 0 || maxDuration < 60) && ` • Durée: ${minDuration}-${maxDuration}s`}\n          </div>\n        </div>\n      )}\n\n      {/* Actions */}\n      <div className=\"flex items-center space-x-3\">\n        <button\n          onClick={() => {\n            setCurrentPage(1);\n            setHasMoreVideos(true);\n            searchVideos(false);\n          }}\n          disabled={isLoading}\n          className=\"flex-1 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-600/50 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center space-x-2\"\n        >\n          {isLoading && currentPage === 1 ? (\n            <RefreshCw className=\"w-4 h-4 animate-spin\" />\n          ) : (\n            <Search className=\"w-4 h-4\" />\n          )}\n          <span>Rechercher</span>\n        </button>\n\n        <button\n          onClick={shuffleVideos}\n          disabled={filteredResults.length === 0 || isLoading}\n          className=\"bg-purple-600 hover:bg-purple-700 disabled:bg-purple-600/50 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center space-x-2\"\n        >\n          <Shuffle className=\"w-4 h-4\" />\n          <span>Shuffle</span>\n        </button>\n\n        {videoAssignments.size > 0 && (\n          <button\n            onClick={downloadAllVideos}\n            disabled={isLoading}\n            className=\"bg-green-600 hover:bg-green-700 disabled:bg-green-600/50 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center space-x-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            <span>Download All</span>\n          </button>\n        )}\n      </div>\n\n      {/* Search Results */}\n      {searchResults.length > 0 && (\n        <div>\n          <h4 className=\"text-md font-medium text-white mb-3\">\n            Résultats de recherche ({searchResults.length} vidéos{filteredResults.length !== searchResults.length ? ` • ${filteredResults.length} affichées` : ''})\n          </h4>\n          {filteredResults.length === 0 ? (\n            <div className=\"text-center py-8 text-slate-400\">\n              <Filter className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n              <p>Aucune vidéo ne correspond aux filtres</p>\n              <button\n                onClick={resetFilters}\n                className=\"text-blue-400 hover:text-blue-300 text-sm mt-2 underline\"\n              >\n                Réinitialiser les filtres\n              </button>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-6 gap-2 max-h-[600px] overflow-y-auto custom-scrollbar\">\n              {filteredResults.map((video) => (\n              <div\n                key={video.id}\n                className=\"relative group bg-slate-800/50 rounded-lg overflow-hidden border border-slate-600/50 hover:border-slate-500 transition-colors\"\n              >\n                <div className=\"aspect-[9/16] relative\">\n                  <img\n                    src={video.thumbnail}\n                    alt={video.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <div className=\"p-2\">\n                  <div className=\"text-xs text-white font-medium truncate mb-1\">\n                    {video.title}\n                  </div>\n                  <div className=\"text-xs text-slate-400 flex items-center space-x-1\">\n                    <span>{video.duration}s</span>\n                    <span>•</span>\n                    <button\n                      onClick={() => handleAuthorClick(video.author.name)}\n                      className={`hover:text-blue-400 transition-colors underline decoration-dotted ${\n                        selectedAuthor === video.author.name ? 'text-blue-400 font-medium' : ''\n                      }`}\n                      title={`Filtrer par ${video.author.name}`}\n                    >\n                      {video.author.name}\n                    </button>\n                  </div>\n                </div>\n                <div className=\"absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <div className=\"text-xs text-white mb-2 font-medium\">Assigner au plan:</div>\n                    <div className=\"flex flex-wrap justify-center gap-1\">\n                      {Array.from({ length: totalPlans }, (_, i) => i + 1).map((planIndex) => (\n                        <button\n                          key={planIndex}\n                          onClick={() => assignVideoToPlan(planIndex, video)}\n                          className={`w-6 h-6 rounded text-xs font-bold transition-colors ${\n                            videoAssignments.get(planIndex)?.id === video.id\n                              ? 'bg-green-500 text-white shadow-lg'\n                              : 'bg-slate-600 text-white hover:bg-blue-500'\n                          }`}\n                        >\n                          {planIndex}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              ))}\n            </div>\n          )}\n          \n          {/* Load More Button */}\n          {hasMoreVideos && !isLoading && (\n            <div className=\"flex justify-center mt-4\">\n              <button\n                onClick={loadMoreVideos}\n                className=\"bg-slate-600 hover:bg-slate-500 text-white font-medium py-2 px-6 rounded-lg transition-colors flex items-center space-x-2\"\n              >\n                <span>Load 30 more videos</span>\n              </button>\n            </div>\n          )}\n          \n          {isLoading && currentPage > 1 && (\n            <div className=\"flex justify-center mt-4\">\n              <div className=\"text-slate-400 text-sm flex items-center space-x-2\">\n                <div className=\"w-4 h-4 border-2 border-slate-400 border-t-transparent rounded-full animate-spin\"></div>\n                <span>Loading more videos...</span>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Current Assignments */}\n      {videoAssignments.size > 0 && (\n        <div>\n          <h4 className=\"text-md font-medium text-white mb-3\">\n            Vidéos assignées ({videoAssignments.size}/{totalPlans} plans)\n          </h4>\n          <div className=\"space-y-2\">\n            {Array.from(videoAssignments.entries()).map(([planIndex, video]) => (\n              <div\n                key={planIndex}\n                className=\"flex items-center justify-between bg-slate-800/50 rounded-lg p-3 border border-slate-600/50\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-bold\">\n                    {planIndex}\n                  </div>\n                  <img\n                    src={video.thumbnail}\n                    alt={video.title}\n                    className=\"w-12 h-8 object-cover rounded\"\n                  />\n                  <div>\n                    <div className=\"text-sm text-white font-medium truncate max-w-[200px]\">\n                      {video.title}\n                    </div>\n                    <div className=\"text-xs text-slate-400\">\n                      {video.duration}s • {video.author.name}\n                    </div>\n                  </div>\n                </div>\n                <button\n                  onClick={() => removeVideoFromPlan(planIndex)}\n                  className=\"text-red-400 hover:text-red-300 p-1\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}; ","import { VideoAsset, VideoTheme } from '../types/video';\nimport { CutMarker, PlanVideoAssignment } from '../types';\nimport { videoService } from './videoService';\n\n/**\n * Service pour assigner automatiquement des vidéos aux plans\n */\nclass PlanVideoAssigner {\n  private currentAssignments: Map<number, VideoAsset> = new Map();\n  private availableVideos: VideoAsset[] = [];\n  private currentTheme: VideoTheme = 'travel';\n\n  /**\n   * Assigne automatiquement des vidéos aux plans selon le thème\n   */\n  async assignVideosToPlans(\n    cutMarkers: CutMarker[],\n    theme: VideoTheme,\n    forceReassign = false,\n    customKeywords?: string[]\n  ): Promise<Map<number, VideoAsset>> {\n    \n    // Si même thème et pas de force reassign, retourner les assignations existantes\n    if (this.currentTheme === theme && !forceReassign && this.currentAssignments.size > 0) {\n      return this.currentAssignments;\n    }\n\n    this.currentTheme = theme;\n    \n    try {\n      // Charger les vidéos pour le thème\n      const keywordInfo = customKeywords && customKeywords.length > 0 \n        ? ` with keywords: [${customKeywords.join(', ')}]` \n        : '';\n      console.log(`🎬 Loading videos for theme \"${theme}\"${keywordInfo}`);\n      this.availableVideos = await videoService.getVideosByTheme(theme, false, customKeywords);\n      \n      if (this.availableVideos.length === 0) {\n        console.warn(`No videos available for theme \"${theme}\"`);\n        return this.currentAssignments;\n      }\n\n      // Calculer le nombre de plans\n      const planCount = cutMarkers.length + 1;\n      \n      // Nettoyer les anciennes assignations\n      this.currentAssignments.clear();\n\n      // Assigner des vidéos de manière intelligente\n      for (let planIndex = 1; planIndex <= planCount; planIndex++) {\n        const video = this.selectVideoForPlan(planIndex, planCount);\n        if (video) {\n          this.currentAssignments.set(planIndex, video);\n        }\n      }\n\n      console.log(`✅ Assigned videos to ${this.currentAssignments.size} plans`);\n      return this.currentAssignments;\n\n    } catch (error) {\n      console.error('Failed to assign videos to plans:', error);\n      return this.currentAssignments;\n    }\n  }\n\n  /**\n   * Sélectionne intelligemment une vidéo pour un plan donné\n   */\n  private selectVideoForPlan(planIndex: number, totalPlans: number): VideoAsset | null {\n    if (this.availableVideos.length === 0) return null;\n\n    // Stratégies de sélection selon la position du plan\n    const strategies = {\n      // Premier plan : vidéo impactante\n      first: () => this.availableVideos.find(v => \n        v.tags.some(tag => ['travel', 'landscape', 'adventure', 'city'].includes(tag.toLowerCase()))\n      ) || this.availableVideos[0],\n\n      // Plan du milieu : vidéo d'action/transition\n      middle: () => this.availableVideos.find(v => \n        v.tags.some(tag => ['action', 'movement', 'dynamic', 'people'].includes(tag.toLowerCase()))\n      ) || this.availableVideos[Math.floor(this.availableVideos.length / 2)],\n\n      // Dernier plan : vidéo de conclusion\n      last: () => this.availableVideos.find(v => \n        v.tags.some(tag => ['sunset', 'peaceful', 'ending', 'beautiful'].includes(tag.toLowerCase()))\n      ) || this.availableVideos[this.availableVideos.length - 1],\n\n      // Plans intermédiaires : rotation équilibrée\n      intermediate: (index: number) => {\n        const videoIndex = (index - 1) % this.availableVideos.length;\n        return this.availableVideos[videoIndex];\n      }\n    };\n\n    // Appliquer la stratégie appropriée\n    if (planIndex === 1) {\n      return strategies.first();\n    } else if (planIndex === totalPlans && totalPlans > 2) {\n      return strategies.last();\n    } else if (totalPlans > 4 && planIndex === Math.ceil(totalPlans / 2)) {\n      return strategies.middle();\n    } else {\n      return strategies.intermediate(planIndex);\n    }\n  }\n\n  /**\n   * Obtient la vidéo assignée à un plan\n   */\n  getVideoForPlan(planIndex: number): VideoAsset | null {\n    return this.currentAssignments.get(planIndex) || null;\n  }\n\n  /**\n   * Obtient toutes les assignations actuelles\n   */\n  getAllAssignments(): Map<number, VideoAsset> {\n    return new Map(this.currentAssignments);\n  }\n\n  /**\n   * Obtient les métadonnées des assignations\n   */\n  getAssignmentStats() {\n    return {\n      totalPlans: this.currentAssignments.size,\n      currentTheme: this.currentTheme,\n      availableVideos: this.availableVideos.length,\n      assignments: Array.from(this.currentAssignments.entries()).map(([plan, video]) => ({\n        planIndex: plan,\n        videoTitle: video.title,\n        videoId: video.id,\n        videoDuration: Math.round(video.duration),\n        videoTags: video.tags.slice(0, 3)\n      }))\n    };\n  }\n\n  /**\n   * Réassigne une vidéo spécifique à un plan\n   */\n  reassignVideoToPlan(planIndex: number, videoId: string): boolean {\n    const video = this.availableVideos.find(v => v.id === videoId);\n    if (video) {\n      this.currentAssignments.set(planIndex, video);\n      console.log(`🔄 Reassigned plan ${planIndex} to video \"${video.title}\"`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Mélange aléatoirement les assignations\n   */\n  shuffleAssignments(): Map<number, VideoAsset> {\n    if (this.availableVideos.length === 0) return this.currentAssignments;\n\n    const planIndexes = Array.from(this.currentAssignments.keys());\n    const shuffledVideos = [...this.availableVideos].sort(() => Math.random() - 0.5);\n\n    planIndexes.forEach((planIndex, i) => {\n      const video = shuffledVideos[i % shuffledVideos.length];\n      this.currentAssignments.set(planIndex, video);\n    });\n\n    console.log('🎲 Shuffled video assignments');\n    return this.currentAssignments;\n  }\n\n  /**\n   * Nettoie les assignations\n   */\n  clearAssignments(): void {\n    this.currentAssignments.clear();\n    this.availableVideos = [];\n    console.log('🗑️ Cleared video assignments');\n  }\n\n  /**\n   * Obtient les vidéos disponibles pour le thème actuel\n   */\n  getAvailableVideos(): VideoAsset[] {\n    return [...this.availableVideos];\n  }\n\n  /**\n   * Prévisualise l'assignation sans l'appliquer\n   */\n  previewAssignment(cutMarkers: CutMarker[], theme: VideoTheme): {\n    planCount: number;\n    availableVideos: number;\n    previewAssignments: Array<{ planIndex: number; videoTitle: string; }>\n  } {\n    const planCount = cutMarkers.length + 1;\n    const availableCount = this.availableVideos.length;\n    \n    const preview = [];\n    for (let i = 1; i <= Math.min(planCount, 5); i++) { // Preview max 5 plans\n      const video = this.selectVideoForPlan(i, planCount);\n      preview.push({\n        planIndex: i,\n        videoTitle: video?.title || 'No video available'\n      });\n    }\n\n    return {\n      planCount,\n      availableVideos: availableCount,\n      previewAssignments: preview\n    };\n  }\n}\n\n// Instance singleton\nexport const planVideoAssigner = new PlanVideoAssigner();\nexport default planVideoAssigner; ","import React, { useState, useCallback, useEffect } from 'react';\nimport { Headphones, Zap, Music, Upload } from 'lucide-react';\nimport { AudioUploader } from './components/AudioUploader';\nimport { AudioPlayer } from './components/AudioPlayer';\nimport { WaveformVisualizer } from './components/WaveformVisualizer';\nimport { PreviewPanel } from './components/PreviewPanel';\nimport { ExportPanel } from './components/ExportPanel';\nimport { RandomModeDialog } from './components/RandomModeDialog';\nimport { ThemeSelector } from './components/ThemeSelector';\nimport { VideoDebug } from './components/VideoDebug';\n\nimport { MasterExportPanel } from './components/MasterExportPanel';\nimport { PexelsVideoManager } from './components/PexelsVideoManager';\nimport { generateRandomCuts } from './utils/randomCutGenerator';\nimport { AudioFile, BeatMarker, CutMarker, TimelineState } from './types';\nimport { VideoTheme, VideoAsset } from './types/video';\nimport { videoService } from './services/videoService';\nimport { planVideoAssigner } from './services/planVideoAssigner';\n\nconst COLORS = ['#F97316', '#3B82F6', '#10B981', '#8B5CF6', '#EF4444', '#F59E0B'];\n\nfunction App() {\n  const [audioFile, setAudioFile] = useState<AudioFile | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [beatMarkers, setBeatMarkers] = useState<BeatMarker[]>([]);\n  const [cutMarkers, setCutMarkers] = useState<CutMarker[]>([]);\n  const [timelineState, setTimelineState] = useState<TimelineState>({\n    currentTime: 0,\n    isPlaying: false,\n    zoom: 1,\n    startTime: 0,\n    endTime: 0\n  });\n  const [isLooping, setIsLooping] = useState(false);\n  const [isRandomModeOpen, setIsRandomModeOpen] = useState(false);\n  \n  // Video system states\n  const [currentTheme, setCurrentTheme] = useState<VideoTheme>('Travel');\n  const [isLoadingVideos, setIsLoadingVideos] = useState(false);\n  const [videoAssignments, setVideoAssignments] = useState<Map<number, VideoAsset>>(new Map());\n  const [videoTrimSettings, setVideoTrimSettings] = useState<Map<number, { startTime: number; endTime: number }>>(new Map());\n\n  const handleAudioLoad = useCallback((file: AudioFile) => {\n    setIsLoading(true);\n    setAudioFile(file);\n    setTimelineState(prev => ({\n      ...prev,\n      startTime: 0,\n      endTime: file.duration,\n      currentTime: 0,\n      isPlaying: false,\n      zoom: 1\n    }));\n    setCutMarkers([]);\n    setBeatMarkers([]);\n    setIsLoading(false);\n  }, []);\n\n  const handleBeatDetected = useCallback((beats: BeatMarker[]) => {\n    setBeatMarkers(beats);\n  }, []);\n\n  const handleAddCut = useCallback((time: number) => {\n    if (!audioFile) return;\n\n    const nextCut = cutMarkers.find(cut => cut.time > time);\n    const defaultDuration = nextCut ? Math.min(nextCut.time - time, 1) : 1;\n\n    const newCut: CutMarker = {\n      id: crypto.randomUUID(),\n      time,\n      color: COLORS[cutMarkers.length % COLORS.length],\n      duration: defaultDuration\n    };\n\n    setCutMarkers(prev => [...prev, newCut].sort((a, b) => a.time - b.time));\n  }, [audioFile, cutMarkers]);\n\n  const handleRemoveCut = useCallback((id: string) => {\n    setCutMarkers(prev => prev.filter(cut => cut.id !== id));\n  }, []);\n\n  const handleMoveCut = useCallback((id: string, newTime: number) => {\n    setCutMarkers(prev => prev.map(cut => \n      cut.id === id ? { ...cut, time: newTime } : cut\n    ).sort((a, b) => a.time - b.time));\n  }, []);\n\n  const handleSeek = useCallback((time: number) => {\n    setTimelineState(prev => ({ ...prev, currentTime: time }));\n  }, []);\n\n  const handlePlayPause = useCallback(() => {\n    setTimelineState(prev => ({ ...prev, isPlaying: !prev.isPlaying }));\n  }, []);\n\n  const handleStop = useCallback(() => {\n    setTimelineState(prev => ({ \n      ...prev, \n      isPlaying: false, \n      currentTime: prev.startTime \n    }));\n  }, []);\n\n  const handleToggleLoop = useCallback(() => {\n    setIsLooping(prev => !prev);\n  }, []);\n\n  const handleTrimChange = useCallback((start: number, end: number) => {\n    setTimelineState(prev => ({\n      ...prev,\n      startTime: start,\n      endTime: end\n    }));\n  }, []);\n\n  const handleZoomChange = useCallback((zoom: number) => {\n    setTimelineState(prev => ({ ...prev, zoom }));\n  }, []);\n\n  const handleRandomMode = useCallback(() => {\n    setIsRandomModeOpen(true);\n  }, []);\n\n  const handleRandomModeClose = useCallback(() => {\n    setIsRandomModeOpen(false);\n  }, []);\n\n  const handleGenerateRandomCuts = useCallback((planCount: number) => {\n    if (!audioFile || beatMarkers.length === 0) return;\n\n    const newCuts = generateRandomCuts({\n      startTime: timelineState.startTime,\n      endTime: timelineState.endTime,\n      planCount,\n      beatMarkers,\n      minCutInterval: 0.8,\n      prioritizeStrongBeats: true\n    });\n\n    setCutMarkers(newCuts);\n    setIsRandomModeOpen(false);\n  }, [audioFile, beatMarkers, timelineState.startTime, timelineState.endTime]);\n\n  // Video system handlers\n  const handleThemeChange = useCallback(async (theme: VideoTheme, customKeywords?: string[]) => {\n    setCurrentTheme(theme);\n    setIsLoadingVideos(true);\n    \n    try {\n      // TOUJOURS forcer le refresh pour éviter les problèmes de cache\n      await videoService.getVideosByTheme(theme, true, customKeywords); // Force refresh = true\n      const newAssignments = await planVideoAssigner.assignVideosToPlans(\n        cutMarkers,\n        theme,\n        true, // Force reassign for new theme\n        customKeywords\n      );\n      setVideoAssignments(newAssignments);\n      \n      const keywordInfo = customKeywords && customKeywords.length > 0 \n        ? ` with keywords: [${customKeywords.join(', ')}]` \n        : '';\n      console.log(`🎬 Theme changed to \"${theme}\"${keywordInfo} - CACHE CLEARED`);\n    } catch (error) {\n      console.error('Failed to load videos for theme:', error);\n    } finally {\n      setIsLoadingVideos(false);\n    }\n  }, [cutMarkers]);\n\n  const handleVideoAssignmentsChange = useCallback((assignments: Map<number, VideoAsset>) => {\n    setVideoAssignments(assignments);\n  }, []);\n\n  const handleVideoTrimChange = useCallback((planIndex: number, startTime: number, endTime: number) => {\n    setVideoTrimSettings(prev => {\n      const newSettings = new Map(prev);\n      newSettings.set(planIndex, { startTime, endTime });\n      return newSettings;\n    });\n    console.log(`🎬 Video trim updated for Plan ${planIndex}: ${startTime.toFixed(2)}s - ${endTime.toFixed(2)}s`);\n  }, []);\n\n  // Preload popular video themes when audio is loaded\n  useEffect(() => {\n    if (audioFile) {\n      videoService.preloadPopularThemes().catch(error => \n        console.warn('Failed to preload video themes:', error)\n      );\n    }\n  }, [audioFile]);\n\n  // Handle looping\n  useEffect(() => {\n    if (timelineState.currentTime < timelineState.startTime) {\n      setTimelineState(prev => ({ \n        ...prev, \n        currentTime: prev.startTime \n      }));\n    }\n  }, [timelineState.currentTime, timelineState.startTime]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (!audioFile) return;\n\n      // Désactiver les raccourcis si l'utilisateur est dans un champ de saisie\n      const activeElement = document.activeElement;\n      const isInputField = activeElement && (\n        activeElement.tagName === 'INPUT' ||\n        activeElement.tagName === 'TEXTAREA' ||\n        activeElement.tagName === 'SELECT' ||\n        activeElement.getAttribute('contenteditable') === 'true'\n      );\n      \n      if (isInputField) return; // Ne pas traiter les raccourcis dans les champs de saisie\n\n      switch (e.code) {\n        case 'Space':\n          e.preventDefault();\n          handlePlayPause();\n          break;\n        case 'KeyC':\n          e.preventDefault();\n          handleAddCut(timelineState.currentTime);\n          break;\n        case 'KeyI':\n          e.preventDefault();\n          setTimelineState(prev => ({ ...prev, startTime: prev.currentTime }));\n          break;\n        case 'KeyO':\n          e.preventDefault();\n          setTimelineState(prev => ({ ...prev, endTime: prev.currentTime }));\n          break;\n        case 'KeyL':\n          e.preventDefault();\n          handleToggleLoop();\n          break;\n        case 'ArrowLeft':\n          e.preventDefault();\n          handleSeek(Math.max(0, timelineState.currentTime - 0.1));\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          handleSeek(Math.min(audioFile.duration, timelineState.currentTime + 0.1));\n          break;\n        case 'KeyR':\n          e.preventDefault();\n          handleRandomMode();\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [audioFile, timelineState, handlePlayPause, handleAddCut, handleSeek, handleToggleLoop]);\n\n  const handleNewProject = () => {\n    setAudioFile(null);\n    setCutMarkers([]);\n    setBeatMarkers([]);\n    setTimelineState({\n      currentTime: 0,\n      isPlaying: false,\n      zoom: 1,\n      startTime: 0,\n      endTime: 0\n    });\n    setIsLooping(false);\n    setIsRandomModeOpen(false);\n    // Reset video system\n    setCurrentTheme('Travel');\n    setIsLoadingVideos(false);\n    setVideoTrimSettings(new Map());\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\n      {/* Header */}\n      <header className=\"border-b border-slate-700/50 bg-slate-900/80 backdrop-blur-sm sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg\">\n                <Zap className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold text-white\">Snapcut Beat Editor</h1>\n                <p className=\"text-xs text-slate-400\">Create beat-synced video templates</p>\n              </div>\n            </div>\n            \n            {audioFile && (\n              <button\n                onClick={handleNewProject}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors text-sm font-medium text-white\"\n              >\n                <Upload className=\"w-4 h-4\" />\n                <span>New Project</span>\n              </button>\n            )}\n          </div>\n        </div>\n      </header>\n\n      {!audioFile ? (\n        <div className=\"flex items-center justify-center min-h-[calc(100vh-4rem)] pb-8\">\n          <div className=\"w-full max-w-2xl mx-auto px-4\">\n            <AudioUploader onAudioLoad={handleAudioLoad} isLoading={isLoading} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          {/* Main Content */}\n          <div className=\"grid grid-cols-1 2xl:grid-cols-4 gap-6\">\n            {/* Timeline Section - Takes most space */}\n            <div className=\"2xl:col-span-3 space-y-6\">\n              {/* Audio Controls */}\n              <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl border border-slate-700/50 p-6 shadow-xl\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\n                  <div className=\"flex items-center space-x-3 min-w-0\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-orange-500 to-red-500 rounded-xl flex items-center justify-center shadow-lg flex-shrink-0\">\n                      <Music className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div className=\"min-w-0\">\n                      <h2 className=\"text-lg font-semibold text-white truncate\">{audioFile.name}</h2>\n                      <p className=\"text-sm text-slate-400\">\n                        {Math.floor(audioFile.duration / 60)}:{Math.floor(audioFile.duration % 60).toString().padStart(2, '0')}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex-shrink-0\">\n                    <AudioPlayer\n                      audioFile={audioFile}\n                      currentTime={timelineState.currentTime}\n                      isPlaying={timelineState.isPlaying}\n                      onTimeUpdate={handleSeek}\n                      onPlayPause={handlePlayPause}\n                      startTime={timelineState.startTime}\n                      endTime={timelineState.endTime}\n                      isLooping={isLooping}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Waveform */}\n              <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl border border-slate-700/50 shadow-xl overflow-hidden\">\n                <WaveformVisualizer\n                  audioFile={audioFile}\n                  currentTime={timelineState.currentTime}\n                  isPlaying={timelineState.isPlaying}\n                  beatMarkers={beatMarkers}\n                  cutMarkers={cutMarkers}\n                  startTime={timelineState.startTime}\n                  endTime={timelineState.endTime}\n                  onBeatDetected={handleBeatDetected}\n                  onAddCut={handleAddCut}\n                  onRemoveCut={handleRemoveCut}\n                  onMoveCut={handleMoveCut}\n                  onSeek={handleSeek}\n                  onTrimChange={handleTrimChange}\n                  zoom={timelineState.zoom}\n                  onZoomChange={handleZoomChange}\n                  onStop={handleStop}\n                  isLooping={isLooping}\n                  onToggleLoop={handleToggleLoop}\n                  onRandomMode={handleRandomMode}\n                />\n              </div>\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"2xl:col-span-1 space-y-6\">\n              {/* Preview */}\n              <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl border border-slate-700/50 p-6 shadow-xl\">\n                <PreviewPanel \n                  cutMarkers={cutMarkers}\n                  currentTime={timelineState.currentTime}\n                  currentTheme={currentTheme}\n                  startTime={timelineState.startTime}\n                  endTime={timelineState.endTime}\n                  videoAssignments={videoAssignments}\n                  onVideoAssignmentsChange={handleVideoAssignmentsChange}\n                  audioDuration={audioFile?.duration || 0}\n                  onVideoTrimChange={handleVideoTrimChange}\n                  videoTrimSettings={videoTrimSettings}\n                />\n              </div>\n\n              {/* Pexels Video Manager */}\n              <PexelsVideoManager\n                cutMarkers={cutMarkers}\n                startTime={timelineState.startTime}\n                endTime={timelineState.endTime}\n                onVideoAssignmentsChange={handleVideoAssignmentsChange}\n              />\n\n              {/* Export Panel */}\n              <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl border border-slate-700/50 p-6 shadow-xl\">\n                <ExportPanel\n                  audioFile={audioFile}\n                  cutMarkers={cutMarkers}\n                  startTime={timelineState.startTime}\n                  endTime={timelineState.endTime}\n                  videoAssignments={videoAssignments}\n                />\n              </div>\n\n\n\n            </div>\n          </div>\n\n          {/* Master Export Panel - Clean UI at the bottom */}\n          {audioFile && (\n            <div className=\"mt-8\">\n              <MasterExportPanel\n                audioFile={audioFile}\n                cutMarkers={cutMarkers}\n                startTime={timelineState.startTime}\n                endTime={timelineState.endTime}\n                videoAssignments={videoAssignments}\n                videoTrimSettings={videoTrimSettings}\n              />\n            </div>\n          )}\n\n        </div>\n      )}\n\n      {/* Random Mode Dialog */}\n      <RandomModeDialog\n        isOpen={isRandomModeOpen}\n        onClose={handleRandomModeClose}\n        onGenerate={handleGenerateRandomCuts}\n        hasInOutPoints={timelineState.startTime < timelineState.endTime && timelineState.endTime > timelineState.startTime + 1}\n        startTime={timelineState.startTime}\n        endTime={timelineState.endTime}\n        duration={audioFile?.duration || 0}\n        existingCutsCount={cutMarkers.length}\n      />\n\n      {/* Video Debug Panel (development only) */}\n      <VideoDebug />\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"file":"assets/index-DPBD0MyM.js"}